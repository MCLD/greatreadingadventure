@model GRA.Controllers.ViewModel.PerformerRegistration.Home.DashboardViewModel

<div class="row">
    <div class="modal fade" id="branchModal" tabindex="-1" role="dialog" aria-labelledby="branchModalLabel">
        <div class="modal-dialog" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
                    <h4 class="modal-title" id="branchModalLabel">Branch Selection</h4>
                </div>
                <div class="modal-body" style="max-height: calc(100vh - 200px); overflow-y:auto;">
                    @foreach (var system in Model.Systems)
                    {
                        <div style="font-size:x-large;margin-bottom:10px;">
                            <strong>@system.Name</strong>
                        </div>
                        @foreach (var branch in system.Branches)
                        {
                            <div>
                                <span class="colored-icon fa fa-lg @(Model.BranchAvailability.Contains(branch.Id) || Model.Performer.AllBranches ? "fa-check" : "fa-times")"></span>
                                <label data-toggle="tooltip" data-placement="top" title="@branch.Address">@branch.Name</label>
                                <a href="https://www.google.com/maps/search/@branch.Address" target="_blank"><span class="fa fa-map-o"></span></a>
                            </div>
                        }
                        <br />
                    }
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-default" data-dismiss="modal" style="margin-right: 1em;">Close</button>
                </div>
            </div>
        </div>
    </div>
</div>

<div class="row">
    <div class="modal fade" id="deleteModal" tabindex="-1" role="dialog" aria-labelledby="deleteModalLabel">
        <div class="modal-dialog" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
                    <h4 class="modal-title" id="deleteModalLabel">Delete program</h4>
                </div>
                <div class="modal-body">
                    <span class="fa fa-exclamation-triangle" aria-hidden="true"></span>
                    <span id="modal-text"></span>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-default" data-dismiss="modal" style="margin-right: 1em;">Cancel</button>
                    <form asp-action="ProgramDelete" method="post" role="form" style="display:inline">
                        <input asp-for="ProgramToDelete.Id" type="hidden" />
                        <input asp-for="ProgramToDelete.Title" type="hidden" />
                        <button type="submit" class="btn btn-danger btn-spinner pull-right" aria-label="Confirm">
                            <span class="fa fa-remove" aria-hidden="true"></span>
                            Delete
                            <span class="fa fa-spinner fa-pulse fa-fw hidden"></span>
                        </button>
                    </form>
                </div>
            </div>
        </div>
    </div>
</div>

<div class="row">
    <div class="col-xs-12">
        <h1>
            Performer Dashboard
        </h1>
        @if (Model.IsEditable)
        {
            <p>
                Information can be edited and new programs can be added until @Model.Settings.RegistrationClosed.Value.ToString("dddd, MMMM dd, yyyy h:mm tt").
            </p>
        }
        else
        {
            <p>
                Registration has closed, if any changes need to be made please contact <a href="@($"mailto:{Model.Settings.ContactEmail}")">@Model.Settings.ContactEmail</a>
            </p>

        }
    </div>

    <div class="col-xs-12">
        <hr />
        <h2 style="margin-top:0px;">
            Performer Information
            @if (Model.IsEditable)
            {
                <a asp-action="Information" class="btn btn-default" style="display:inline-block">Edit Information</a>
            }
        </h2>
    </div>
    <div class="col-xs-12 col-sm-5 col-md-4">
        @if (!string.IsNullOrWhiteSpace(Model.ImagePath))
        {
            <div class="row" style="padding-bottom:15px;">
                <div class="col-xs-12">
                    <img src="~/@Model.ImagePath" class="img-responsive" style="margin: 0 auto;" />
                </div>
            </div>
        }
        <div class="row" style="padding-bottom:15px;">
            <div class="col-xs-12" style="text-align:center;">
                <a asp-action="Images" class="btn btn-primary">@(Model.IsEditable ? "View/Manage Images" : "View Images")</a>
            </div>
        </div>
        <div class="row" style="padding-bottom:15px;">
            <div class="col-xs-12" style="text-align:center;">
                <a href="~/@Model.ReferencesPath" target="_blank" class="btn btn-primary">View References</a>
            </div>
        </div>
    </div>
    <div class="col-xs-12 col-sm-7 col-md-8">
        <div class="form-group">
            <label>Name</label>
            <div>@Model.Performer.Name</div>
        </div>
        <div class="form-group">
            <label>Billing Address</label>
            <div>@Model.Performer.BillingAddress</div>
        </div>
        <div class="form-group">
            <label>Email @(Model.Performer.PhonePreferred ? "" : "(prefered)") </label>
            <div>@Model.Performer.Email</div>
        </div>
        <div class="form-group">
            <label>Phone @(Model.Performer.PhonePreferred ? "(prefered)" : "")</label>
            <div>@Model.Performer.Phone</div>
        </div>
        <div class="form-group">
            <label>Website</label>
            @if (string.IsNullOrWhiteSpace(Model.Performer.Website))
            {
                <div>n/a</div>
            }
            else
            {
                <div>
                    @if (Model.Uri != null)
                    {
                        <a href="@Model.Uri" target="_blank">@Model.Performer.Website</a>
                    }
                    else
                    {
                        <div>@Model.Performer.Website</div>
                    }
                </div>
            }
        </div>
        <div class="form-group">
            <label>@Model.Settings.VendorIdPrompt</label>
            <div>@Model.Performer.VendorId</div>
        </div>
        <div class="form-group">
            <label>Has Fingerprint Clearance Card</label>
            <div>@(Model.Performer.HasFingerprintCard ? "Yes" : "No")</div>
        </div>
        <div class="form-group">
            <label>Branches</label>
            <div>@(Model.Performer.AllBranches ? Model.Systems.SelectMany(_ => _.Branches).Count() : Model.Performer.Branches.Count) of @Model.Systems.SelectMany(_ => _.Branches).Count() Selected</div>
            <button type="button" class="btn btn-default" data-toggle="modal" data-target="#branchModal">View Selected Libraries</button>
        </div>
    </div>

    <div class="col-xs-12">
        <hr />
        <h2>
            Programs
            @if (Model.IsEditable)
            {
                <a asp-action="Program" class="btn btn-default" style="display:inline-block">Add Program</a>
            }
        </h2>
    </div>
    <div class="col-xs-12">
        @if (Model.Performer.Programs.Count == 0)
        {
            <div class="alert alert-warning">No Programs.</div>
        }
        else
        {
            <table class="table table-condensed table-bordered link-table">
                <thead>
                    <tr>
                        <th>Name</th>
                        <th>Capacity</th>
                        <th>Length (minutes)</th>
                        <th>Cost</th>
                        @if (Model.IsEditable)
                        {
                            <th>&nbsp;</th>
                        }
                    </tr>
                </thead>
                <tbody>
                    @foreach (var program in Model.Performer.Programs)
                    {
                        <tr>
                            <td class="td-class">
                                <a asp-action="ProgramDetails" asp-route-id="@program.Id" class="rowlink">
                                    @program.Title
                                </a>
                            </td>
                            <td>@program.MinimumCapacity &ndash; @program.MaximumCapacity</td>
                            <td>@program.ProgramLengthMinutes</td>
                            <td>$@program.Cost</td>
                            @if (Model.IsEditable)
                            {
                                <td class="on-top">
                                    <button type="button"
                                            class="btn btn-danger btn-xs"
                                            data-toggle="modal"
                                            data-target="#deleteModal"
                                            data-id="@program.Id"
                                            data-name="@program.Title">
                                        <span class="fa fa-remove" aria-hidden="true"></span>
                                    </button>
                                </td>
                            }
                        </tr>

                    }
                </tbody>
            </table>
        }
    </div>

    <div class="col-xs-12">
        <hr />
        <h2>
            Schedule
            @if (Model.IsEditable)
            {
                <a asp-action="Schedule" class="btn btn-default" style="display:inline-block">Edit Schedule</a>
            }
        </h2>
    </div>

    <div class="col-xs-12">
        @{int count = 0;}
        @for (var calendarMonth = new DateTime(Model.Settings.ScheduleStartDate.Value.Year, Model.Settings.ScheduleStartDate.Value.Month, 1); calendarMonth <= Model.Settings.ScheduleEndDate; calendarMonth = calendarMonth.AddMonths(1))
        {
            @if (count % 3 == 0)
            {
                @Html.Raw("<div class=\"row\">");
            }
            <div class="col-xs-12 col-md-4">
                <table class="table table-condensed">
                    <thead>
                        <tr>
                            <td colspan="2"><strong style="font-size:large">@calendarMonth.ToString("MMMM")</strong></td>
                        </tr>
                    </thead>
                    <tbody>
                        @for (var day = (calendarMonth.Year == Model.Settings.ScheduleStartDate.Value.Year && calendarMonth.Month == Model.Settings.ScheduleStartDate.Value.Month ? Model.Settings.ScheduleStartDate.Value : calendarMonth); day.Day <= DateTime.DaysInMonth(calendarMonth.Year, calendarMonth.Month) && day.Month == calendarMonth.Month && day <= Model.Settings.ScheduleEndDate.Value; day = day.AddDays(1))
                        {
                            <tr>
                                <td style="width: 180px;">
                                    @day.ToShortDateString() @day.Date.DayOfWeek
                                </td>
                                <td>
                                    @{var blackoutDate = Model.BlackoutDates.FirstOrDefault(_ => _.Date == day.Date); }
                                    @if (blackoutDate != null)
                                    {
                                        <div class="blackout-text">@blackoutDate.Reason</div>
                                    }
                                    else
                                    {
                                        var daySchedule = Model.Performer.Schedule.Where(_ => _.Date == day.Date).FirstOrDefault();
                                        if (daySchedule == null)
                                        {
                                            <div class="available-text">Available</div>

                                        }
                                        else if (daySchedule.StartTime.HasValue)
                                        {
                                            <div class="time-text">@daySchedule.StartTime.Value.ToShortTimeString() &ndash; @daySchedule.EndTime.Value.ToShortTimeString() </div>
                                        }
                                        else
                                        {
                                            <div class="unavailable-text">Unavailable</div>
                                        }
                                    }
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
            if (count % 3 == 2)
            {
                @Html.Raw("</div>");
            }
            { count++; }
        }
        @if (count % 3 != 2)
        {
            @Html.Raw("</div>");
        }
    </div>
</div>

@section scripts {
    <script>
        $(window).on("load", function () {
            $(".td-class").each(function () {
                $(this).children("a.rowlink").height($(this).height() + 11);
            });
        });
        $(window).resize(function () {
            $(".td-class").each(function () {
                $(this).children("a.rowlink").height($(this).height() + 11);
            });
        });

        $("#deleteModal").on("show.bs.modal", function (event) {
            var button = $(event.relatedTarget);
            var id = button.data("id");
            var name = button.data("name");
            $(this).find("#modal-text").text("Are you sure you want to delete the program \"" + name + "\"?");
            $(this).find("#ProgramToDelete_Id").val(id);
            $(this).find("#ProgramToDelete_Title").val(name);
        });
    </script>
}
