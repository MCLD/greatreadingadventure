@using System.Globalization
@model GRA.Controllers.ViewModel.MissionControl.VendorCodes.ConfigureViewModel

@if (Model.VendorCodeType.Id > 0)
{
    @await Html.PartialAsync("_VendorCodePartial")
}

<div class="row" style="margin-top: 1rem; margin-bottom: 1rem;">
    <div class="col-12">
        @if (Model.VendorCodeType.Id == default)
        {
            <p>Vendor codes are not yet configured. Use this page to set them up.</p>
        }
        <ul>
            <li>
                If you wish to configure a vendor code to be awarded with a trigger, you only need
                to configure the top fields.
            </li>
            <li>
                If you'd like to give the participant a choice:
                <ol>
                    <li>
                        Fill out the "Option" section
                    </li>
                    <li>
                        Fill out the "Donation" section, the "Email" section, or both.
                    </li>
                </ol>
            </li>
        </ul>
    </div>
</div>

<form asp-action="@nameof(VendorCodesController.UpdateConfiguration)"
      method="post"
      role="form"
      enctype="multipart/form-data">
    <input type="hidden" asp-for="VendorCodeType.SiteId" value="@Model.VendorCodeType.SiteId" />
    <div class="row">
        <div class="col-12">
            <div class="mb-3">
                <label asp-for="VendorCodeType.Description" class="col-form-label"></label>*
                <description gra-description-for="VendorCodeType.Description"></description>
                <input asp-for="VendorCodeType.Description" class="form-control" />
                <span asp-validation-for="VendorCodeType.Description" class="text-danger"></span>
            </div>
        </div>
    </div>
    <input type="hidden" asp-for="VendorCodeType.MessageTemplateId" value="@Model.VendorCodeType.MessageTemplateId">
    @if (Model.VendorCodeType.Id != default)
    {
        <div class="row">
            <div class="col-12">
                <div class="mb-3">
                    <label class="col-form-label" asp-for="VendorCodeType.MessageTemplateId"></label>
                    <description gra-description-for="VendorCodeType.MessageTemplateId"></description>
                    <br />
                    @foreach (var item in Model.Languages)
                    {
                        <a class="btn @Model.LanguageMessageClass(Model.VendorCodeType.MessageTemplateId, item.Value)"
                           data-bs-toggle="modal"
                           data-bs-target="#messageModal"
                           data-item="MessageTemplateId"
                           data-languageid="@item.Value">@item.Key</a>
                    }
                </div>
            </div>
        </div>
    }
    <div class="row">
        <div class="col-12">
            <div class="mb-3">
                <label asp-for="VendorCodeType.Url" class="col-form-label"></label>
                <description gra-description-for="VendorCodeType.Url"></description>
                <input asp-for="VendorCodeType.Url" class="form-control" />
                <span asp-validation-for="VendorCodeType.Url" class="text-danger"></span>
            </div>
        </div>
    </div>
    <div class="row">
        <div class="col-12">
            <div class="mb-3">
                <label asp-for="VendorCodeType.ExpirationDate" class="col-form-label"></label>
                <description gra-description-for="VendorCodeType.ExpirationDate"></description>
                <input asp-for="VendorCodeType.ExpirationDate"
                       class="form-control"
                       type="datetime-local" />
                <span asp-validation-for="VendorCodeType.ExpirationDate" class="text-danger"></span>
            </div>
        </div>
    </div>
    <div class="row">
        <div class="col-12">
            <div class="mb-3">
                <label asp-for="VendorCodeType.AwardPrizeOnShipDate" class="col-form-label"></label>
                <description gra-description-for="VendorCodeType.AwardPrizeOnShipDate"></description>
                <select asp-for="VendorCodeType.AwardPrizeOnShipDate"
                        asp-items="VendorCodesController.ShipDateOptions"
                        class="form-control">
                </select>
                <span asp-validation-for="VendorCodeType.AwardPrizeOnShipDate" class="text-danger"></span>
            </div>
        </div>
    </div>
    <div class="row">
        <div class="col-12">
            <div class="mb-3">
                <label asp-for="VendorCodeType.AwardPrizeOnPackingSlip" class="col-form-label"></label>
                <description gra-description-for="VendorCodeType.AwardPrizeOnPackingSlip"></description>
                <select asp-for="VendorCodeType.AwardPrizeOnPackingSlip"
                        asp-items="VendorCodesController.PackingSlipOptions"
                        class="form-control">
                </select>
                <span asp-validation-for="VendorCodeType.AwardPrizeOnPackingSlip" class="text-danger"></span>
            </div>
        </div>
    </div>
    @if (Model.VendorCodeType.Id != default)
    {
        <hr />
        <input type="hidden" asp-for="VendorCodeType.OptionMessageTemplateId" value="@Model.VendorCodeType.OptionMessageTemplateId">
        <div class="row">
            <div class="col-12">
                <div class="mb-3">
                    <label class="col-form-label" asp-for="VendorCodeType.OptionMessageTemplateId"></label>
                    <description gra-description-for="VendorCodeType.OptionMessageTemplateId"></description>
                    <br />
                    @foreach (var item in Model.Languages)
                    {
                        <a class="btn @Model.LanguageMessageClass(Model.VendorCodeType.OptionMessageTemplateId, item.Value)"
                           data-bs-toggle="modal"
                           data-bs-target="#messageModal"
                           data-item="OptionMessageTemplateId"
                           data-languageid="@item.Value">@item.Key</a>
                    }
                </div>
            </div>
        </div>
        @if (Model.AnyConfiguredLanguages(Model.VendorCodeType.OptionMessageTemplateId))
        {
            <hr />
            @if (Model.VendorCodeType.DonationSegmentId.HasValue
           ^ Model.VendorCodeType.DonationMessageTemplateId.HasValue)
            {
                <div class="row">
                    <div class="col-12">
                        <div class="alert alert-warning">
                            Please supply values for both the pop-up message as well as the sent message.
                        </div>
                    </div>
                </div>
            }
            <div class="row">
                <div class="col-12">
                    <div class="mb-3">
                        <label asp-for="VendorCodeType.DonationSegmentId" class="col-form-label"></label><br />
                        @foreach (var item in Model.Languages)
                        {
                            <a class="btn @Model.LanguageSegmentClass(Model.VendorCodeType.DonationSegmentId, item.Value)"
                               data-bs-toggle="modal"
                               data-bs-target="#segmentModal"
                               data-item="DonationSegmentId"
                               data-languageid="@item.Value">@item.Key</a>
                        }
                    </div>
                </div>
            </div>
            <input type="hidden" asp-for="VendorCodeType.DonationMessageTemplateId" value="@Model.VendorCodeType.DonationMessageTemplateId">
            <div class="row">
                <div class="col-12">
                    <div class="mb-3">
                        <label class="col-form-label" asp-for="VendorCodeType.DonationMessageTemplateId"></label><br />
                        @foreach (var item in Model.Languages)
                        {
                            <a class="btn @Model.LanguageMessageClass(Model.VendorCodeType.DonationMessageTemplateId, item.Value)"
                               data-bs-toggle="modal"
                               data-bs-target="#messageModal"
                               data-item="DonationMessageTemplateId"
                               data-languageid="@item.Value">@item.Key</a>
                        }
                    </div>
                </div>
            </div>
            <hr />
            @if (Model.VendorCodeType.EmailAwardSegmentId.HasValue
           ^ Model.VendorCodeType.EmailAwardMessageTemplateId.HasValue)
            {
                <div class="row">
                    <div class="col-12">
                        <div class="alert alert-warning">
                            Please supply values for both the pop-up message as well as the sent message.
                        </div>
                    </div>
                </div>
            }

            <div class="row">
                <div class="col-12">
                    <div class="mb-3">
                        <label asp-for="VendorCodeType.EmailAwardSegmentId" class="col-form-label"></label><br />
                        @foreach (var item in Model.Languages)
                        {
                            <a class="btn @Model.LanguageSegmentClass(Model.VendorCodeType.EmailAwardSegmentId, item.Value)"
                               data-bs-toggle="modal"
                               data-bs-target="#segmentModal"
                               data-item="EmailAwardSegmentId"
                               data-languageid="@item.Value">@item.Key</a>
                        }
                    </div>
                </div>
            </div>
            <input type="hidden" asp-for="VendorCodeType.EmailAwardMessageTemplateId" value="@Model.VendorCodeType.EmailAwardMessageTemplateId">
            <div class="row">
                <div class="col-12">
                    <div class="mb-3">
                        <label class="col-form-label" asp-for="VendorCodeType.EmailAwardMessageTemplateId"></label><br />
                        @foreach (var item in Model.Languages)
                        {
                            <a class="btn @Model.LanguageMessageClass(Model.VendorCodeType.EmailAwardMessageTemplateId, item.Value)"
                               data-bs-toggle="modal"
                               data-bs-target="#messageModal"
                               data-item="EmailAwardMessageTemplateId"
                               data-languageid="@item.Value">@item.Key</a>
                        }
                    </div>
                </div>
            </div>
        }
        <hr />
        <div class="row">
            <div class="col-12">
                <div class="mb-3">
                    <label asp-for="VendorCodeType.ReadyForPickupEmailTemplateId" class="col-form-label"></label>
                    <description gra-description-for="VendorCodeType.ReadyForPickupEmailTemplateId"></description>
                    <select asp-for="VendorCodeType.ReadyForPickupEmailTemplateId"
                        asp-items="VendorCodesController.GetSelectList(Model.DirectEmailTemplates)"
                            class="form-control">
                        <option value="">None</option>
                    </select>
                    <span asp-validation-for="VendorCodeType.ReadyForPickupEmailTemplateId" class="text-danger"></span>
                </div>
            </div>
        </div>
    }
    <div class="row row-spacing">
        <div class="col-12 text-right">
            @if (Model.VendorCodeType.Id > 0)
            {
                <a asp-action="@nameof(VendorCodesController.Index)"
                   class="btn btn-outline-secondary">Back</a>
            }
            else
            {
                <a asp-controller="@HomeController.Name"
               asp-action="@nameof(HomeController.Index)"
                   class="btn btn-outline-secondary">Cancel</a>
            }
            <button type="submit" class="btn btn-outline-primary">Save vendor code</button>
        </div>
    </div>
</form>

<form id="updateSegmentText">
    <input type="hidden" name="vendorCodeTypeId" value="@Model.VendorCodeType.Id" />
    <input type="hidden" id="updateSegmentLanguageId" name="languageId" />
    <input type="hidden" id="updateSegmentItem" name="item" />
    <div class="modal fade"
         id="segmentModal"
         tabindex="-1"
         role="dialog"
         aria-labelledby="segmentModalLabel">
        <div class="modal-dialog" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <button type="button"
                            class="btn-close"
                            data-bs-dismiss="modal"
                            aria-label="Close">
                        
                    </button>
                    <h4 class="modal-title" id="segmentModalLabel">Pop-up Message</h4>
                </div>
                <div class="modal-body">
                    <div id="segmentModalCover"
                         class="text-center">
                        <span class="fa fa-spinner fa-spin" style="font-size: 3rem;"></span>
                    </div>
                    <div id="segmentModalContent" style="display: none;">
                        <div class="mb-3">
                            <label>Pop-up text</label>
                            <input type="text"
                                   class="form-control"
                                   id="segmentText"
                                   name="text" />
                        </div>
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button"
                            class="btn btn-warning btn-spinner"
                            id="clearSegment">
                        Remove pop-up message
                    </button>
                    <button type="button"
                            class="btn btn-outline-secondary"
                            data-bs-dismiss="modal">
                        Close
                    </button>
                    <button type="submit"
                            button-spinner
                            class="btn btn-outline-primary btn-spinner"
                            id="saveSegment">
                        Save changes
                    </button>
                </div>
            </div>
        </div>
    </div>
</form>

<form id="updateMessageText">
    <input type="hidden" name="vendorCodeTypeId" value="@Model.VendorCodeType.Id" />
    <input type="hidden" id="updateLanguageId" name="languageId" />
    <input type="hidden" id="updateItem" name="item" />
    <div class="modal fade"
         id="messageModal"
         tabindex="-1"
         role="dialog"
         aria-labelledby="messageModalLabel">
        <div class="modal-dialog" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <button type="button"
                            class="btn-close"
                            data-bs-dismiss="modal"
                            aria-label="Close">
                        
                    </button>
                    <h4 class="modal-title" id="messageModalLabel">Message</h4>
                </div>
                <div class="modal-body">
                    <div id="messageModalCover"
                         class="text-center">
                        <span class="fa fa-spinner fa-spin" style="font-size: 3rem;"></span>
                    </div>
                    <div id="messageModalContent" style="display: none;">
                        <div class="mb-3">
                            <label>Message subject</label>
                            <input type="text"
                                   class="form-control"
                                   id="messageSubject"
                                   name="subject" />
                        </div>
                        <div class="mb-3">
                            <label>Message text</label>
                            <textarea class="form-control"
                                      rows="4"
                                      id="messageBody"
                                      name="body"></textarea>
                        </div>
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button"
                            class="btn btn-outline-warning btn-spinner"
                            id="clearMessageTemplate">
                        Remove message
                    </button>
                    <button type="button"
                            class="btn btn-outline-secondary"
                            data-bs-dismiss="modal">
                        Close
                    </button>
                    <button type="submit"
                            button-spinner
                            class="btn btn-outline-primary btn-spinner"
                            id="saveMessageTemplate">
                        Save changes
                    </button>
                </div>
            </div>
        </div>
    </div>
</form>

@section scripts {
    <script>
        $('#updateMessageText').submit(function (e) {
            e.preventDefault();
            let form = $(this);
            $.ajax({
                url: '@Url.Action(nameof(VendorCodesController.SetMessageTemplate))',
                type: "POST",
                data: form.serialize(),
                success: function (data, textStatus, jqXHR) {
                    if (data.success === true) {
                        location.reload();
                    } else {
                        window.alert("There as an error: " + data.message);
                        ResetSpinners();
                    }
                },
                error: function (jqXHR, textStatus, errorThrown) {
                    ResetSpinners();
                    window.alert("There was an " + textStatus + ": " + errorThrown);
                }
            });
        });

        $('#updateSegmentText').submit(function (e) {
            e.preventDefault();
            let form = $(this);
            $.ajax({
                url: '@Url.Action(nameof(VendorCodesController.SetSegment))',
                type: "POST",
                data: form.serialize(),
                success: function (data, textStatus, jqXHR) {
                    if (data.success === true) {
                        location.reload();
                    } else {
                        window.alert("There as an error: " + data.message);
                        ResetSpinners();
                    }
                },
                error: function (jqXHR, textStatus, errorThrown) {
                    ResetSpinners();
                    window.alert("There was an " + textStatus + ": " + errorThrown);
                }
            });
        });

        $('#clearMessageTemplate').on('click', function (e) {
            $('#messageSubject').val('');
            $('#messageBody').val('');
            $('#updateMessageText').submit();
        });

        $('#clearSegment').on('click', function (e) {
            $('#segmentText').val('');
            $('#updateSegmentText').submit();
        });

        $('#messageModal').on('show.bs.modal', function (e) {
            $('#clearMessageTemplate').hide();
            $('#messageModalCover').html('<span class="fa fa-spinner fa-spin" style="font-size: 3rem;"></span>');
            $('#messageModalCover').show();
            $('#messageModalContent').hide();
            $('#saveMessageTemplate').prop('disabled', true);
            let languageid = $(e.relatedTarget).data('languageid');
            let item = $(e.relatedTarget).data('item');
            switch (item) {
                case '@nameof(Model.VendorCodeType.DonationMessageTemplateId)':
                    $('#messageModalLabel').text('Donation message');
                    break;
                case '@nameof(Model.VendorCodeType.EmailAwardMessageTemplateId)':
                    $('#messageModalLabel').text('Email award message');
                    break;
                case '@nameof(Model.VendorCodeType.OptionMessageTemplateId)':
                    $('#messageModalLabel').text('Option message');
                    break;
                default:
                    $('#messageModalLabel').text('Message with code');
            }
            $('#updateLanguageId').val(languageid);
            $('#updateItem').val(item);
            $.ajax({
                url: '@Url.Action(nameof(VendorCodesController.GetMessageTemplate))',
                type: "GET",
                dataType: 'json',
                data: {
                    'vendorCodeTypeId': @Model.VendorCodeType.Id,
                    'languageId': languageid,
                    'item': item
                },
                success: function (data, textStatus, jqXHR) {
                    let validData = false;
                    if (data.success === true) {
                        if (data.subject) {
                            $('#messageSubject').val(data.subject);
                            validData = true;
                        }
                        else {
                            $('#messageSubject').val('');
                        }
                        if (data.body) {
                            $('#messageBody').val(data.body);
                            validData = true;
                        } else {
                            $('#messageBody').val('');
                        }
                        if (validData && item != '@nameof(Model.VendorCodeType.MessageTemplateId)') {
                            $('#clearMessageTemplate').show();
                        }
                        $('#saveMessageTemplate').prop('disabled', false);
                        $('#messageModalCover').hide();
                        $('#messageModalContent').show();
                    }
                    else {
                        console.log("Failure loading the message template: " + data.message);
                        $('#messageModalCover').html('<div class="text-danger">' + data.message + '</span>');
                        $('#saveMessageTemplate').prop('disabled', true);
                    }
                },
                error: function (jqXHR, textStatus, errorThrown) {
                    console.log("Failure response for the message template: " + textStatus + " - " + errorThrown);
                    $('#messageModalCover').html('<div class="text-danger">' + textStatus + ' - ' + errorThrown + '</span>');
                    $('#saveMessageTemplate').prop('disabled', true);
                }
            });
        });

        $('#segmentModal').on('show.bs.modal', function (e) {
            $('#segmentModalCover').html('<span class="fa fa-spinner fa-spin" style="font-size: 3rem;"></span>');
            $('#segmentModalCover').show();
            $('#segmentModalContent').hide();
            $('#saveSegment').prop('disabled', true);
            let languageid = $(e.relatedTarget).data('languageid');
            let item = $(e.relatedTarget).data('item');
            switch (item) {
                case '@nameof(Model.VendorCodeType.DonationSegmentId)':
                    $('#messageModalLabel').text('Segment pop-up message');
                    break;
                case '@nameof(Model.VendorCodeType.EmailAwardSegmentId)':
                    $('#messageModalLabel').text('Email award pop-up message');
                    break;
            }
            $('#updateSegmentLanguageId').val(languageid);
            $('#updateSegmentItem').val(item);
            $.ajax({
                url: '@Url.Action(nameof(VendorCodesController.GetSegment))',
                type: "GET",
                dataType: 'json',
                data: {
                    'vendorCodeTypeId': @Model.VendorCodeType.Id,
                    'languageId': languageid,
                    'item': item
                },
                success: function (data, textStatus, jqXHR) {
                    console.info("Response: %o", data)
                    if (data.success === true) {
                        if (data.text) {
                            $('#segmentText').val(data.text);
                            $('#clearSegment').show();
                        } else {
                            $('#segmentText').val('');
                            $('#clearSegment').hide();
                        }
                        $('#saveSegment').prop('disabled', false);
                        $('#segmentModalCover').hide();
                        $('#segmentModalContent').show();
                    }
                    else {
                        console.log("Failure loading the segment text: " + data.message);
                        $('#segmentModalCover').html('<div class="text-danger">' + data.message + '</span>');
                        $('#saveSegment').prop('disabled', true);
                    }
                },
                error: function (jqXHR, textStatus, errorThrown) {
                    console.log("Failure response for the segment text: " + textStatus + " - " + errorThrown);
                    $('#segmentModalCover').html('<div class="text-danger">' + textStatus + ' - ' + errorThrown + '</span>');
                    $('#saveSegment').prop('disabled', true);
                }
            });
        });
    </script>
}