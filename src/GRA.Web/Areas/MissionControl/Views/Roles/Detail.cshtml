@model GRA.Controllers.ViewModel.MissionControl.Roles.RoleDetailViewModel

<form asp-action="@Model.Action" method="post" role="form" enctype="multipart/form-data" style="padding-top:10px;">
    <input asp-for="Action" type="hidden" />
    @if (Model.Action == nameof(RolesController.Edit))
    {
        <input asp-for="Role.Id" type="hidden" />
        <input asp-for="Role.IsAdmin" type="hidden" />
    }

    <div class="row">
        <div class="col-xs-12">
            <div class="form-group">
                <label asp-for="Role.Name" class="control-label"></label>
                <input asp-for="Role.Name" class="form-control" />
                <span asp-validation-for="Role.Name" class="text-danger"></span>
            </div>

            @if (Model.UsersInRole > 0)
            {
                <a asp-action="@nameof(RolesController.UsersInRole)"
                   asp-route-id="@Model.Role.Id"
                   class="btn btn-default">See users in this role (@Model.UsersInRole)</a>
            }
            else
            {
                <button class="btn btn-default" disabled>No users in this role</button>
            }

            <div class="row">
                <div class="col-xs-6">
                    <h2 class="h3">Available Permissions (@Model.UnselectedPermissions?.Count())</h2>
                    <ul id="unselectedPermissions" class="list-group">
                        @foreach (var permission in Model.UnselectedPermissions)
                        {
                            <li class="list-group-item" data-name="@permission">
                                @permission
                                <button type="button" class="btn btn-default btn-xs move-right"><span class="fas fa-angle-double-right"></span></button>
                            </li>
                        }
                    </ul>
                </div>

                <div class="col-xs-6">
                    <h2 class="h3">Has Permissions (@Model.SelectedPermissions?.Count())</h2>
                    <ul id="selectedPermissions" class="list-group">
                        @if (Model.SelectedPermissions != null)
                        {
                            @foreach (var permission in Model.SelectedPermissions)
                            {
                                <li class="list-group-item" data-name="@permission">
                                    @permission
                                    @if (Model.Role.IsAdmin == false)
                                    {
                                        <button type="button" class="btn btn-default btn-xs move-left"><span class="fas fa-angle-double-left"></span></button>
                                    }
                                </li>
                            }
                        }
                    </ul>
                </div>
            </div>

            <hr />

            <div class="form-group">
                <a asp-action="Index" class="btn btn-default">Return to List</a>
                <button type="submit"
                        id="Submit"
                        name="Submit"
                        value="Submit"
                        class="btn btn-primary btn-spinner"
                        button-spinner>
                    <span class="buttonText">Save Role</span>
                </button>
            </div>

        </div>
    </div>
</form>

@section scripts {
    <script>
        $("form").on("submit", function () {
            var permissions = $("#selectedPermissions")
                .children()
                .map(function (a, item) { return $(item).data("name"); })
                .get();

            if (permissions.length > 0) {
                $("<input />")
                    .attr("type", "hidden")
                    .attr("name", "Permissions")
                    .attr("value", permissions.join(","))
                    .appendTo($(this));
            }
        });

        $(document).on("click", ".move-right", function () {
            $(this).removeClass("move-right").addClass("move-left");
            $(this).children().removeClass("fa-angle-double-right").addClass("fa-angle-double-left");
            var item = $(this).parent();
            var selectedList = $("#selectedPermissions");
            if (item.hasClass("list-group-item-danger")) {
                item.removeClass("list-group-item-danger");
                var added = false;
                var name = item.data("name");
                $(".list-group-item", selectedList).each(function () {
                    if ($(this).hasClass("list-group-item-success") == false && $(this).data("name") > name) {
                        item.insertBefore($(this));
                        added = true;
                        return false;
                    }
                });
                if (added == false) {
                    selectedList.append(item);
                }
            }
            else {
                item.addClass("list-group-item-success");
                var added = false;
                var name = item.data("name");
                $(".list-group-item", selectedList).each(function () {
                    if ($(this).hasClass("list-group-item-success") == false || $(this).data("name") > name) {
                        item.insertBefore($(this));
                        added = true;
                        return false;
                    }
                });
                if (added == false) {
                    selectedList.append(item);
                }
            }
        });

        $(document).on("click", ".move-left", function () {
            $(this).removeClass("move-left").addClass("move-right");
            $(this).children().removeClass("fa-angle-double-left").addClass("fa-angle-double-right");
            var item = $(this).parent();
            var unselectedList = $("#unselectedPermissions");
            if (item.hasClass("list-group-item-success")) {
                item.removeClass("list-group-item-success");
                var added = false;
                var name = item.data("name");
                $(".list-group-item", unselectedList).each(function () {
                    if ($(this).hasClass("list-group-item-danger") == false && $(this).data("name") > name) {
                        item.insertBefore($(this));
                        added = true;
                        return false;
                    }
                });
                if (added == false) {
                    unselectedList.append(item);
                }
            }
            else {
                item.addClass("list-group-item-danger");
                var added = false;
                var name = item.data("name");
                $(".list-group-item", unselectedList).each(function () {
                    if ($(this).hasClass("list-group-item-danger") == false || $(this).data("name") > name) {
                        item.insertBefore($(this));
                        added = true;
                        return false;
                    }
                });
                if (added == false) {
                    unselectedList.append(item);
                }
            }
        });
    </script>
}