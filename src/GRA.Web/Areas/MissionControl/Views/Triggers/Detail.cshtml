@using GRA.Controllers.ViewModel.MissionControl.Triggers
@model TriggersDetailViewModel
@section styles {
    <style>
        .trigger-details-form .tab-pane {
            border-left: 1px solid #ddd;
            border-right: 1px solid #ddd;
            border-bottom: 1px solid #ddd;
            border-radius: 0px 5px;
        }
    </style>
}
<form asp-controller="Triggers"
      asp-action="@Model.Action"
      method="post"
      role="form"
      enctype="multipart/form-data"
      id="triggerForm"
      class="form-horizontal trigger-details-form">
    <input asp-for="BadgeRequiredList" type="hidden" />
    <input asp-for="ChallengeRequiredList" type="hidden" />
    <input asp-for="IsSecretCode" type="hidden" />
    <input asp-for="BadgeMakerImage" type="hidden" />
    <input asp-for="EditMail" type="hidden" />
    <input asp-for="EditVendorCode" type="hidden" />
    <input asp-for="EditAvatarBundle" type="hidden" />
    <input asp-for="EditAttachment" type="hidden" />
    <input asp-for="AwardsPrize" type="hidden" />
    <input asp-for="AwardsMail" type="hidden" />
    <input asp-for="AwardsAttachment" type="hidden" />
    @if (Model.Action == "Edit")
    {
        <input asp-for="Trigger.Id" type="hidden" />
        <input asp-for="Trigger.RelatedBranchId" type="hidden" />
        <input asp-for="Trigger.RelatedSystemId" type="hidden" />
        <input asp-for="Trigger.AwardBadgeId" type="hidden" />
        <input asp-for="Trigger.AwardAttachmentId" type="hidden" />
        <input asp-for="Trigger.AwardAttachmentFilename" type="hidden" />
        <input asp-for="RemoveAttachment" type="hidden" />
    }

    @if (Model.DependentTriggers?.Count > 0)
    {
        <div class="list-group mb-3"
             id="accordionDependent"
             role="tablist"
             aria-multiselectable="true">
            <div class="card">
                <div class="card-header" role="tab" id="headingDependent">
                    <h4 class="card-title">
                        <a role="button"
                           data-bs-toggle="collapse"
                           data-bs-parent="#accordionDependent"
                           href="#collapseDependent"
                           aria-expanded="false"
                           aria-controls="collapseDependent">
                            Dependent Triggers
                        </a>
                    </h4>
                </div>
                <div id="collapseDependent"
                     class="card-collapse collapse"
                     role="tabpanel"
                     aria-labelledby="headingDependent">
                    <div class="card-body">
                        The following trigger(s) depend on this trigger:
                        <ul>
                            @foreach (var trigger in Model.DependentTriggers)
                            {
                                <li>
                                    <a target="_blank"
                                       href="@Url.Action("Edit", new { id = trigger.Id })"> @trigger.Name</a>
                                </li>
                            }
                        </ul>
                    </div>
                </div>
            </div>
        </div>
    }

    @if (Model.RelatedEvents?.Count > 0)
    {
        <div class="list-group mb-3"
             id="accordionRelated"
             role="tablist"
             aria-multiselectable="true">
            <div class="card">
                <div class="card-header" role="tab" id="headingRelated">
                    <h4 class="card-title">
                        <a role="button"
                           data-bs-toggle="collapse"
                           data-bs-parent="#accordionRelated"
                           href="#collapseRelated"
                           aria-expanded="false"
                           aria-controls="collapseRelated">
                            Related Events
                        </a>
                    </h4>
                </div>
                <div id="collapseRelated"
                     class="card-collapse collapse"
                     role="tabpanel"
                     aria-labelledby="headingRelated">
                    <div class="card-body">
                        The following event(s) relate to this trigger:
                        <ul>
                            @foreach (var graEvent in Model.RelatedEvents)
                            {
                                <li>
                                    <a target="_blank"
                                       href="@Url.Action("Edit", "Events", new { id = graEvent.Id })"> @graEvent.Name</a>
                                </li>
                            }
                        </ul>
                    </div>
                </div>
            </div>
        </div>
    }

    @if (Model.Action == "Edit")
    {
        <div class="fs-5 mt-2 mb-3">
            Created By:
            @if (Model.CanViewParticipants)
            {
                <a asp-controller="Participants"
                   asp-action="@nameof(ParticipantsController.Detail)"
                   asp-route-id="@Model.Trigger.CreatedBy"
                   target="_blank">@Model.CreatedByName</a>
            }
            else
            {
                @Model.CreatedByName
            }
            on @Model.Trigger.CreatedAt
        </div>

        @if (!string.IsNullOrEmpty(Model.MaxPointsWarningMessage))
        {
            <div class="col-12 col-sm-6 offset-sm-3 mb-3">
                <div class="alert alert-warning d-flex align-items-stretch">
                    <span class="fas fa-exclamation-circle fa-2x pt-2 me-3"
                          aria-hidden="true"></span>
                    <span>@Model.MaxPointsWarningMessage</span>
                </div>
            </div>
        }
    }

    <div class="col-12 mb-3">
        <label asp-for="Trigger.Name" class="col-form-label"></label>
        <input asp-for="Trigger.Name"
               class="form-control trigger-name-field"
               readonly="@(!Model.IgnorePointLimits && !string.IsNullOrEmpty(Model.MaxPointsWarningMessage) ? "readonly" : null)" />
        <span asp-validation-for="Trigger.Name" class="text-danger"></span>
    </div>

    <ul class="nav nav-tabs" role="tablist">
        <li role="presentation" class="nav-item">
            <a id="codeTab"
               class="nav-link @(Model.IsSecretCode ? "active" : "")"
               href="#secretCode"
               aria-controls="secretCode"
               role="tab"
               data-bs-toggle="tab">Secret Code</a>
        </li>
        <li role="presentation" class="nav-item">
            <a id="requirementsTab"
               class="nav-link @(Model.IsSecretCode ? "" : "active")"
               href="#requirements"
               aria-controls="requirements"
               role="tab"
               data-bs-toggle="tab">Requirements</a>
        </li>
    </ul>

    <div class="tab-content">
        <div role="tabpanel" class="tab-pane p-2 @(Model.IsSecretCode ? "active" : "")" id="secretCode">
            <div class="col-12">
                <p>
                    <strong>
                        Choose a secret code to trigger this award. Don't choose something that is
                        easy to guess!
                    </strong>
                </p>
                <p>
                    Secret codes must be less than 50 characters and can only contain letters and
                    numbers. Upper-case and lower-case don't matter.
                </p>
            </div>
            <div class="col-12 mb-3">
                <label asp-for="Trigger.SecretCode" class="col-form-label"></label>

                <span id="SecretCode-Icon"
                      class="fa colored-icon d-none"></span>
                <div>
                    <input asp-for="Trigger.SecretCode"
                           class="form-control"
                           readonly="@(!Model.IgnorePointLimits && !string.IsNullOrEmpty(Model.MaxPointsWarningMessage) ? "readonly" : null)" />
                    <span id="SecretCode-Validation"
                          asp-validation-for="Trigger.SecretCode"
                          class="text-success"></span>
                </div>
            </div>
        </div>

        <div role="tabpanel"
             class="tab-pane p-2 @(Model.IsSecretCode ? "" : "active")"
             id="requirements">
            <div class="col-12">
                <p>
                    <strong>
                        You can trigger this award through a combination of requirements
                        below.
                    </strong>
                </p>
                <p>
                    Participants will have to have all of the achievements you select in order to
                    receive the award.
                </p>
                <span asp-validation-for="TriggerRequirements"></span>
            </div>

            <div class="col-12 mb-3">
                <label asp-for="Trigger.Points" class="col-form-label"></label>
                <input asp-for="Trigger.Points"
                       class="form-control"
                       readonly="@(!Model.IgnorePointLimits && !string.IsNullOrEmpty(Model.MaxPointsWarningMessage) ? "readonly" : null)" />
                <span asp-validation-for="Trigger.Points" class="text-danger"></span>
            </div>

            <div class="col-12 mb-2">
                <div class="card">
                    <div class="card-header bg-warning-subtle">
                        <h3 class="card-title">Require Challenges and Triggers</h3>
                    </div>
                    <div class="card-body">

                        <div class="d-flex flex-row align-items-center flex-wrap">
                            <p class="form-control-plaintext"><strong>Participant must have earned</strong></p>
                            <input asp-for="Trigger.ItemsRequired"
                                   class="form-control"
                                   min="0"
                                   readonly="@(!Model.IgnorePointLimits && !string.IsNullOrEmpty(Model.MaxPointsWarningMessage) ? "readonly" : null)" />
                            <p class="form-control-plaintext"><strong>of the following:</strong></p>
                            <span asp-validation-for="Trigger.ItemsRequired" class="text-danger" />
                        </div>
                        <div>
                        </div>
                        <div>
                            <table class="table table-sm table-bordered table-striped">
                                <thead>
                                    <tr>
                                        <th>Name</th>
                                        <th style="width: 75px;">Type</th>
                                        <th style="width: 75px;">Badge</th>
                                        <th style="width: 75px">&nbsp;</th>
                                    </tr>
                                </thead>
                                <tbody id="requirementList">
                                    <tr id="noRequirements"
                                        class="@(Model.TriggerRequirements?.Count > 0 ? "d-none" : "")">
                                        <td colspan="4">
                                            <em>
                                                No challenges or triggers required.
                                            </em>
                                        </td>
                                    </tr>
                                    @if (Model.TriggerRequirements != null)
                                    {
                                        foreach (var requirement in Model.TriggerRequirements)
                                        {
                                            <tr>
                                                <td>
                                                    @requirement.Name
                                                </td>
                                                <td class="align-middle text-primary text-center">
                                                    <span class="fa-stack">
                                                        <span class="fas fa-circle fa-stack-2x"></span>
                                                        <span class="fa fa-stack-1x fa-inverse @requirement.Icon"
                                                              title="@requirement.IconDescription"></span>
                                                    </span>
                                                </td>
                                                <td class="align-middle text-center">
                                                    @if (!string.IsNullOrWhiteSpace(requirement.BadgePath))
                                                    {
                                                        <img class="img-thumbnail badge-xs"
                                                             src="~/@requirement.BadgePath?@DateTime.Now.ToString("yyMMddHHmmss")" />
                                                    }
                                                    else
                                                    {
                                                        <text>&nbsp;</text>
                                                    }
                                                </td>
                                                <td class="align-middle text-center">
                                                    <button type="button"
                                                            id="removeRequirementButton"
                                                            class="btn btn-outline-danger btn-sm"
                                                            data-badgeid="@requirement.BadgeId"
                                                            data-challengeid="@requirement.ChallengeId">
                                                        <span class="fas fa-times fa-fw text-danger"
                                                              aria-hidden="true"></span>
                                                    </button>
                                                </td>
                                            </tr>
                                        }
                                    }
                                </tbody>
                            </table>
                        </div>
                        <button type="button"
                                id="addButton"
                                class="btn btn-outline-warning"
                                disabled="@(!Model.IgnorePointLimits && !string.IsNullOrEmpty(Model.MaxPointsWarningMessage) ? "disabled" : null)">
                            Add Challenges or Triggers
                        </button>
                    </div>
                </div>
            </div>

            <div class="col-12 mb-3">
                <label asp-for="Trigger.LimitToSystemId" class="col-form-label"></label>
                <select asp-for="Trigger.LimitToSystemId"
                        asp-items="Model.SystemList"
                        class="form-control"
                        disabled="@(!Model.IgnorePointLimits && !string.IsNullOrEmpty(Model.MaxPointsWarningMessage) ? "disabled" : null)">
                    <option value="">No</option>
                </select>
                <span asp-validation-for="Trigger.LimitToSystemId" class="text-danger"></span>
            </div>

            <div class="col-12 mb-3">
                <label asp-for="Trigger.LimitToBranchId" class="col-form-label"></label>
                <select asp-for="Trigger.LimitToBranchId"
                        asp-items="Model.BranchList"
                        class="form-control"
                        disabled="@(!Model.IgnorePointLimits && !string.IsNullOrEmpty(Model.MaxPointsWarningMessage) ? "disabled" : null)">
                    <option value="">No</option>
                </select>
                <span asp-validation-for="Trigger.LimitToBranchId" class="text-danger"></span>
            </div>

            <div class="col-12 mb-3">
                <label asp-for="Trigger.LimitToProgramId" class="col-form-label"></label>
                <select asp-for="Trigger.LimitToProgramId"
                        asp-items="Model.ProgramList"
                        class="form-control"
                        disabled="@(!Model.IgnorePointLimits && !string.IsNullOrEmpty(Model.MaxPointsWarningMessage) ? "disabled" : null)">
                    <option value="">No</option>
                </select>
                <span asp-validation-for="Trigger.LimitToProgramId" class="text-danger"></span>
            </div>
        </div>
    </div>

    <div class="row mb-3">
        <div class="col-12">
            <label asp-for="Trigger.ActivationDate" class="col-form-label"></label>
            <div class="mb-3 date" id="activationDatePicker">
                <input asp-for="Trigger.ActivationDate"
                       type="form"
                       class="form-control"
                       readonly="@(!Model.IgnorePointLimits && !string.IsNullOrEmpty(Model.MaxPointsWarningMessage) ? "readonly" : null)" />
            </div>
            <span asp-validation-for="Trigger.ActivationDate" class="text-danger"></span>
        </div>
    </div>

    <div class="card">
        <div class="card-header bg-primary-subtle">
            <h3 class="card-title">Awards</h3>
        </div>
        <div class="card-body">
            <div class="col-12 mb-3">
                <label asp-for="Trigger.AwardMessage"></label>
                <textarea asp-for="Trigger.AwardMessage"
                          class="form-control"
                          readonly="@(!Model.IgnorePointLimits && !string.IsNullOrEmpty(Model.MaxPointsWarningMessage) ? "readonly" : null)"></textarea>
                <span asp-validation-for="Trigger.AwardMessage" class="text-danger"></span>
            </div>
            <div class="col-12">
                <label asp-for="Trigger.AwardPoints"></label>
            </div>
            <div class="col-12 mb-3"><small><em>@Model.MaxPointsMessage</em></small></div>
            <div class="col-12 mb-3">
                <input asp-for="Trigger.AwardPoints"
                       value="@(Model.Trigger?.AwardPoints ?? 0)"
                       min="0"
                       class="form-control"
                       readonly="@(!Model.IgnorePointLimits && !string.IsNullOrEmpty(Model.MaxPointsWarningMessage) ? "readonly" : null)" />
                <span asp-validation-for="Trigger.AwardPoints" class="text-danger"></span>
            </div>
            <div class="row mb-3">
                <div class="col-12">
                    @if (!string.IsNullOrWhiteSpace(Model.BadgePath))
                    {
                        <label class="col-form-label">Edit badge image</label>
                    }
                    else
                    {
                        <label class="col-form-label">Add a badge</label>
                    }
                </div>

                <div class="col-12 col-sm-4 col-md-3">

                    @if (!string.IsNullOrWhiteSpace(Model.BadgePath))
                    {
                        <input asp-for="BadgePath" type="hidden" />
                        <img id="badgeImage" class="img-thumbnail badge-lg"
                             src="~/@Model.BadgePath?@DateTime.Now.ToString("yyMMddHHmmss")"
                             asp-append-version="true" />
                    }
                    else
                    {
                        <img id="badgeImage"
                             class="img-thumbnail badge-lg"
                             src="@Model.BadgeMakerImage" />
                    }
                    <span asp-validation-for="BadgePath" class="text-danger d-block"></span>
                </div>

                <div class="col-12 col-sm-8 col-md-9">
                    <label asp-for="BadgeUploadImage" class="col-form-label"></label>
                    <div class="input-group mb-3">
                        <input type="file"
                               class="form-control"
                               asp-for="BadgeUploadImage"
                               accept=".jpg,.png" />
                        <button class="btn btn-outline-secondary"
                                type="button"
                                onclick="$('#BadgeUploadImage').val('')">
                            Clear selection
                        </button>
                    </div>
                    <span asp-validation-for="BadgeUploadImage" class="text-danger mb-3"></span>
                    <div>
                        <label asp-for="BadgeAltText" class="control-label"></label>
                        <span class="fas fa-info-circle wide-tooltip"
                              title="How should this badge be described to someone who can't see it?"
                              data-toggle="tooltip"
                              data-placement="top"></span>
                        <textarea asp-for="BadgeAltText" class="form-control">@Model.BadgeAltText</textarea>
                        <span asp-validation-for="BadgeAltText" class="text-danger"></span>

                    </div>
                </div>
            </div>
        </div>
    </div>

    @if (Model.EditVendorCode || Model.Trigger?.AwardVendorCodeTypeId != null)
    {
        if (!string.IsNullOrWhiteSpace(Model.VendorCodeType) || Model.VendorCodeTypeList.Count() > 0)
        {
            <div class="row mb-3">
                <div class="col-12">
                    <label asp-for="Trigger.AwardVendorCodeTypeId" class="col-form-label"></label>
                    @if (Model.EditVendorCode)
                    {
                        <select asp-for="Trigger.AwardVendorCodeTypeId"
                                asp-items="Model.VendorCodeTypeList"
                                class="form-control">
                            <option value="">No</option>
                        </select>
                    }
                    else
                    {
                        <input asp-for="VendorCodeType" class="form-control" readonly />
                    }
                    <span asp-validation-for="Trigger.AwardVendorCodeTypeId"
                          class="text-danger"></span>
                </div>
            </div>
        }
    }

    @if (Model.EditAvatarBundle || Model.Trigger?.AwardAvatarBundleId != null)
    {
        if (!string.IsNullOrWhiteSpace(Model.UnlockableAvatarBundle) || Model.UnlockableAvatarBundleList.Count() > 0)
        {
            <div class="row mb-3">
                <div class="col-12">
                    <label asp-for="Trigger.AwardAvatarBundleId" class="col-form-label"></label>
                    @if (Model.EditAvatarBundle)
                    {
                        <select asp-for="Trigger.AwardAvatarBundleId"
                                asp-items="Model.UnlockableAvatarBundleList"
                                class="form-control">
                            <option value="">No</option>
                        </select>
                    }
                    else
                    {
                        <input asp-for="UnlockableAvatarBundle" class="form-control" readonly />
                    }
                    <span asp-validation-for="Trigger.AwardAvatarBundleId" class="text-danger"></span>
                </div>
            </div>
        }
    }

    <div class="list-group mb-3" id="accordionPrize" role="tablist" aria-multiselectable="true">
        <div class="card">
            <div class="card-header @(Model.AwardsPrize ? "bg-info-subtle" : "bg-dark-subtle")"
                 role="tab"
                 id="headingPrize">
                <h4 class="card-title">
                    <a role="button"
                       data-bs-toggle="collapse"
                       data-bs-parent="#accordionPrize"
                       href="#collapsePrize"
                       aria-expanded="true"
                       aria-controls="collapsePrize">
                        <span id="prizeIcon"
                              class="fas fa-lg @(Model.AwardsPrize ? "fa-caret-down" : "fa-caret-right")"></span>
                        Award Prize
                    </a>
                </h4>
            </div>
            <div id="collapsePrize"
                 class="collapse @(Model.AwardsPrize ? "show" : null)"
                 role="tabpanel"
                 aria-labelledby="headingPrize">
                <div class="card-body">
                    <div class="row mb-3">
                        <div class="col-12">
                            <label asp-for="Trigger.AwardPrizeName" class="col-form-label"></label>
                            <description gra-description-for="Trigger.AwardPrizeName"></description>
                            <input asp-for="Trigger.AwardPrizeName"
                                   class="form-control"
                                   readonly="@(!Model.IgnorePointLimits && !string.IsNullOrEmpty(Model.MaxPointsWarningMessage) ? "readonly" : null)" />
                            <span asp-validation-for="Trigger.AwardPrizeName"
                                  class="text-danger"></span>
                        </div>
                    </div>
                    <div class="row mb-3">
                        <div class="col-12">
                            <label asp-for="Trigger.AwardPrizeRedemptionInstructions"
                                   class="col-form-label"></label>
                            <textarea asp-for="Trigger.AwardPrizeRedemptionInstructions"
                                      class="form-control"
                                      readonly="@(!Model.IgnorePointLimits && !string.IsNullOrEmpty(Model.MaxPointsWarningMessage) ? "readonly" : null)"></textarea>
                            <span asp-validation-for="Trigger.AwardPrizeRedemptionInstructions"
                                  class="text-danger"></span>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

    @if (Model.EditMail || Model.AwardsMail)
    {
        <div class="list-group mb-3" id="accordionMail" role="tablist" aria-multiselectable="true">
            <div class="card card-info">
                <div class="card-header @(Model.AwardsMail ? "bg-info-subtle" : "bg-dark-subtle")"
                     role="tab"
                     id="headingMail">
                    <h4 class="card-title">
                        @if (Model.EditMail)
                        {
                            <a role="button"
                               data-bs-toggle="collapse"
                               data-bs-parent="#accordionMail"
                               href="#collapseMail"
                               aria-expanded="true"
                               aria-controls="collapseMail">
                                <span id="mailIcon"
                                      class="fas fa-lg @(Model.AwardsMail ? "fa-caret-down" : "fa-caret-right")"></span>
                                Award Mail
                            </a>
                        }
                        else
                        {
                            @:Award Mail
                        }
                    </h4>
                </div>
                <div id="collapseMail"
                     class="collapse @(Model.AwardsMail ? "show" : null)"
                     role="tabpanel"
                     aria-labelledby="headingMail">
                    <div class="card-body">
                        <div class="row mb-3">
                            <div class="col-12">
                                <label asp-for="Trigger.AwardMailSubject"
                                       class="col-form-label"></label>
                                <input asp-for="Trigger.AwardMailSubject"
                                       class="form-control"
                                       readonly="@(!Model.EditMail || (!Model.IgnorePointLimits && !string.IsNullOrEmpty(Model.MaxPointsWarningMessage)) ? "readonly" : null)" />
                                <span asp-validation-for="Trigger.AwardMailSubject"
                                      class="text-danger"></span>
                            </div>
                        </div>
                        <div class="row mb-3">
                            <div class="col-12">
                                <label asp-for="Trigger.AwardMail" class="col-form-label"></label>
                                <textarea asp-for="Trigger.AwardMail"
                                          class="form-control"
                                          readonly="@(!Model.EditMail || (!Model.IgnorePointLimits && !string.IsNullOrEmpty(Model.MaxPointsWarningMessage)) ? "readonly" : null)"></textarea>
                                <span asp-validation-for="Trigger.AwardMail"
                                      class="text-danger"></span>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    }
    @if (Model.EditAttachment || Model.AwardsAttachment)
    {
        <div class="list-group mb-3" id="accordionAttachment" role="tablist" aria-multiselectable="true">
            <div class="card card-info">
                <div class="card-header @(Model.AwardsAttachment ? "bg-info-subtle" : "bg-dark-subtle")"
                     role="tab"
                     id="headingAttachment">
                    <h4 class="card-title">
                        <a role="button"
                           data-bs-toggle="collapse"
                           data-bs-parent="#accordionAttachment"
                           href="#collapseAttachment"
                           aria-expanded="true"
                           aria-controls="collapseAttachment">
                            <span id="attachmentIcon" class="fas fa-lg @(Model.AwardsAttachment ? "fa-caret-down" : "fa-caret-right")"></span>
                            Award Attachment
                        </a>
                    </h4>
                </div>
                <div id="collapseAttachment"
                     class="collapse @(Model.AwardsAttachment ? "show" : null)"
                     role="tabpanel"
                     aria-labelledby="headingAttachment">
                    <div class="card-body">
                        <div class="row mb-3">
                            <div class="col-12" id="uploadAttachmentContainer">
                                <p id="uploadAttachmentHeader">
                                    @if (Model.AwardsAttachment)
                                    {
                                        if (Model.Trigger.AwardAttachmentId.HasValue && Model.RemoveAttachment)
                                        {
                                            @:Attachment will be removed when this trigger is saved. Click "Return to List" to cancel attachment removal
                                        }
                                        else if (Model.Trigger.AwardAttachmentId.HasValue)
                                        {
                                            @:Select a file to replace the existing attachment and click "Save Trigger". Click "Return to List" to cancel attachment replacement.
                                        }
                                    }
                                    else
                                    {
                                        @:Upload an attachment.
                                    }
                                </p>
                                <div class="alert alert-warning d-none" id="removeAttachmentAlert">
                                    The attached award will be removed when this trigger is saved.
                                    Choose "Return to List" to to cancel the removal.
                                </div>
                                @if (!Model.RemoveAttachment)
                                {
                                    <div id="attachmentInputWrapper" class="mb-2">
                                        <div class="input-group">
                                            <input type="file"
                                                   class="form-control"
                                                   asp-for="AttachmentUploadFile"
                                                   accept=".pdf" />
                                            <button class="btn btn-outline-secondary"
                                                    type="button"
                                                    onclick="$('.task-upload-file').val('')"
                                                    id="clearAttachment">
                                                Clear selection
                                            </button>
                                        </div>
                                        <div>
                                            <span asp-validation-for="AttachmentUploadFile"
                                                  class="text-danger"></span>
                                        </div>
                                    </div>
                                }
                                <div id="removeAttachmentContainer">
                                    @if (Model.AwardsAttachment)
                                    {
                                        <div class="mt-3">
                                            @if (!string.IsNullOrWhiteSpace(Model.Trigger.AwardAttachmentFilename))
                                            {
                                                <a class="btn btn-outline-primary me-2"
                                                   href="~/@Model.Trigger.AwardAttachmentFilename"
                                                   target="_blank">
                                                    <img id="attachmentImage"
                                                         class="me-1"
                                                         width="20"
                                                         src="~/images/certificate.png" />
                                                    <span>View Attachment</span>
                                                </a>
                                            }
                                            @if (!Model.RemoveAttachment && Model.Trigger.AwardAttachmentId.HasValue)
                                            {
                                                <button type="button"
                                                        class="btn btn-outline-danger"
                                                        id="btn-remove-attachment">
                                                    <span>Remove Attachment</span>
                                                </button>
                                            }
                                        </div>
                                    }
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    }
    <div class="mb-3 d-flex justify-content-end my-4">
        <a asp-action="Index"
           class="btn btn-outline-secondary mx-2">Return to List</a>
        @if (Model.IgnorePointLimits || string.IsNullOrEmpty(Model.MaxPointsWarningMessage))
        {
            <button type="submit"
                    id="saveButton"
                    class="btn btn-outline-primary mx-2"
                    button-spinner>
                <span class="buttonText">
                    @(Model.Action == "Edit" ? "Save" : Model.Action) Trigger
                </span>
            </button>
        }
    </div>
</form>

@if (Model.IgnorePointLimits && Model.MaxPointLimit != null)
{

    <div class="modal fade"
         id="warningModal"
         tabindex="-1"
         role="dialog"
         aria-labelledby="warningModalLabel">
        <div class="modal-dialog" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <h1 class="modal-title h4" id="deleteModalLabel">
                        <button type="button"
                                class="btn-close"
                                data-bs-dismiss="modal"
                                aria-label="Close">
                        </button>
                        Warning: Award points exceed maximum
                    </h1>
                </div>
                <div class="modal-body">
                    <span class="fas fa-exclamation-triangle fa-lg text-danger pt-2 me-3" aria-hidden="true"></span>
                    <span id="modal-text">
                        The awarded points for this trigger exceed the maximum of
                        <strong>@Model.MaxPointLimit points</strong>. Do you wish to continue?
                    </span>
                </div>
                <div class="modal-footer">
                    <button type="button"
                            class="btn btn-outline-secondary"
                            data-bs-dismiss="modal">
                        Cancel
                    </button>
                    <button id="warningSave"
                            type="button"
                            class="btn btn-outline-primary"
                            data-bs-dismiss="modal">
                        Save Trigger
                    </button>
                </div>
            </div>
        </div>
    </div>

}

<div class="row">
    <div class="modal fade"
         id="listModal"
         tabindex="-1"
         role="dialog"
         data-bs-backdrop="static"
         data-bs-keyboard="false"
         aria-labelledby="listModalLabel">
        <div class="modal-dialog modal-xl" role="document">
            <div class="modal-content">
                <div class="card">
                    <div class="card-header">
                        <h1 class="h4 modal-title lead">Add requirement</h1>
                    </div>
                    <div class="card-body pt-2">
                        <div class="row">
                            <div class="col-12 mb-2">
                                <ul class="nav nav-pills">
                                    <li id="All" class="nav-item requirementScope">
                                        <a class="nav-link active">All</a>
                                    </li>
                                    <li id="System" class="nav-item requirementScope">
                                        <a class="nav-link">My System</a>
                                    </li>
                                    <li id="Branch" class="nav-item requirementScope">
                                        <a class="nav-link">My Branch</a>
                                    </li>
                                    <li id="Mine" class="nav-item requirementScope">
                                        <a class="nav-link">Mine</a>
                                    </li>
                                </ul>
                            </div>
                        </div>
                        <div class="row mb-2">
                            <div class="col-12">
                                <div class="input-group">
                                    <input id="searchText"
                                           class="form-control"
                                           placeholder="Enter text to search for an challenge here" />
                                    <button type="button"
                                            id="clearButton"
                                            class="btn btn-outline-secondary">
                                        Clear
                                    </button>
                                    <button type="button"
                                            id="searchButton"
                                            class="btn btn-outline-secondary">
                                        Search
                                    </button>
                                </div>
                            </div>
                        </div>
                        <div id="searchMessage" class="row d-none">
                            <div class="col-12">
                                <p class="alert-sm alert-info">
                                    Searching for '<strong id="searchTerm"></strong>'
                                </p>
                            </div>
                        </div>
                        <div class="row">
                            <div id="modalRequirementList" class="col-12">
                            </div>
                        </div>
                    </div>
                    <div class="modal-footer">
                        <button type="button"
                                class="btn btn-outline-secondary"
                                data-bs-dismiss="modal">
                            Close
                        </button>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

@section scripts
{
    <script>
        var badgeIds = $("#BadgeRequiredList").val().split(',').filter(function (x) { return x }).map(Number);
        var challengeIds = $("#ChallengeRequiredList").val().split(',').filter(function (x) { return x }).map(Number);
        var requirementsUrl = "@Url.Action("GetRequirementList", "Lookup")";
        var page = 1;
        var scope = "All";
        var search = "";
        var thisBadge = $("#Trigger_AwardBadgeId").val();

        function UpdateRequirementsList() {
            $.get(requirementsUrl,
                {
                    badgeIds: badgeIds.join(','),
                    challengeIds: challengeIds.join(','),
                    scope: scope,
                    search: search,
                    page: page,
                    thisBadge: thisBadge
                }, function (response) {
                    $("#modalRequirementList").html(response);
                });
        }

        $("#addButton").on('click', function (e) {
            $("#listModal").modal("show");
            UpdateRequirementsList();
        });

        $(document).on("click", ".addRequirementButton", function () {
            if (!$(this).hasClass("disabled")) {
                var badgeId = $(this).data("badgeid");
                var challengeId = $(this).data("challengeid");

                if (challengeId != "") {
                    challengeIds.push(challengeId);
                    $("#ChallengeRequiredList").val(challengeIds.join(','));
                }
                else if (badgeId != "") {
                    badgeIds.push(badgeId);
                    $("#BadgeRequiredList").val(badgeIds.join(','));
                }
                $("#noRequirements").addClass("d-none");

                var row = $(this).parent().parent().clone();
                var addedItem = row.find(".addRequirementButton");
                addedItem.removeClass("addRequirementButton")
                addedItem.children().removeClass("fa-plus");
                addedItem.children().addClass("fa-times");
                addedItem.removeClass("btn-outline-success");
                addedItem.addClass("btn-outline-danger");
                addedItem.attr("id", "removeRequirementButton");
                $("#requirementList").append(row);

                $(".addRequirementButton").addClass("disabled");

                UpdateRequirementsList();

            }
        });

        $(document).on("click", "#removeRequirementButton", function () {
            var badgeId = $(this).data("badgeid");
            var challengeId = $(this).data("challengeid");

            if (challengeId != "") {
                challengeIds.splice(challengeIds.indexOf(challengeId), 1);
                $("#ChallengeRequiredList").val(challengeIds.join(','));
            }
            else if (badgeId != "") {
                badgeIds.splice(badgeIds.indexOf(badgeId), 1);
                $("#BadgeRequiredList").val(badgeIds.join(','));
            }
            $(this).parent().parent().remove();
            if (badgeIds == "" && challengeIds == "") {
                $("#noRequirements").removeClass("d-none");
            }
        });

        $(".requirementScope").on("click", function (e) {
            e.preventDefault();
            $(this).siblings().children().removeClass("active");
            $(this).children().addClass("active");
            scope = $(this).attr("id");
            page = 1;
            UpdateRequirementsList();
        });

        $("#searchButton").on("click", function () {
            search = $("#searchText").val();
            if (search != "") {
                $("#searchMessage").removeClass("d-none");
                $("#searchTerm").html(search);
            }
            else {
                $("#searchMessage").addClass("d-none");
            }
            page = 1;
            UpdateRequirementsList();
        })

        $("#clearButton").on("click", function () {
            $("#searchText").val("");
            search = "";
            $("#searchMessage").addClass("d-none");
            page = 1;
            UpdateRequirementsList();
        });

        $('#clearAttachment').on('click', function () {
            $('#AttachmentUploadFile').val('');
            $('#selectAttachment').addClass('btn-outline-secondary');
            $('#selectAttachment').removeClass('btn-outline-success');
            $('#selectedCertPdf').val('');
        });

        $(document).on("click", ".page-button", function () {
            if (!$(this).hasClass("disabled")) {
                page = $(this).data("page");
                UpdateRequirementsList();
            }
        });

        $("#Trigger_LimitToSystemId").on("change", function () {
            var systemId = $(this).val();
            var branchList = $("#Trigger_LimitToBranchId");
            var branchId = branchList.val();
            var url = "@Url.Action("GetBranches", "Lookup", new { Area = string.Empty })";

            $.getJSON(url, { systemId: systemId, branchId: branchId, listAll: "true", prioritize: "true" }, function (response) {
                branchList.empty();
                branchList.append(new Option("No", ""));
                $.each(response, function (index, item) {
                    branchList.append(new Option(item.text, item.value, item.selected, item.selected))
                });
            });
        });

        $("#codeTab").on('show.bs.tab', function () {
            $("#IsSecretCode").val("true");
        });

        $("#requirementsTab").on('show.bs.tab', function () {
            $("#IsSecretCode").val("false");
        });

        $('#AttachmentUploadFile:file').on('fileselect', function (event, numFiles, label) {
            var input = $(this).parents('.input-group').find(':text'),
                log = numFiles > 1 ? numFiles = ' files selected' : label;

            if (input.length) {
                input.val(log);
                $('#selectAttachment').removeClass('btn-outline-secondary');
                $('#selectAttachment').addClass('btn-outline-success');
            }
            else {
                input.val('');
                $('#selectAttachment').addClass('btn-outline-secondary');
                $('#selectAttachment').removeClass('btn-outline-success');
            }
        });

        $("#collapsePrize").on("show.bs.collapse", function () {
            $("#AwardsPrize").val("true");
            $("#prizeIcon").removeClass("fa-caret-right").addClass("fa-caret-down");
            $("#headingPrize").removeClass("bg-dark-subtle");
            $("#headingPrize").addClass("bg-info-subtle");
        });

        $("#collapsePrize").on("hide.bs.collapse", function () {
            $("#AwardsPrize").val("false");
            $("#prizeIcon").removeClass("fa-caret-down").addClass("fa-caret-right");
            $("#headingPrize").addClass("bg-dark-subtle");
            $("#headingPrize").removeClass("bg-info-subtle");
        });

        $("#collapseMail").on("show.bs.collapse", function () {
            $("#AwardsMail").val("true");
            $("#mailIcon").removeClass("fa-caret-right").addClass("fa-caret-down");
            $("#headingMail").removeClass("bg-dark-subtle");
            $("#headingMail").addClass("bg-info-subtle");
        });

        $("#collapseMail").on("hide.bs.collapse", function () {
            $("#AwardsMail").val("false");
            $("#mailIcon").removeClass("fa-caret-down").addClass("fa-caret-right");
            $("#headingMail").addClass("bg-dark-subtle");
            $("#headingMail").removeClass("bg-info-subtle");
        });

        $("#collapseAttachment").on("show.bs.collapse", function () {
            $("#AwardsAttachment").val("true");
            $("#attachmentIcon").removeClass("fa-caret-right").addClass("fa-caret-down");
            $("#headingAttachment").removeClass("bg-dark-subtle");
            $("#headingAttachment").addClass("bg-info-subtle");
        });

        $("#collapseAttachment").on("hide.bs.collapse", function () {
            $("#AwardsAttachment").val("false");
            $("#attachmentIcon").removeClass("fa-caret-down").addClass("fa-caret-right");
            $("#headingAttachment").addClass("bg-dark-subtle");
            $("#headingAttachment").removeClass("bg-info-subtle");
        });

        $("#btn-remove-attachment").on("click", function () {
            $("#removeAttachmentAlert").removeClass("d-none");
            $("#attachmentInputWrapper").hide();
            $("#RemoveAttachment").val(true);
            $("#btn-remove-attachment").hide();
        });

        $("#Trigger_SecretCode").on("blur", function () {
            if ($(this).val() != "" && !$(this).hasClass("input-validation-error")) {
                var secretCode = $(this).val();
                if (secretCode != "") {
                    if (secretCode != "@Model.Trigger?.SecretCode") {
                        var codeCheckUrl = "@Url.Action("SecretCodeInUse", "Lookup")";
                        var icon = $("#SecretCode-Icon");
                        icon.removeClass("d-none fa-times fa-check");
                        icon.addClass("fa-spinner fa-spin");
                        $.post(codeCheckUrl, { secretCode: secretCode }, function (response) {
                            if (response) {
                                $("#Trigger_SecretCode").removeClass("valid");
                                $("#Trigger_SecretCode").addClass("input-validation-error");
                                $("#SecretCode-Validation").removeClass("text-success");
                                $("#SecretCode-Validation").addClass("text-danger");
                                $("#SecretCode-Validation").removeClass("field-validation-valid");
                                $("#SecretCode-Validation").addClass("field-validation-error");
                                $("#SecretCode-Validation").text("That secret code is already in use.");
                                icon.removeClass("fa-spinner fa-spin");
                                icon.addClass("fa-times");
                            }
                            else {
                                $("#SecretCode-Validation").removeClass("field-validation-valid");
                                $("#SecretCode-Validation").text("That secret code is available.");
                                $("#SecretCode-Validation").removeClass("text-danger");
                                $("#SecretCode-Validation").addClass("text-success");
                                icon.removeClass("fa-spinner fa-spin");
                                icon.addClass("fa-check");
                            }
                        });
                    }
                    else {
                        $("#SecretCode-Icon").removeClass("d-none fa-times").addClass("fa-check");
                        $("#SecretCode-Validation").removeClass("field-validation-valid");
                        $("#SecretCode-Validation").text("No change to secret code.");
                    }
                }
            }
        });

        $("#Trigger_SecretCode").on("keypress", function () {
            $("#SecretCode-Icon").addClass("d-none");
            $("#SecretCode-Validation").addClass("field-validation-valid");
        });

        $().ready(function () {
            if ($('.trigger-name-field').first().val() === "") {
                $('.trigger-name-field').first().focus();
            }
        });
    </script>

    @if (Model.IgnorePointLimits && Model.MaxPointLimit != null)
    {
        <script>
            $("#saveButton").on("click", function (e) {
                e.preventDefault();
                if ($("#Trigger_AwardPoints").val() > @Model.MaxPointLimit) {
            @if (Model.Trigger != null)
            {
                <text>
                                if ($("#Trigger_AwardPoints").val() != @Model.Trigger.AwardPoints) {
                                    $('#warningModal').modal("show");
                                                                                                            }
                                else {
                                    $("#triggerForm").submit();
                                                                                                            }
                </text>
            }
            else
            {
                @:$('#warningModal').modal("show");
            }
                                                                            } else {
                    $("#triggerForm").submit();
                }
            });

            $("#warningSave").on("click", function () {
                $("#triggerForm").submit();
            });

            $("#warningModal").on("hide.bs.modal", function () {
                $("#saveButton").removeClass("disabled");
                $("#saveButton").find(".fa-spinner").addClass("hidden");
            });
        </script>
    }
}
