@model GRA.Controllers.ViewModel.MissionControl.Triggers.TriggersDetailViewModel

@section styles {
    <style>
        .trigger-details-form .tab-pane {
            border-left: 1px solid #ddd;
            border-right: 1px solid #ddd;
            border-bottom: 1px solid #ddd;
            border-radius: 0px 0px 5px 5px;
            padding: 10px;
        }

        .trigger-details-form .nav-tabs {
            margin-bottom: 0;
        }

        .trigger-details-form .form-group {
            margin-top: 1rem;
        }

        .trigger-details-form .trigger-requirements-box {
            border: 1px solid #ccc;
            padding: 1rem;
            border-radius: 0.5rem;
            margin-top: 2rem;
            margin-bottom: 2rem;
        }

        @@media (max-width: 768px) {
            .text-sm-left {
                text-align: left;
            }
        }
    </style>
}

<form asp-controller="Triggers"
      asp-action="@Model.Action"
      method="post"
      role="form"
      enctype="multipart/form-data"
      style="padding: 10px 0;"
      id="triggerForm"
      class="form-horizontal trigger-details-form">
    <input asp-for="BadgeRequiredList" type="hidden" />
    <input asp-for="ChallengeRequiredList" type="hidden" />
    <input asp-for="IsSecretCode" type="hidden" />
    <input asp-for="UseBadgeMaker" type="hidden" />
    <input asp-for="BadgeMakerUrl" type="hidden" />
    <input asp-for="BadgeMakerImage" type="hidden" />
    <input asp-for="EditMail" type="hidden" />
    <input asp-for="EditVendorCode" type="hidden" />
    <input asp-for="EditAvatarBundle" type="hidden" />
    <input asp-for="AwardsPrize" type="hidden" />
    <input asp-for="AwardsMail" type="hidden" />
    @if (Model.Action == "Edit")
    {
        <input asp-for="Trigger.Id" type="hidden" />
        <input asp-for="Trigger.RelatedBranchId" type="hidden" />
        <input asp-for="Trigger.RelatedSystemId" type="hidden" />
        <input asp-for="Trigger.AwardBadgeId" type="hidden" />
    }

    @if (Model.DependentTriggers?.Count > 0)
    {
        <div class="panel-group row-spacing" id="accordionDependent" role="tablist" aria-multiselectable="true">
            <div class="panel panel-default">
                <div class="panel-heading" role="tab" id="headingDependent">
                    <h4 class="panel-title">
                        <a role="button" data-toggle="collapse" data-parent="#accordionDependent" href="#collapseDependent" aria-expanded="false" aria-controls="collapseDependent">
                            Dependent Triggers
                        </a>
                    </h4>
                </div>
                <div id="collapseDependent" class="panel-collapse collapse" role="tabpanel" aria-labelledby="headingDependent">
                    <div class="panel-body">
                        The following trigger(s) depend on this trigger:
                        <ul>
                            @foreach (var trigger in Model.DependentTriggers)
                            {
                                <li>
                                    <a target="_blank" href="@Url.Action("Edit", new { id = trigger.Id })"> @trigger.Name</a>
                                </li>
                            }
                        </ul>
                    </div>
                </div>
            </div>
        </div>
    }

    @if (Model.RelatedEvents?.Count > 0)
    {
        <div class="panel-group row-spacing" id="accordionRelated" role="tablist" aria-multiselectable="true">
            <div class="panel panel-default">
                <div class="panel-heading" role="tab" id="headingRelated">
                    <h4 class="panel-title">
                        <a role="button" data-toggle="collapse" data-parent="#accordionRelated" href="#collapseRelated" aria-expanded="false" aria-controls="collapseRelated">
                            Related Events
                        </a>
                    </h4>
                </div>
                <div id="collapseRelated" class="panel-collapse collapse" role="tabpanel" aria-labelledby="headingRelated">
                    <div class="panel-body">
                        The following event(s) relate to this trigger:
                        <ul>
                            @foreach (var graEvent in Model.RelatedEvents)
                            {
                                <li>
                                    <a target="_blank" href="@Url.Action("Edit", "Events", new { id = graEvent.Id })"> @graEvent.Name</a>
                                </li>
                            }
                        </ul>
                    </div>
                </div>
            </div>
        </div>
    }

    @if (Model.Action == "Edit")
    {
        <div style="font-size:large;">
            Created By:
            @if (Model.CanViewParticipants)
            {
                <a asp-controller="Participants" asp-action="@nameof(ParticipantsController.Detail)" asp-route-id="@Model.Trigger.CreatedBy" target="_blank">@Model.CreatedByName</a>
            }
            else
            {
                @Model.CreatedByName
            }
        </div>

        @if (!string.IsNullOrEmpty(Model.MaxPointsWarningMessage))
        {
            <div class="col-xs-12 col-sm-6 col-sm-offset-3">
                <div class="alert alert-warning">
                    <span class="fa fa-exclamation-circle" aria-hidden="true"></span> @Model.MaxPointsWarningMessage
                </div>
            </div>
        }
    }


    <div class="col-xs-12 form-group-lg" style="margin-top: 2rem; margin-bottom: 2rem;">
        <label asp-for="Trigger.Name" class="control-label col-sm-3"></label>
        <div class="col-sm-9">
            <input asp-for="Trigger.Name"
                   class="form-control trigger-name-field"
                   readonly="@(!Model.IgnorePointLimits && !string.IsNullOrEmpty(Model.MaxPointsWarningMessage) ? "readonly" : null)" />
            <span asp-validation-for="Trigger.Name" class="text-danger"></span>
        </div>
    </div>

    <ul class="nav nav-tabs" role="tablist">
        <li role="presentation" class=@(Model.IsSecretCode ? "active" : "")>
            <a id="codeTab" href="#secretCode" aria-controls="secretCode" role="tab" data-toggle="tab">Secret Code</a>
        </li>
        <li role="presentation" class=@(Model.IsSecretCode ? "" : "active")>
            <a id="requirementsTab" href="#requirements" aria-controls="requirements" role="tab" data-toggle="tab">Requirements</a>
        </li>
    </ul>

    <div class="tab-content">
        <div role="tabpanel" class="tab-pane @(Model.IsSecretCode ? "active" : "")" id="secretCode">
            <div class="col-xs-12" style="margin-top: 1rem;">
                <p>
                    <strong>
                        Choose a secret code to trigger this award. Don't choose something that is easy
                        to guess!
                    </strong>
                </p>
                <p>
                    Secret codes must be less than 50 characters and can only contain letters and numbers.
                    Upper-case and lower-case don't matter.
                </p>
            </div>
            <div class="col-xs-12 form-group-lg">
                <label asp-for="Trigger.SecretCode" class="control-label col-sm-3"></label>
                <div class="col-sm-9">
                    <span id="SecretCode-Icon" style="float:left;margin-top:15px;" class="fa colored-icon hide"></span>
                    <div style="margin-left:20px;">
                        <input asp-for="Trigger.SecretCode"
                               class="form-control"
                               readonly="@(!Model.IgnorePointLimits && !string.IsNullOrEmpty(Model.MaxPointsWarningMessage) ? "readonly" : null)" />
                        <span id="SecretCode-Validation" asp-validation-for="Trigger.SecretCode" class="text-success"></span>
                    </div>
                </div>
            </div>
            <br style="clear: both;" />
        </div>

        <div role="tabpanel" class="tab-pane @(Model.IsSecretCode ? "" : "active")" id="requirements">
            <div class="col-xs-12" style="margin-top: 1rem;">
                <p>
                    <strong>
                        You can trigger this award through a combination of requirements selected below.
                    </strong>
                </p>
                <p>
                    Participants will have to have all of the achievements you select in order to
                    receive the award.
                </p>
                <span asp-validation-for="TriggerRequirements" style="font-weight:bold;"></span>
            </div>

            <div class="col-xs-12 form-group">
                <label asp-for="Trigger.Points" class="control-label col-sm-4"></label>
                <div class="col-sm-8">
                    <input asp-for="Trigger.Points"
                           class="form-control"
                           readonly="@(!Model.IgnorePointLimits && !string.IsNullOrEmpty(Model.MaxPointsWarningMessage) ? "readonly" : null)" />
                    <span asp-validation-for="Trigger.Points" class="text-danger"></span>
                </div>
            </div>

            <div class="col-xs-12 col-sm-10 col-sm-offset-1" style="margin-top: 2rem;">
                <div class="panel panel-warning">
                    <div class="panel-heading">
                        <h3 class="panel-title">Require Challenges and Triggers</h3>
                    </div>
                    <div class="panel-body">

                        <div class="form-inline" style="margin-bottom: 1em;">
                            <p class="form-control-static"><strong>Participant must have earned</strong></p>
                            <input asp-for="Trigger.ItemsRequired"
                                   class="form-control"
                                   min="0"
                                   readonly="@(!Model.IgnorePointLimits && !string.IsNullOrEmpty(Model.MaxPointsWarningMessage) ? "readonly" : null)" />
                            <p class="form-control-static"><strong>of the following:</strong></p>
                            <span asp-validation-for="Trigger.ItemsRequired" class="text-danger" />
                        </div>
                        <div>

                        </div>
                        <div>
                            <table class="table table-condensed table-bordered table-striped">
                                <thead>
                                    <tr>
                                        <th>Name</th>
                                        <th width="44px">Type</th>
                                        <th width="75px">Badge</th>
                                        <th width="44px">&nbsp;</th>
                                    </tr>
                                </thead>
                                <tbody id="requirementList">
                                    <tr id="noRequirements" class="@(Model.TriggerRequirements?.Count > 0 ? "hide" : "")">
                                        <td colspan="4"><em>No challenges or triggers required.</em></td>
                                    </tr>
                                    @if (Model.TriggerRequirements != null)
                                    {
                                        foreach (var requirement in Model.TriggerRequirements)
                                        {
                                            <tr>
                                                <td>
                                                    @requirement.Name
                                                </td>
                                                <td style="text-align:center;">
                                                    <span class="fa fa-2x @requirement.Icon" title="@requirement.IconDescription"></span>
                                                </td>
                                                <td>
                                                    @if (!string.IsNullOrWhiteSpace(requirement.BadgePath))
                                                    {
                                                        <img class="img-thumbnail" style="height: auto; width: 64px;"
                                                             src="~/@requirement.BadgePath?@DateTime.Now.ToString("yyMMddHHmmss")"
                                                             asp-append-version="true" />
                                                    }
                                                    else
                                                    {
                                                        <text>&nbsp;</text>
                                                    }
                                                </td>
                                                <td>
                                                    <button type="button"
                                                            id="removeRequirementButton"
                                                            class="btn btn-link btn-xs"
                                                            data-badgeid="@requirement.BadgeId"
                                                            data-challengeid="@requirement.ChallengeId">
                                                        <span class="fa fa-2x fa-minus-circle text-danger" aria-hidden="true"></span>
                                                    </button>
                                                </td>
                                            </tr>
                                        }
                                    }
                                </tbody>
                            </table>
                        </div>
                        <button type="button"
                                id="addButton"
                                class="btn btn-warning"
                                disabled="@(!Model.IgnorePointLimits && !string.IsNullOrEmpty(Model.MaxPointsWarningMessage) ? "disabled" : null)">
                            Add Challenges or Triggers
                        </button>
                    </div>
                </div>
            </div>

            <div class="col-xs-12 form-group">
                <label asp-for="Trigger.LimitToSystemId" class="control-label col-sm-4"></label>
                <div class="col-sm-8">
                    <select asp-for="Trigger.LimitToSystemId"
                            asp-items="Model.SystemList"
                            class="form-control"
                            disabled="@(!Model.IgnorePointLimits && !string.IsNullOrEmpty(Model.MaxPointsWarningMessage) ? "disabled" : null)">
                        <option value="">No</option>
                    </select>
                    <span asp-validation-for="Trigger.LimitToSystemId" class="text-danger"></span>
                </div>
            </div>

            <div class="col-xs-12 form-group">
                <label asp-for="Trigger.LimitToBranchId" class="control-label col-sm-4"></label>
                <div class="col-sm-8">
                    <select asp-for="Trigger.LimitToBranchId"
                            asp-items="Model.BranchList"
                            class="form-control"
                            disabled="@(!Model.IgnorePointLimits && !string.IsNullOrEmpty(Model.MaxPointsWarningMessage) ? "disabled" : null)">
                        <option value="">No</option>
                    </select>
                    <span asp-validation-for="Trigger.LimitToBranchId" class="text-danger"></span>
                </div>
            </div>

            <div class="col-xs-12 form-group">
                <label asp-for="Trigger.LimitToProgramId" class="control-label col-sm-4"></label>
                <div class="col-sm-8">
                    <select asp-for="Trigger.LimitToProgramId"
                            asp-items="Model.ProgramList"
                            class="form-control"
                            disabled="@(!Model.IgnorePointLimits && !string.IsNullOrEmpty(Model.MaxPointsWarningMessage) ? "disabled" : null)">
                        <option value="">No</option>
                    </select>
                    <span asp-validation-for="Trigger.LimitToProgramId" class="text-danger"></span>
                </div>
            </div>
            <br style="clear: both;" />
        </div>
    </div>

    <div class="row row-spacing">
        <div class="col-xs-12">
            <label asp-for="Trigger.ActivationDate" class="control-label"></label>
            <div class="input-group date" id="activationDatePicker">
                <span class="input-group-addon">
                    <span class="fa fa-calendar"></span>
                </span>
                <input asp-for="Trigger.ActivationDate"
                       type="text"
                       class="form-control"
                       readonly="@(!Model.IgnorePointLimits && !string.IsNullOrEmpty(Model.MaxPointsWarningMessage) ? "readonly" : null)" />
            </div>
            <span asp-validation-for="Trigger.ActivationDate" class="text-danger"></span>
        </div>
    </div>

    <div class="panel panel-primary" style="margin-top: 2rem;">
        <div class="panel-heading">
            <h3 class="panel-title">Awards</h3>
        </div>
        <div class="panel-body">
            <div class="col-xs-12 form-group">
                <label asp-for="Trigger.AwardMessage" class="control-label col-sm-3"></label>
                <div class="col-sm-9">
                    <textarea asp-for="Trigger.AwardMessage"
                              class="form-control"
                              readonly="@(!Model.IgnorePointLimits && !string.IsNullOrEmpty(Model.MaxPointsWarningMessage) ? "readonly" : null)"></textarea>
                    <span asp-validation-for="Trigger.AwardMessage" class="text-danger"></span>
                </div>
            </div>

            <div class="col-xs-12 form-group">
                <div class="col-sm-3">
                    <div class="row-12 text-right text-sm-left">
                        <label asp-for="Trigger.AwardPoints" class="control-label"></label>
                    </div>
                    <div class="row-12 text-right text-sm-left">
                        <label style="font-size: 12px;">@Model.MaxPointsMessage</label>
                    </div>
                </div>
                <div class="col-sm-9">
                    <input asp-for="Trigger.AwardPoints"
                           value="@(Model.Trigger?.AwardPoints ?? 0)"
                           min="0"
                           class="form-control"
                           readonly="@(!Model.IgnorePointLimits && !string.IsNullOrEmpty(Model.MaxPointsWarningMessage) ? "readonly" : null)" />
                    <span asp-validation-for="Trigger.AwardPoints" class="text-danger"></span>
                </div>
            </div>


            <div class="row row-spacing">
                <div class="col-xs-12">
                    @if (!string.IsNullOrWhiteSpace(Model.BadgePath))
                    {
                        <label class="control-label">Edit Badge</label>
                    }
                    else
                    {
                        <label class="control-label">Award Badge</label>
                    }
                </div>

                <div class="col-xs-12 col-sm-4 col-md-3">
                    @if (!string.IsNullOrWhiteSpace(Model.BadgePath))
                    {
                        <input asp-for="BadgePath" type="hidden" />
                        <img id="badgeImage" class="img-thumbnail badge-lg"
                             src="~/@Model.BadgePath?@DateTime.Now.ToString("yyMMddHHmmss")"
                             asp-append-version="true" />
                    }
                    else
                    {
                        <img id="badgeImage" class="img-thumbnail badge-lg" src="@Model.BadgeMakerImage" style="height:210px;" />
                    }
                    <span asp-validation-for="BadgePath" class="text-danger" style="display:block;"></span>
                </div>

                <div class="col-xs-12 col-sm-8 col-md-9">
                    <ul class="nav nav-tabs" role="tablist">
                        <li role="presentation" class=@(Model.UseBadgeMaker ? "active" : "")>
                            <a id="badgeTab" href="#badge" aria-controls="badge" role="tab" data-toggle="tab">Badge Maker</a>
                        </li>
                        <li role="presentation" class=@(Model.UseBadgeMaker ? "" : "active")>
                            <a id="uploadTab" href="#upload" aria-controls="upload" role="tab" data-toggle="tab">Upload an Image</a>
                        </li>
                    </ul>

                    <div class="tab-content">
                        <div role="tabpanel" class="tab-pane @(Model.UseBadgeMaker ? "active" : "")" id="badge">
                            <button id="openMaker" type="button" class="btn btn-default">
                                <span class="fa fa-certificate"></span> Create a Badge
                            </button>
                        </div>
                        <div role="tabpanel" class="tab-pane @(Model.UseBadgeMaker ? "" : "active")" id="upload">
                            <p>Upload a badge image. Badge images must be square.</p>
                            <div class="input-group">
                                <label class="input-group-btn">
                                    <span class="btn btn-default btn-file">
                                        <span class="fa fa-file-image-o"></span> Select an image<input type="file" asp-for="BadgeUploadImage" accept=".png,.jpg,.jpeg" style="display: none;" />
                                    </span>
                                </label>
                                <input type="text" class="form-control" readonly id="selectedFile">
                            </div>
                            <div>
                                <span asp-validation-for="BadgeUploadImage" class="text-danger"></span>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

    @if (Model.EditVendorCode || Model.Trigger?.AwardVendorCodeTypeId != null)
    {
        if (!string.IsNullOrWhiteSpace(Model.VendorCodeType) || Model.VendorCodeTypeList.Count() > 0)
        {
            <div class="row row-spacing">
                <div class="col-xs-12">
                    <label asp-for="Trigger.AwardVendorCodeTypeId" class="control-label"></label>
                    @if (Model.EditVendorCode)
                    {
                        <select asp-for="Trigger.AwardVendorCodeTypeId" asp-items="Model.VendorCodeTypeList" class="form-control">
                            <option value="">No</option>
                        </select>
                    }
                    else
                    {
                        <input asp-for="VendorCodeType" class="form-control" readonly />
                    }
                    <span asp-validation-for="Trigger.AwardVendorCodeTypeId" class="text-danger"></span>
                </div>
            </div>
        }
    }

    @if (Model.EditAvatarBundle || Model.Trigger?.AwardAvatarBundleId != null)
    {
        if (!string.IsNullOrWhiteSpace(Model.UnlockableAvatarBundle) || Model.UnlockableAvatarBundleList.Count() > 0)
        {
            <div class="row row-spacing">
                <div class="col-xs-12">
                    <label asp-for="Trigger.AwardAvatarBundleId" class="control-label"></label>
                    @if (Model.EditAvatarBundle)
                    {
                        <select asp-for="Trigger.AwardAvatarBundleId" asp-items="Model.UnlockableAvatarBundleList" class="form-control">
                            <option value="">No</option>
                        </select>
                    }
                    else
                    {
                        <input asp-for="UnlockableAvatarBundle" class="form-control" readonly />
                    }
                    <span asp-validation-for="Trigger.AwardAvatarBundleId" class="text-danger"></span>
                </div>
            </div>
        }
    }

    <div class="panel-group" id="accordionPrize" role="tablist" aria-multiselectable="true">
        <div class="panel panel-info">
            <div class="panel-heading" role="tab" id="headingPrize">
                <h4 class="panel-title">
                    <a role="button" data-toggle="collapse" data-parent="#accordionPrize" href="#collapsePrize" aria-expanded="true" aria-controls="collapsePrize">
                        <span id="prizeIcon" class="fa fa-lg @(Model.AwardsPrize ? "fa-caret-down" : "fa-caret-right")"></span>
                        Award Prize
                    </a>
                </h4>
            </div>
            <div id="collapsePrize" class="panel-collapse collapse @(Model.AwardsPrize ? "in" : "")" role="tabpanel" aria-labelledby="headingPrize">
                <div class="panel-body">
                    <div class="row row-spacing">
                        <div class="col-xs-12">
                            <label asp-for="Trigger.AwardPrizeName" class="control-label"></label>
                            <input asp-for="Trigger.AwardPrizeName"
                                   class="form-control"
                                   readonly="@(!Model.IgnorePointLimits && !string.IsNullOrEmpty(Model.MaxPointsWarningMessage) ? "readonly" : null)" />
                            <span asp-validation-for="Trigger.AwardPrizeName" class="text-danger"></span>
                        </div>
                    </div>
                    <div class="row row-spacing">
                        <div class="col-xs-12">
                            <label asp-for="Trigger.AwardPrizeRedemptionInstructions" class="control-label"></label>
                            <textarea asp-for="Trigger.AwardPrizeRedemptionInstructions"
                                      class="form-control"
                                      readonly="@(!Model.IgnorePointLimits && !string.IsNullOrEmpty(Model.MaxPointsWarningMessage) ? "readonly" : null)"></textarea>
                            <span asp-validation-for="Trigger.AwardPrizeRedemptionInstructions" class="text-danger"></span>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

    @if (Model.EditMail || Model.AwardsMail)
    {
        <div class="panel-group" id="accordionMail" role="tablist" aria-multiselectable="true">
            <div class="panel panel-info">
                <div class="panel-heading" role="tab" id="headingMail">
                    <h4 class="panel-title">
                        @if (Model.EditMail)
                        {
                            <a role="button" data-toggle="collapse" data-parent="#accordionMail" href="#collapseMail" aria-expanded="true" aria-controls="collapseMail">
                                <span id="mailIcon" class="fa fa-lg @(Model.AwardsMail ? "fa-caret-down" : "fa-caret-right")"></span>
                                Award Mail
                            </a>
                        }
                        else
                        {
                            @:Award Mail
                        }
                    </h4>
                </div>
                <div id="collapseMail" class="panel-collapse collapse @(Model.AwardsMail ? "in" : "")" role="tabpanel" aria-labelledby="headingMail">
                    <div class="panel-body">
                        <div class="row row-spacing">
                            <div class="col-xs-12">
                                <label asp-for="Trigger.AwardMailSubject" class="control-label"></label>
                                <input asp-for="Trigger.AwardMailSubject"
                                       class="form-control"
                                       readonly="@(!Model.EditMail || (!Model.IgnorePointLimits && !string.IsNullOrEmpty(Model.MaxPointsWarningMessage)) ? "readonly" : null)" />
                                <span asp-validation-for="Trigger.AwardMailSubject" class="text-danger"></span>
                            </div>
                        </div>
                        <div class="row row-spacing">
                            <div class="col-xs-12">
                                <label asp-for="Trigger.AwardMail" class="control-label"></label>
                                <textarea asp-for="Trigger.AwardMail"
                                          class="form-control"
                                          readonly="@(!Model.EditMail || (!Model.IgnorePointLimits && !string.IsNullOrEmpty(Model.MaxPointsWarningMessage)) ? "readonly" : null)"></textarea>
                                <span asp-validation-for="Trigger.AwardMail" class="text-danger"></span>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    }


    <div class="form-group">
        <a asp-action="Index" class="btn btn-default">Return to List</a>
        @if (Model.IgnorePointLimits || string.IsNullOrEmpty(Model.MaxPointsWarningMessage))
        {
            <button type="submit" id="saveButton" class="btn btn-primary btn-spinner">
                <span class="buttonText">
                    @(Model.Action == "Edit" ? "Save" : Model.Action) Trigger
                </span>
                <span class="fa fa-spinner fa-pulse fa-lg fa-fw hidden"></span>
            </button>
        }
    </div>
</form>


<div class="row">
    <div class="modal fade frame-modal"
         id="badgeModal"
         tabindex="-1"
         role="dialog"
         aria-labelledby="badgeModalLabel">
        <div class="modal-content">
            <div class="modal-body" style="padding: 30px;">
                <button class="frame-close fa-stack fa-lg gra-close-stack gra-close-stack-absolute"
                        data-dismiss="modal"
                        alt="Close dialog.">
                    <span class="fas fa-circle fa-stack-2x fa-inverse"></span>
                    <span class="fas fa-times-circle fa-stack-1x fa-lg gra-close-times"></span>
                </button>
                <iframe id="badgeMaker" class="badge-maker"></iframe>
            </div>
        </div>
    </div>
</div>

@if (Model.IgnorePointLimits && Model.MaxPointLimit != null)
{

    <div class="modal fade"
         id="warningModal"
         tabindex="-1"
         role="dialog"
         aria-labelledby="warningModalLabel">
        <div class="modal-dialog" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                        <span aria-hidden="true">&times;</span>
                    </button>
                    <h1 class="modal-title h4" id="deleteModalLabel">
                        Warning: Award points exceed maximum
                    </h1>
                </div>
                <div class="modal-body">
                    <span class="fa fa-exclamation-triangle" aria-hidden="true"></span>
                    <span id="modal-text">
                        The awarded points for this trigger exceed the maximum of <strong>@Model.MaxPointLimit points</strong>. Do you wish to continue?
                    </span>
                </div>
                <div class="modal-footer">
                    <button type="button"
                            class="btn btn-default"
                            data-dismiss="modal"
                            style="margin-right: 1em;">
                        Cancel
                    </button>
                    <button id="warningSave"
                            type="button"
                            class="btn btn-primary"
                            data-dismiss="modal"
                            style="margin-right: 1em;">
                        Save Trigger
                    </button>
                </div>
            </div>
        </div>
    </div>

}

<div class="row">
    <div class="modal fade"
         id="listModal"
         tabindex="-1"
         role="dialog"
         aria-labelledby="listModalLabel">
        <div class="modal-dialog modal-lg" role="document">
            <div class="row">
                <div class="col-xs-12 col-sm-10 col-sm-offset-1">
                    <div class="panel panel-default">
                        <div class="panel-heading">
                            <h1 class="h4 modal-title lead">Add requirement</h1>
                        </div>
                        <div class="panel-body">
                            <div class="row">
                                <div class="col-xs-12">
                                    <ul class="nav nav-pills" style="padding: 10px 0;">
                                        <li id="All" class="active requirementScope">
                                            <a>All</a>
                                        </li>
                                        <li id="System" class="requirementScope">
                                            <a>My System</a>
                                        </li>
                                        <li id="Branch" class="requirementScope">
                                            <a>My Branch</a>
                                        </li>
                                        <li id="Mine" class="requirementScope">
                                            <a>Mine</a>
                                        </li>
                                    </ul>
                                </div>
                            </div>

                            <div class="row row-spacing">
                                <div class="col-xs-8">
                                    <input id="searchText" class="form-control"
                                           placeholder="Enter text to search for an event here" />
                                </div>
                                <div class="col-xs-4">
                                    <div class="col-xs-6">
                                        <button type="button"
                                                id="searchButton"
                                                class="btn btn-default btn-block"
                                                style="margin-right: 8px;">
                                            Search
                                        </button>
                                    </div>
                                    <div class="col-xs-6">
                                        <button type="button"
                                                id="clearButton"
                                                class="btn btn-default btn-block">
                                            Clear
                                        </button>
                                    </div>
                                </div>
                            </div>
                            <div id="searchMessage" class="row hide">
                                <div class="col-xs-12">
                                    <p class="alert-sm alert-info">
                                        Searching for '<strong id="searchTerm"></strong>'
                                    </p>
                                </div>
                            </div>
                            <div class="row">
                                <div id="modalRequirementList" class="col-xs-12">
                                </div>
                            </div>
                        </div>
                        <div class="modal-footer">
                            <button type="button"
                                    class="btn btn-default"
                                    data-dismiss="modal"
                                    style="margin-right: 1em;">
                                Close
                            </button>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

@section scripts
    {
    <script>
        var badgeIds = $("#BadgeRequiredList").val().split(',').filter(function (x) { return x }).map(Number);
        var challengeIds = $("#ChallengeRequiredList").val().split(',').filter(function (x) { return x }).map(Number);
        var requirementsUrl = "@Url.Action("GetRequirementList", "Lookup")";
        var page = 1;
        var scope = "All";
        var search = "";
        var thisBadge = $("#Trigger_AwardBadgeId").val();

        function UpdateRequirementsList() {
            $.get(requirementsUrl,
                {
                    badgeIds: badgeIds.join(','),
                    challengeIds: challengeIds.join(','),
                    scope: scope,
                    search: search,
                    page: page,
                    thisBadge: thisBadge
                }, function(response) {
                    $("#modalRequirementList").html(response);
                });
        }

        $("#addButton").on('click', function(e) {
            $("#listModal").modal("show");
            UpdateRequirementsList();
        });

        $(document).on("click", ".addRequirementButton", function () {
            if (!$(this).hasClass("disabled")) {
                var badgeId = $(this).data("badgeid");
                var challengeId = $(this).data("challengeid");

                if (challengeId != "") {
                    challengeIds.push(challengeId);
                    $("#ChallengeRequiredList").val(challengeIds.join(','));
                }
                else if (badgeId != "") {
                    badgeIds.push(badgeId);
                    $("#BadgeRequiredList").val(badgeIds.join(','));
                }
                $("#noRequirements").addClass("hide");

                var row = $(this).parent().parent().clone();
                var addedItem = row.find(".addRequirementButton");
                addedItem.removeClass("addRequirementButton")
                addedItem.children().removeClass("fa-plus-circle text-primary");
                addedItem.children().addClass("fa-minus-circle text-danger");
                addedItem.attr("id", "removeRequirementButton");
                $("#requirementList").append(row);

                $(".addRequirementButton").addClass("disabled");

                UpdateRequirementsList();

            }
        });

        $(document).on("click", "#removeRequirementButton", function() {
            var badgeId = $(this).data("badgeid");
            var challengeId = $(this).data("challengeid");

            if (challengeId != "")
            {
                challengeIds.splice(challengeIds.indexOf(challengeId), 1);
                $("#ChallengeRequiredList").val(challengeIds.join(','));
            }
            else if (badgeId != "")
            {
                badgeIds.splice(badgeIds.indexOf(badgeId), 1);
                $("#BadgeRequiredList").val(badgeIds.join(','));
            }
            $(this).parent().parent().remove();
            if (badgeIds == "" && challengeIds == "")
            {
                $("#noRequirements").removeClass("hide");
            }
        });

        $(".requirementScope").on("click", function(e) {
            e.preventDefault();
            $(this).siblings().removeClass("active");
            $(this).addClass().addClass("active");
            scope = $(this).attr("id");
            page = 1;
            UpdateRequirementsList();
        });

        $("#searchButton").on("click", function() {
            search = $("#searchText").val();
            if (search != "")
            {
                $("#searchMessage").removeClass("hide");
                $("#searchTerm").html(search);
            }
            else
            {
                $("#searchMessage").addClass("hide");
            }
            page = 1;
            UpdateRequirementsList();
        })

        $("#clearButton").on("click", function() {
            $("#searchText").val("");
            search = "";
            $("#searchMessage").addClass("hide");
            page = 1;
            UpdateRequirementsList();
        })

        $(document).on("click", ".page-button", function() {
            if (!$(this).hasClass("disabled"))
            {
                page = $(this).data("page");
                UpdateRequirementsList();
            }
        });

        $("#Trigger_LimitToSystemId").on("change", function() {
            var systemId = $(this).val();
            var branchList = $("#Trigger_LimitToBranchId");
            var branchId = branchList.val();
            var url = "@Url.Action("GetBranches", "Lookup", new { Area = string.Empty })";

            $.getJSON(url, { systemId: systemId, branchId: branchId, listAll: "true", prioritize: "true" }, function(response) {
                branchList.empty();
                branchList.append(new Option("No", ""));
                $.each(response, function(index, item) {
                    branchList.append(new Option(item.text, item.value, item.selected, item.selected))
                });
            });
        });

        $("#codeTab").on('show.bs.tab', function() {
            $("#IsSecretCode").val("true");
        });

        $("#requirementsTab").on('show.bs.tab', function() {
            $("#IsSecretCode").val("false");
        });

        $(':file').on('fileselect', function(event, numFiles, label) {
            var input = $(this).parents('.input-group').find(':text'),
                log = numFiles > 1 ? numFiles = ' files selected' : label;

            if (input.length)
            {
                input.val(log);
                $('.btn-file').removeClass('btn-default');
                $('.btn-file').addClass('btn-success');
                $("#badgeImage").removeAttr("src");
                $("#badgeImage").height(200);
                $("#BadgeMakerImage").val("");
            }
            else
            {
                input.val('');
                $('.btn-file').addClass('btn-default');
                $('.btn-file').removeClass('btn-success');
            }
        });

        $(document).on('change', ':file', function() {
            var input = $(this),
                numFiles = input.get(0).files ? input.get(0).files.length : 1,
                label = input.val().replace(/\\/g, '/').replace(/.*\//, '');
            input.trigger('fileselect', [numFiles, label]);
        });

        $("#badgeTab").on('show.bs.tab', function() {
            $("#UseBadgeMaker").val("true");
        });

        $("#uploadTab").on('show.bs.tab', function() {
            $("#UseBadgeMaker").val("false");
        });

        $("#openMaker").on("click", function() {
            $("#badgeMaker").attr("src", "@Html.Raw(@Model.BadgeMakerUrl)");
            $("#badgeModal").modal("show");
        });

        $(window).on("message", function(e) {
            $("#badgeModal").modal("hide");
            var data = e.originalEvent.data;
            $("#badgeImage").attr("src", data);
            $("#badgeImage").height(200);
            $("#BadgeMakerImage").val(data);
            $('#BadgeUploadImage').val('');
            $('.btn-file').addClass('btn-default');
            $('.btn-file').removeClass('btn-success');
            $('#selectedFile').val('');
        });

        $("#collapsePrize").on("show.bs.collapse", function() {
            $("#AwardsPrize").val("true");
            $("#prizeIcon").removeClass("fa-caret-right").addClass("fa-caret-down");
        });
        $("#collapsePrize").on("hide.bs.collapse", function() {
            $("#AwardsPrize").val("false");
            $("#prizeIcon").removeClass("fa-caret-down").addClass("fa-caret-right");
        });

        $("#collapseMail").on("show.bs.collapse", function() {
            $("#AwardsMail").val("true");
            $("#mailIcon").removeClass("fa-caret-right").addClass("fa-caret-down");
        });
        $("#collapseMail").on("hide.bs.collapse", function() {
            $("#AwardsMail").val("false");
            $("#mailIcon").removeClass("fa-caret-down").addClass("fa-caret-right");
        });

        $("#Trigger_SecretCode").on("blur", function () {
            if ($(this).val() != "" && !$(this).hasClass("input-validation-error")) {
                var secretCode = $(this).val();
                if (secretCode != "") {
                    if (secretCode != "@Model.Trigger?.SecretCode") {
                        var codeCheckUrl = "@Url.Action("SecretCodeInUse", "Lookup")";
                        var icon = $("#SecretCode-Icon");
                        icon.removeClass("hide fa-times fa-check");
                        icon.addClass("fa-spinner fa-spin");
                        $.post(codeCheckUrl, { secretCode: secretCode }, function (response) {
                            if (response) {
                                $("#Trigger_SecretCode").removeClass("valid");
                                $("#Trigger_SecretCode").addClass("input-validation-error");
                                $("#SecretCode-Validation").removeClass("text-success");
                                $("#SecretCode-Validation").addClass("text-danger");
                                $("#SecretCode-Validation").removeClass("field-validation-valid");
                                $("#SecretCode-Validation").addClass("field-validation-error");
                                $("#SecretCode-Validation").text("That secret code is already in use.");
                                icon.removeClass("fa-spinner fa-spin");
                                icon.addClass("fa-times");
                            }
                            else {
                                $("#SecretCode-Validation").removeClass("field-validation-valid");
                                $("#SecretCode-Validation").text("That secret code is available.");
                                $("#SecretCode-Validation").removeClass("text-danger");
                                $("#SecretCode-Validation").addClass("text-success");
                                icon.removeClass("fa-spinner fa-spin");
                                icon.addClass("fa-check");
                            }
                        });
                    }
                    else {
                        $("#SecretCode-Icon").removeClass("hide fa-times").addClass("fa-check");
                        $("#SecretCode-Validation").removeClass("field-validation-valid");
                        $("#SecretCode-Validation").text("No change to secret code.");
                    }
                }
            }
        });

        $("#Trigger_SecretCode").on("keypress", function () {
            $("#SecretCode-Icon").addClass("hide");
            $("#SecretCode-Validation").addClass("field-validation-valid");
        });

        $().ready(function () {
            if ($('.trigger-name-field').first().val() === "") {
                $('.trigger-name-field').first().focus();
            }

        });

        @if (Model.IgnorePointLimits && Model.MaxPointLimit != null)
        {
            <text>
            $("#saveButton").on("click", function (e) {
                e.preventDefault();
                if ($("#Trigger_AwardPoints").val() > @Model.MaxPointLimit) {
                    @if (Model.Trigger != null)
                    {
                        <text>
                        if ($("#Trigger_AwardPoints").val() != @Model.Trigger.AwardPoints) {
                            $('#warningModal').modal("show");
                        }
                        else {
                            $("#triggerForm").submit();
                        }
                        </text>
                    }
                    else
                    {
                        @:$('#warningModal').modal("show");
                    }
                }
                else {
                    $("#triggerForm").submit();
                }
            });

            $("#warningSave").on("click", function () {
                $("#triggerForm").submit();
            });

            $("#warningModal").on("hide.bs.modal", function () {
                $("#saveButton").removeClass("disabled");
                $("#saveButton").find(".fa-spinner").addClass("hidden");
            });
            </text>
        }

        $("#activationDatePicker").datetimepicker({
            format: "MM/DD/YYYY h:mm a",
            allowInputToggle: true,
            sideBySide: true,
            icons: {
                time: "fa fa-clock-o",
                date: "fa fa-calendar",
                up: "fa fa-arrow-up",
                down: "fa fa-arrow-down",
                previous: "fa fa-arrow-left",
                next: "fa fa-arrow-right"
            }
        });
    </script>
}
