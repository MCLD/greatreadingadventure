@model GRA.Controllers.ViewModel.MissionControl.Questionnaires.QuestionnairesDetailViewModel

@section styles {
    <style>
        .removeRow {
            cursor: pointer;
            margin-top: 10px;
            float: right;
        }

        @if (Model.Questionnaire.IsLocked)
        {
            <text>
            .removeRow {
                display: none;
            }

            .orderable-row {
                cursor: default;
            }
            </text>
        }
    </style>
}

<form asp-controller="Questionnaires" asp-action="Edit" method="post" role="form">
    <input asp-for="Questionnaire.Id" type="hidden" />
    <input asp-for="QuestionSortOrder" type="hidden" />

    <div class="row row-spacing">
        <div class="col-xs-12">
            <label asp-for="Questionnaire.Name" class="control-label"></label>
            <input asp-for="Questionnaire.Name" class="form-control" />
            <span asp-validation-for="Questionnaire.Name" class="text-danger"></span>
        </div>
    </div>

    <a aria-label="Preview (Opens new window)"
       href="@Url.Action("Preview", new { id = Model.Questionnaire.Id })"
       target="_blank"
       class="btn btn-primary">Preview</a>

    <h3>Questions</h3>

    <div id="questionList">
        @if (Model.Questionnaire.Questions.Count > 0)
        {
            foreach (var question in Model.Questionnaire.Questions)
            {
                <div class="orderable-row" id="question_@question.Id">
                    <span class="fa fa-reorder" style="margin-right:6px;"></span>
                    <span class="name">@question.Name</span>
                    @if (!Model.Questionnaire.IsLocked)
                    {
                        <span class="fa fa-lg fa-minus-circle text-danger removeRow"></span>
                    }
                    <button type="button"
                            class="btn btn-default pull-right editQuestionButton"
                            style="margin-right:10px;"
                            data-id="@question.Id"
                            data-name="@question.Name"
                            data-text="@question.Text"
                            data-correctanswerid="@question.CorrectAnswerId">
                        @(!Model.Questionnaire.IsLocked ? "Edit" : "View")
                    </button>
                </div>
            }
        }
    </div>
    @if (!Model.Questionnaire.IsLocked)
    {
        <div class="form-group">
            <button type="button" id="addQuestionButton" class="btn btn-default">
                Add Question
            </button>
        </div>
    }
    <hr />

    <div class="form-group">
        <a asp-action="Index" class="btn btn-default">Return to List</a>
        @if (!Model.Questionnaire.IsLocked)
        {
            <button type="submit" class="btn btn-primary">
                <span class="buttonText">Save Changes</span>
                <span class="fa fa-spinner fa-pulse fa-lg fa-fw hidden"></span>
            </button>
        }
    </div>
</form>

<div class="row">
    <div class="modal fade"
         id="saveModal"
         tabindex="-1"
         role="dialog"
         aria-labelledby="saveModalLabel">
        <div class="modal-dialog modal-lg" role="document">
            <form id="saveModalForm"
                  asp-controller="Questionnaires"
                  asp-action="SaveQuestion"
                  method="post"
                  role="form"
                  style="display:inline">
                <input asp-for="Questionnaire.Id" type="hidden" />
                <input asp-for="Question.Id" type="hidden" />
                <input asp-for="AnswerSortOrder" type="hidden" />
                <div class="modal-content">
                    <div class="modal-header">
                        <button type="button"
                                class="close"
                                data-dismiss="modal"
                                aria-label="Close dialog">
                            <span aria-hidden="true">&times;</span>
                        </button>
                        <h1 class="modal-title h4" id="saveModalLabel">Edit Question</h1>

                    </div>
                    <div class="modal-body">
                        <div class="form-group">
                            <label asp-for="Question.Name" class="control-label"></label>
                            <input asp-for="Question.Name" class="form-control" />
                            <span asp-validation-for="Question.Name" class="text-danger"></span>
                        </div>
                        <div class="form-group">
                            <label asp-for="Question.Text" class="control-label"></label>
                            <textarea asp-for="Question.Text" class="form-control"></textarea>
                            <span asp-validation-for="Question.Text" class="text-danger"></span>
                        </div>

                        <div class="form-group">
                            <h4>Answers</h4>
                            <div id="answerList"></div>
                        </div>
                        @if (!Model.Questionnaire.IsLocked)
                        {
                            <button type="button" id="addAnswerButton" class="btn btn-default">
                                Add Answer
                        </button>
                        }
                    </div>
                    <div class="modal-footer">
                        <span id="modalUpdateText" style="display: none;font-size:large;">
                            Question saved!
                        </span>
                        <button type="button"
                                class="btn btn-default"
                                data-dismiss="modal"
                                style="margin-right: 1em;">
                            Cancel
                        </button>
                        @if (!Model.Questionnaire.IsLocked)
                        {
                            <button id="modalSaveButton"
                                    type="submit"
                                    class="btn btn-primary"
                                    aria-label="Confirm">
                                Save
                                <span id="modalSaveSpinner"
                                      class="fa fa-spinner fa-pulse fa-lg fa-fw hidden"></span>
                            </button>
                        }
                    </div>
                </div>
            </form>
        </div>
    </div>
</div>

@section scripts {
    <script>
        var answerListUrl = "@Url.Action("GetAnswerList", "Questionnaires")";
        var answerList = $("#answerList");
        var addCounter = 0;
        var saveProcessing = false;

        @if (Model.Questionnaire.IsLocked)
        {
        <text>
            $("input").prop('readonly', true);
            $("textarea").prop('readonly', true);
        </text>
        }

        function CreateAnswerRow(id, text, type) {
            return "<div class='orderable-row' name='answer_" + id + "' id='answer_" + id + "'><span class='fa fa-reorder' style='margin-top:10px;float:left;'></span><span class='fa fa-lg fa-minus-circle text-danger removeRow'></span><div class='input-group' style='margin:0 30px;'><span class='input-group-addon'><input type='radio' name='correctAnswer' value='" + id + "'></span><input class='form-control' name='" + type + "_" + id + "' value='" + text + "' required /></div></div>";
        }

        function UpdateAnswerList(answerListItems, correctAnswerId) {
            $.each(answerListItems, function (index, item) {
                answerList.append(CreateAnswerRow(item.id, item.text, "update"));
            });
            answerList.find("#answer_" + correctAnswerId).find("input[type=radio]").prop("checked", "true");

            @if (!Model.Questionnaire.IsLocked)
            {
            <text>
                answerList.sortable({
                    update: function () {
                        $("#AnswerSortOrder").val($(this).sortable("serialize"));
                    }
                });
            </text>
            }
            else
            {
            <text>
                answerList.find("input").prop("readonly", true);
                answerList.find("input[type=radio]").prop("disabled", true);
            </text>
            }
        }

        $(document).on("click", ".editQuestionButton", function (event) {
            var id = $(this).data("id");
            var name = $(this).data("name");
            var text = $(this).data("text");
            var correctAnswerId = $(this).data("correctanswerid");
            var modal = $("#saveModal").modal();
            answerList.empty();
            modal.find("#saveModalLabel").text('@(!Model.Questionnaire.IsLocked ? "Edit" : "View") Question - "' + name + '"');
            modal.find("#Question_Id").val(id);
            modal.find("#Question_Name").val(name);
            modal.find("#Question_Text").val(text);

            $.getJSON(answerListUrl, { questionId: id }, function (response) {
                UpdateAnswerList(response, correctAnswerId);
            });
        });

        @if (!Model.Questionnaire.IsLocked)
        {
        <text>
            $("#questionList").sortable({
                create: function () {
                    $("#QuestionSortOrder").val($(this).sortable("serialize"))
                },
                update: function () {
                    $("#QuestionSortOrder").val($(this).sortable("serialize"));
                }
            });

            $("#addQuestionButton").on("click", function () {
                var modal = $("#saveModal").modal();
                modal.find("#saveModalLabel").text("Add Question");
                modal.find("#Question_Id").val("-1");
                modal.find("#Question_Name").val("");
                modal.find("#Question_Text").val("");
                answerList.empty();
                answerList.sortable({
                    update: function () {
                        $("#AnswerSortOrder").val($(this).sortable("serialize"));
                    }
                });
            })

            $("#addAnswerButton").on("click", function () {
                addCounter++;
                answerList.append(CreateAnswerRow("new" + addCounter, "", "new"));
                $("#AnswerSortOrder").val(answerList.sortable("serialize"));

            });

            $(document).on("click", ".removeRow", function () {
                var listName = $(this).parent().parent().attr("id")
                $(this).parent().remove();
                if (listName == "questionList") {
                    $("#QuestionSortOrder").val($("#questionList").sortable("serialize"));
                }
                else {
                    $("#AnswerSortOrder").val(answerList.sortable("serialize"));
                }
            });

            $("#saveModalForm").on("submit", function (e) {
                e.preventDefault();
                if (saveProcessing == false) {
                    var form = $(this);
                    if (form.valid()) {
                        var parameters = form.serialize();
                        if (parameters.indexOf("correctAnswer") >= 0
                            || (!parameters.includes("update_") && !parameters.includes("new_"))) {
                            saveProcessing = true;
                            $("#modalSaveButton").addClass("disabled");
                            $("#modalSaveSpinner").removeClass("hidden");
                            $.post(form.attr("action"), { parameters: parameters }, function (response) {
                                if (response.success == true) {
                                    var questionId = form.find("#Question_Id").val();
                                    form.find("#saveModalLabel").html('Edit Question - "' + response.question.name + '"');
                                    addCounter = 0;
                                    answerList.empty();
                                    UpdateAnswerList(response.answers, response.question.correctAnswerId);
                                    form.find("#AnswerSortOrder").val("");
                                    if (questionId > 0) {
                                        var row = $("#question_" + response.question.id);
                                        row.children(".name").html(response.question.name)
                                        var button = row.children("button");
                                        button.data("name", response.question.name);
                                        button.data("text", response.question.text);
                                        button.data("correctanswerid", response.question.correctAnswerId);
                                    }
                                    else {
                                        form.find("#Question_Id").val(response.question.id);
                                        $("#questionList").append("<div class='orderable-row' id='question_" + response.question.id + "' +> <span class='fa fa-reorder' style='margin-right:6px;'></span> <span class='name'>" + response.question.name + "</span><span class='fa fa-lg fa-minus-circle text-danger removeRow'></span><button type='button' class='btn btn-default pull-right editQuestionButton' style='margin-right:10px;' data-id='" + response.question.id + "' data-name='" + response.question.name + "' data-text='" + response.question.text + "' data-correctanswerid='" + response.question.correctAnswerId + "'>Edit</button></div>");
                                        $("#QuestionSortOrder").val($("#questionList").sortable("serialize"));
                                    }
                                    $("#modalUpdateText").show().delay(2000).fadeOut("slow");
                                    $("#modalSaveSpinner").addClass("hidden");
                                    $("#modalSaveButton").removeClass("disabled");
                                    saveProcessing = false;
                                }
                                else {
                                    alert(response.message);
                                    $("#modalSaveSpinner").addClass("hidden");
                                    $("#modalSaveButton").removeClass("disabled");
                                    saveProcessing = false;
                                }
                            }).fail(function () {
                                alert("An error occurred.");
                                $("#modalSaveSpinner").addClass("hidden");
                                $("#modalSaveButton").removeClass("disabled");
                                saveProcessing = false;
                            });
                        }
                        else {
                            alert("Please select the correct answer.")
                        }
                    }
                }
            });
        </text>
        }
    </script>
}