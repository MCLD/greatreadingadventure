@model GRA.Controllers.ViewModel.MissionControl.Participants.ParticipantsDetailViewModel
@using GRA
@using GRA.Domain.Model
@await Html.PartialAsync("_ParticipantPartial")

<form asp-controller="Participants" method="post" role="form">
    <input asp-for="Id" type="hidden" />
    <input asp-for="HouseholdCount" type="hidden" />
    <input asp-for="PrizeCount" type="hidden" />
    <input asp-for="RoleCount" type="hidden" />
    <input asp-for="HasAccount" type="hidden" />
    <input asp-for="User.IsHomeschooled" type="hidden" />
    <input asp-for="User.SchoolNotListed" type="hidden" />
    <input asp-for="User.VendorCode" type="hidden" />
    <input asp-for="User.VendorCodeMessage" type="hidden" />

    <div class="row" style="padding: 10px 0;">
        <div class="col-xs-12">

            @if (Model.CanEditUsername)
            {
                <input asp-for="CanEditUsername" type="hidden" />
                <div class="row row-spacing">
                    <div class="col-xs-12">
                        <label asp-for="User.Username" class="control-label"></label>
                        <span id="Username-Icon" class="fa colored-icon hide"></span>
                        <input asp-for="User.Username" class="form-control" />
                        <span id="Username-Validation" asp-validation-for="User.Username" class="text-success"></span>
                    </div>
                </div>
            }

            <div class="row row-spacing">
                <div class="col-xs-12">
                    <label asp-for="User.FirstName" class="control-label"></label>
                    <input asp-for="User.FirstName" class="form-control" />
                    <span asp-validation-for="User.FirstName" class="text-danger"></span>
                </div>
            </div>

            <div class="row row-spacing">
                <div class="col-xs-12">
                    <label asp-for="User.LastName" class="control-label"></label>
                    <input asp-for="User.LastName" class="form-control" />
                    <span asp-validation-for="User.LastName" class="text-danger"></span>
                </div>
            </div>

            @if (Model.RequirePostalCode)
            {
                <div class="row row-spacing">
                    <div class="col-xs-12">
                        <label asp-for="User.PostalCode" class="control-label"></label>
                        <input asp-for="User.PostalCode" class="form-control" />
                        <span asp-validation-for="User.PostalCode" class="text-danger"></span>
                    </div>
                </div>
            }

            <div class="row row-spacing">
                <div class="col-xs-12">
                    <label asp-for="User.Email" class="control-label"></label>
                    <input asp-for="User.Email" class="form-control" />
                    <span asp-validation-for="User.Email" class="text-danger"></span>
                </div>
            </div>

            <div class="row row-spacing">
                <div class="col-xs-12">
                    <label asp-for="User.PhoneNumber" class="control-label"></label>
                    <input asp-for="User.PhoneNumber" class="form-control" />
                    <span asp-validation-for="User.PhoneNumber" class="text-danger"></span>
                </div>
            </div>

            <div class="row row-spacing">
                <div class="col-xs-12">
                    <label asp-for="User.SystemId" class="control-label"></label>
                    <select asp-for="User.SystemId" asp-items="Model.SystemList" class="form-control"></select>
                    <span asp-validation-for="User.SystemId" class="text-danger"></span>
                </div>
            </div>

            <div class="row row-spacing">
                <div class="col-xs-12">
                    <label asp-for="User.BranchId" class="control-label"></label>
                    <select asp-for="User.BranchId" asp-items="Model.BranchList" class="form-control"></select>
                    <span asp-validation-for="User.BranchId" class="text-danger"></span>
                </div>
            </div>

            <div class="row row-spacing">
                <div class="col-xs-12">
                    <label asp-for="User.ProgramId" class="control-label"></label>
                    <select asp-for="User.ProgramId" asp-items="Model.ProgramList" class="form-control"></select>
                    <span asp-validation-for="User.ProgramId" class="text-danger"></span>
                </div>
            </div>

            <div id="ageField" class="row row-spacing @(Model.ShowAge ? "": "hide")">
                <div class="col-xs-12">
                    <label asp-for="User.Age" class="control-label"></label>
                    <input asp-for="User.Age" class="form-control" type="text" />
                    <span id="ageMessage" asp-validation-for="User.Age" class="text-danger"></span>
                </div>
            </div>

            <div id="schoolFields" class="@(Model.ShowSchool ? "": "hide")">
                @if (Model.CanEditDetails)
                {
                    @await Html.PartialAsync("_SchoolSelectionPartial", Model);
                }
                else if (Model.ShowSchool)
                {
                    <label class="control-label">School</label>
                    @if (Model.User.IsHomeschooled)
                    {
                        <input class="form-control" type="text" value="Homeschooled" />
                    }
                    else if (Model.User.SchoolNotListed)
                    {
                        <input class="form-control" type="text" value="School not listed" />
                    }
                    else
                    {
                        <input class="form-control" type="text" value="@Model.School.Name" />
                    }
                }
            </div>

            @if (Model.AskEmailSubscription == true)
            {
                <div class="row row-spacing">
                    <div class="col-xs-12">
                        <label asp-for="User.IsEmailSubscribed" class="control-label">@Model.AskEmailSubscriptionText</label>
                        <select asp-for="User.IsEmailSubscribed" class="form-control">
                            <option value="false">No</option>
                            <option value="true">Yes</option>
                        </select>
                        <span asp-validation-for="User.IsEmailSubscribed" class="text-danger"></span>
                    </div>
                </div>
            }

            @if (!string.IsNullOrWhiteSpace(Model.TranslationDescriptionPastTense))
            {
                <div class="row row-spacing">
                    <div class="col-xs-12">
                        <label asp-for="User.DailyPersonalGoal" class="control-label"></label>
                        <div>
                            I will @Model.TranslationDescriptionPastTense
                            <input asp-for="User.DailyPersonalGoal" class="form-control" style="display:inline-block; width:75px;" />
                            @Model.ActivityDescriptionPlural a day
                        </div>
                        <span asp-validation-for="User.DailyPersonalGoal" class="text-danger"></span>
                    </div>
                </div>
            }

            @if (!string.IsNullOrWhiteSpace(Model.User.VendorCode) || Model.User.NeedsToAnswerVendorCodeQuestion)
            {
                <div class="row row-spacing" style="padding: 1rem 0; margin-top: 2rem; font-size: 1.5rem; border-radius: 0.5rem; border: 1px solid grey;">
                    <div class="col-xs-12">
                        <strong>Free Book Code:</strong>
                        @if (Model.User.NeedsToAnswerVendorCodeQuestion)
                        {
                            <button class="btn btn-info btn-spinner"
                                    asp-action="RedeemCode"
                                    asp-is-disabled="@(!Model.CanEditDetails)">
                                <span class="buttonText">Redeem code</span>
                                <span class="fa fa-spinner fa-pulse fa-lg fa-fw hidden"></span>
                            </button>
                            @if (Model.User.CanDonateVendorCode)
                            {
                                @:or
                                <button class="btn btn-success btn-spinner"
                                        asp-action="DonateCode"
                                        asp-is-disabled="@(!Model.CanEditDetails)">
                                    <span class="buttonText">Donate book</span>
                                    <span class="fa fa-spinner fa-pulse fa-lg fa-fw hidden"></span>
                                </button>
                            }
                            @if (Model.User.CanEmailAwardVendorCode)
                            {
                                @:or
                                <button id="emailAwardButton"
                                        class="btn btn-warning"
                                        asp-is-disabled="@(!Model.CanEditDetails)">
                                    <span class="buttonText">Email e-audiobook</span>
                                </button>
                            }
                        }
                        else
                        {
                            if (!string.IsNullOrEmpty(Model.User.VendorCodeUrl))
                            {
                                <strong>
                                    <a href="@Model.User.VendorCodeUrl"
                                       target="_blank">@Model.User.VendorCode</a>
                                </strong>
                            }
                            else
                            {
                                <strong>@Model.User.VendorCode</strong>
                            }
                            if (Model.User.Donated == true
                                && User.HasClaim(ClaimType.Permission,
                                    Permission.UnDonateVendorCode.ToString()))
                            {
                                <button class="btn btn-info btn-spinner"
                                        asp-action="UndonateCode"
                                        asp-is-disabled="@(!Model.CanEditDetails)">
                                    <span class="buttonText">Un-donate</span>
                                    <span class="fa fa-spinner fa-pulse fa-lg fa-fw hidden"></span>
                                </button>
                            }
                        }
                        @if (!string.IsNullOrWhiteSpace(Model.User.VendorCodeMessage))
                        {
                            @:/
                            @Html.Raw(Model.User.VendorCodeMessage)
                        }
                    </div>
                </div>
            }
        </div>
    </div>

    <div class="form-group">
        <a asp-action="Index" class="btn btn-default">Return to Participants</a>
        @if (Model.CanEditDetails)
        {
            <input asp-for="Action" value="@nameof(ParticipantsController.Detail)" type="hidden" />
            <input asp-for="CanEditDetails" type="hidden" />
            <input asp-for="Username" type="hidden" />
            <input asp-for="User.Id" type="hidden" />
            <input asp-for="User.CardNumber" type="hidden" />
            <input asp-for="User.HouseholdHeadUserId" type="hidden" />
            <input asp-for="User.IsDeleted" type="hidden" />
            <input asp-for="User.IsLockedOut" type="hidden" />
            <input asp-for="User.LastAccess" type="hidden" />
            <input asp-for="User.PointsEarned" type="hidden" />
            <input asp-for="User.AchievedAt" type="hidden" />

            <button type="submit" asp-action="Detail" id="Submit" name="Submit" value="Submit" class="btn btn-primary btn-spinner">
                <span class="buttonText">Save Changes</span>
                <span class="fa fa-spinner fa-pulse fa-lg fa-fw hidden"></span>
            </button>
        }
    </div>
</form>

@if (Model.CanEditDetails && Model.User.NeedsToAnswerVendorCodeQuestion && Model.User.CanEmailAwardVendorCode)
{
    <div class="row">
        <div class="modal fade"
             id="emailAwardModal"
             tabindex="-1"
             role="dialog"
             aria-labelledby="emailAwardLabel">
            <div class="modal-dialog" role="document">
                <div class="modal-content">
                    <form asp-action="@nameof(ParticipantsController.EmailAward)"
                          method="post"
                          role="form"
                          style="display:inline">
                        <input asp-for="EmailAwardModel.UserId"
                               value="@Model.User.Id"
                               type="hidden" />
                        <input asp-for="EmailAwardModel.Action"
                               value="@nameof(ParticipantsController.Detail)"
                               type="hidden" />
                        <div class="modal-body">
                            <p>@Html.Raw(Model.User.EmailAwardInstructions)</p>
                            <div class="row row-spacing">
                                <div class="col-xs-12">
                                    <label asp-for="EmailAwardModel.Email"
                                           class="control-label"></label>
                                    <input asp-for="EmailAwardModel.Email"
                                           class="form-control"
                                           value="@Model.User.Email" />
                                    <span asp-validation-for="EmailAwardModel.Email"
                                          class="text-danger"></span>
                                </div>
                            </div>
                        </div>
                        <div class="modal-footer">
                            <button type="button"
                                    class="btn btn-default"
                                    data-dismiss="modal"
                                    style="margin-right: 1em;">
                                @GRA.Annotations.Interface.Cancel
                            </button>
                            <button type="submit"
                                    class="btn btn-warning btn-spinner pull-right"
                                    aria-label="Confirm">
                                @GRA.Annotations.Interface.Confirm
                                <span class="fa fa-spinner fa-pulse fa-lg fa-fw hidden"></span>
                            </button>
                        </div>
                    </form>
                </div>
            </div>
        </div>
    </div>
}

@section scripts {
    <script>
        @if (!Model.CanEditDetails)
        {
        <text>
        $("input").prop('readonly', true);
        $("select").prop('disabled', true);
        </text>
        }

        var programs = JSON.parse('@Html.Raw(Model.ProgramJson)');
        var selectedProgram = $.grep(programs, function(obj) {
            return obj.Id == $("#User_ProgramId").val();
        })[0];

        $("#User_SystemId").on("change", function() {
            var systemId = $(this).val();
            var branchList = $("#User_BranchId");
            var branchId = branchList.val();
            var url = "@Url.Action("GetBranches", "Lookup", new { Area = string.Empty })";

            $.getJSON(url, { systemId: systemId, branchId: branchId }, function(response) {
                branchList.empty();
                if (response.length > 1)
                {
                    branchList.append(new Option("", "-1"));
                }
                $.each(response, function(index, item) {
                    branchList.append(new Option(item.text, item.value, item.selected, item.selected))
                });
            });
        });

        $("#User_ProgramId").on("change", function() {
            var programId = $(this).val();
            selectedProgram = $.grep(programs, function(obj) {
                return obj.Id == programId;
            })[0];
            if (selectedProgram != null)
            {
                if (selectedProgram.AskAge)
                {
                    $("#ageField").removeClass("hide");
                    validateAge();
                }
                else
                {
                    $("#ageField").addClass("hide");
                }

                if (selectedProgram.AskSchool)
                {
                    $("#schoolFields").removeClass("hide");
                }
                else
                {
                    $("#schoolFields").addClass("hide");
                }
            }
        });

        $("#User_Age").on("change", function() {
            validateAge();
        });

        function validateAge() {
            var age = $("#User_Age").val();
            var message = $("#ageMessage");
            if (age != "" && ((age > selectedProgram.AgeMaximum && selectedProgram.AgeMaximum != null)
                || (age < selectedProgram.AgeMinimum && selectedProgram.AgeMinimum != null)))
            {
                var program = $.grep(programs, function(obj) {
                    return ((obj.AgeMaximum >= age || obj.AgeMaximum == null)
                            && (obj.AgeMinimum <= age || obj.AgeMinimum == null));
                })[0];
                if (program != null)
                {
                    message.removeClass('field-validation-valid field-validation-error text-danger');
                    message.addClass('text-primary');
                    $("#User_Age").removeClass("input-validation-error")
                    message.text("The program " + program.Name + " may be better suited for your age.")
                }
            }
            else
            {
                message.text("");
            }
        }

        @if (Model.CanEditUsername) {
        <text>
        $("#User_Username").on("blur", function () {
            $(this).val($(this).val().trim());
            var username = $(this).val();
            if (username != "" && !$(this).hasClass("input-validation-error")) {
                if (username != "@Html.Raw(Model.Username)") {
                    var usernameCheckUrl = "@Url.Action("UsernameInUse", "Lookup", new { Area = string.Empty })";
                    var icon = $("#Username-Icon");
                    icon.removeClass("hide fa-times fa-check");
                    icon.addClass("fa-spinner fa-spin");
                    $.post(usernameCheckUrl, { username: username }, function (response) {
                        if (response) {
                            $("#User_Username").removeClass("valid");
                            $("#User_Username").addClass("input-validation-error");
                            $("#Username-Validation").removeClass("field-validation-valid");
                            $("#Username-Validation").addClass("field-validation-error");
                            $("#Username-Validation").text("@GRA.Annotations.Validate.UsernameTaken");
                            icon.removeClass("fa-spinner fa-spin");
                            icon.addClass("fa-times");
                        }
                        else {
                            $("#Username-Validation").removeClass("field-validation-valid");
                            $("#Username-Validation").text("The chosen username is available.");
                            icon.removeClass("fa-spinner fa-spin");
                            icon.addClass("fa-check");
                        }
                    });
                }
                else {
                    $("#Username-Icon").removeClass("hide fa-times").addClass("fa-check");
                    $("#Username-Validation").removeClass("field-validation-valid");
                    $("#Username-Validation").text("No change to username.");

                }
            }
        });

        $("#User_Username").on("keypress", function () {
            $("#Username-Icon").addClass("hide");
        });
        </text>
        }

        @if (Model.User.NeedsToAnswerVendorCodeQuestion && Model.User.CanEmailAwardVendorCode
            && Context.User.HasClaim(GRA.ClaimType.Permission, GRA.Domain.Model.Permission.EditParticipants.ToString()))
        {
        <text>
            $("#emailAwardButton").on("click", function (event) {
                event.preventDefault();
                $("#emailAwardModal").modal();
            });
        </text>
        }
    </script>
    @if (Model.CanEditDetails)
    {
        @await Html.PartialAsync("_SchoolSelectionScripts", Model);
    }
}