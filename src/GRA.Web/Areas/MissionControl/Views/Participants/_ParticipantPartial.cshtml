@model GRA.Controllers.ViewModel.MissionControl.Participants.ParticipantPartialViewModel

@if (Model.HasEvelatedRole)
{
    <div class="row" style="padding: 10px 0; margin-top: 1rem;">
        <div class="col-xs-12">
            <div class="alert alert-warning">
                <strong>
                    <span class="fas fa-exclamation-triangle"></span>
                    This user has an administrative role in this software.
                </strong>
            </div>
        </div>
    </div>
}
<div class="row">
    <div class="col-xs-12">
        <ul class="nav nav-pills" style="padding: 10px 0;">
            <li ActiveBy routeKey="Action" value="Detail"><a asp-action="Detail" asp-route-id="@Model.Id">Details</a></li>
            @if (Context.User.HasClaim(GRA.ClaimType.Permission, GRA.Domain.Model.Permission.LogActivityForAny.ToString()))
            {
                <li ActiveBy routeKey="Action" value="LogActivity"><a asp-action="LogActivity" asp-route-id="@Model.Id">Log Activity</a></li>
            }
            <li ActiveBy routeKey="Action" value="Household">
                <a asp-action="Household" asp-route-id="@Model.Id">
                    @if (Model.IsGroup)
                    {
                        @:Group
                    }
                    else
                    {
                        @:Family
                    }
                    @if (Model.HouseholdCount > 0)
                    {
                        <span class="label label-default label-as-badge">@(Model.HouseholdCount + 1)</span>
                    }
                </a>
            </li>
            <li ActiveBy routeKey="Action" value="Books"><a asp-action="Books" asp-route-id="@Model.Id">Books</a></li>
            <li ActiveBy routeKey="Action" value="History"><a asp-action="History" asp-route-id="@Model.Id">History</a></li>
            @if (Context.User.HasClaim(GRA.ClaimType.Permission, GRA.Domain.Model.Permission.ViewUserPrizes.ToString()))
            {
                <li ActiveBy routeKey="Action" value="Prizes">
                    <a asp-action="Prizes" asp-route-id="@Model.Id">
                        Prizes
                        @if (Model.PrizeCount > 0)
                        {
                            <span class="label label-default label-as-badge">@(Model.PrizeCount)</span>
                        }
                    </a>
                </li>
            }
            @if (Model.EmailSubscriptionEnabled)
            {
                <li ActiveBy routeKey="Action" value="EmailSubscriptionLog"><a asp-action="EmailSubscriptionLog" asp-route-id="@Model.Id">Email Subscription Log</a></li>
            }
            @if (Context.User.HasClaim(GRA.ClaimType.Permission, GRA.Domain.Model.Permission.ReadAllMail.ToString()))
            {
                <li ActiveBy routeKey="Action" value="Mail"><a asp-action="Mail" asp-route-id="@Model.Id">Mail</a></li>
            }
            @if (Context.User.HasClaim(GRA.ClaimType.Permission, GRA.Domain.Model.Permission.EditParticipants.ToString()) && Model.HasAccount)
            {
                <li ActiveBy routeKey="Action" value="PasswordReset"><a asp-action="PasswordReset" asp-route-id="@Model.Id">Password Reset</a></li>
            }
            @if (Context.User.HasClaim(GRA.ClaimType.Permission, GRA.Domain.Model.Permission.ManageRoles.ToString()) && Model.HasAccount)
            {
                <li ActiveBy routeKey="Action" value="Roles">
                    <a asp-action="Roles" asp-route-id="@Model.Id">
                        Roles
                        @if (Model.RoleCount > 0)
                        {
                            <span class="label label-default label-as-badge">@(Model.RoleCount)</span>
                        }
                    </a>
                </li>
            }
            @if (Context.User.HasClaim(GRA.ClaimType.Permission, GRA.Domain.Model.Permission.ViewUserPrizes.ToString()))
            {
                <li class="pull-right">
                    <form asp-action="@nameof(ParticipantsController.UpdatePrizes)" method="post" role="form">
                        <input name="Id" value="@Model.Id" type="hidden" />
                        <input name="ReturnUrl" value="@Context.Request.Path.ToString()" type="hidden" />
                        <button class="btn btn-info btn-spinner-no-validate"
                                style="min-height: 40px;"
                                button-spinner>
                            Update Prizes
                        </button>
                    </form>
                </li>
            }
        </ul>
    </div>
</div>
