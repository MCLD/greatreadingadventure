@model GRA.Controllers.ViewModel.MissionControl.Participants.HouseholdListViewModel

@section styles {
    <style>
        .system-selector {
            cursor: pointer;
        }

        .branch-selector {
            cursor: pointer;
        }
    </style>
}

@await Html.PartialAsync("_ParticipantPartial")

@if (!string.IsNullOrEmpty(Model.GroupName))
{
    <div class="row">
        @if (Model.CanEditDetails)
        {
            <div class="col-sm-2">
                <a href="@Url.Action("UpdateGroup", new { id=Model.HeadOfHouseholdId ?? Model.Id })"
                   class="btn btn-outline-secondary">Edit Group</a>
            </div>
        }
        <div class="col-sm-10">
            <strong>Group name:</strong> @Model.GroupName<br />
            <strong>Group type:</strong> @Model.GroupType
        </div>
    </div>
}

@if (Model.Users.Count() == 0)
{
    <div class="row">
        <div class="col-12">
            <div class="alert alert-warning">
                Participant is not a member of a @Model.FamilyOrGroup
            </div>
        </div>
    </div>
}
@if (Model.CanEditDetails || (Model.CanViewPrizes && Model.HouseholdPrizeList.Count > 0 && Model.Users.Any()))
{
    <div class="row mt-3">
        <div class="col-12">
            @if (Model.CanEditDetails)
            {
                @if (Model.UpgradeToGroup)
                {
                    <a asp-action="UpgradeToGroup"
                       asp-route-id="@Model.Id"
                       class="btn btn-outline-secondary mb-3">Upgrade to Group to add more members</a>
                }
                else
                {
                    <a asp-action="AddHouseholdMember"
                       asp-route-id="@Model.Id"
                       class="btn btn-outline-secondary mb-3">Register new Member</a>
                    <button type="button"
                            class="btn btn-outline-secondary mb-3"
                            data-bs-toggle="modal"
                            data-bs-target="#listModal">
                        Add Existing Participant
                    </button>
                    @if (Model.CanImportNewMembers)
                    {
                        <a asp-action="@nameof(ParticipantsController.HouseholdImport)"
                           asp-route-id="@(Model.HeadOfHouseholdId ?? Model.Id)"
                           class="btn btn-outline-secondary mb-3">Import new Members</a>
                    }
                    if (Model.UseGroups && Model.IsGroup == false && Model.HouseholdCount > 0)
                    {
                        <a asp-action="UpgradeToGroup"
                           asp-route-id="@Model.Id"
                           class="btn btn-outline-secondary mb-3">Upgrade to Group</a>
                    }
                }
            }
            @if (Model.CanViewPrizes && Model.HouseholdPrizeList.Count > 0 && Model.Users.Any())
            {
                <button type="button"
                        class="btn btn-outline-success float-end mb-3"
                        data-bs-toggle="modal"
                        data-bs-target="#prizeModal">
                    <span class="fas fa-gift fa-fw"></span>
                    Redeem Prizes
                </button>
            }
        </div>
    </div>
}
@if (Model.Users.Count() > 0)
{
    <form id="form" asp-controller="Participants" method="post" role="form">
        <input asp-for="Id" type="hidden" />
        @if (Model.CanLogActivity && Model.OpenToLog)
        {
            <input asp-for="UserSelection" type="hidden" />
            <input asp-for="ActivityAmount" type="hidden" />
            <input asp-for="SecretCode" type="hidden" />
            <div class="row">
                <div class="col-12 col-md-2 py-1">Apply to checked:</div>
                <div class="col-12 col-md-5 mb-3">
                    <div class="input-group">
                        @if (Model.PointTranslation.IsSingleEvent == false)
                        {
                            <input data-action="@Url.Action("HouseholdApplyActivity")"
                                   value=""
                                   class="form-control activityInput" />
                        }
                        <button type="submit"
                                class="btn btn-outline-primary px-2 activityButton"
                                data-action="@Url.Action("HouseholdApplyActivity")"
                                button-spinner>
                            <span>
                                @if (Model.PointTranslation.IsSingleEvent)
                                {
                                    <span>
                                        @($"{Model.PointTranslation.TranslationDescriptionPastTense.Replace("{0}", "1")} {Model.PointTranslation.ActivityDescription}")
                                    </span>
                                }
                                else
                                {
                                    <span>
                                        @Model.PointTranslation.ActivityDescriptionPlural
                                    </span>
                                }
                            </span>
                        </button>
                    </div>
                    @if (!string.IsNullOrWhiteSpace(Model.ActivityMessage))
                    {
                        <span class="text-danger">@Model.ActivityMessage</span>
                    }

                </div>
                @if (!Model.DisableSecretCode)
                {
                    <div class="col-12 col-md-5 mb-3">
                        <div class="input-group">
                            <input data-action="@Url.Action("HouseholdApplySecretCode")"
                                   class="form-control codeInput" />
                            <button type="submit"
                                    class="btn btn-outline-primary btn-spinner codeButton"
                                    data-action="@Url.Action("HouseholdApplySecretCode")"
                                    button-spinner>
                                <span class="buttonText">Secret Code</span>
                            </button>
                        </div>
                        @if (!string.IsNullOrWhiteSpace(Model.SecretCodeMessage))
                        {
                            <span class="text-danger">@Html.Raw(Model.SecretCodeMessage)</span>
                        }
                    </div>
                }
            </div>
        }

        <div class="row">
            <div class="col-12">
                <table class="table table-sm table-bordered link-table">
                    <thead>
                        <tr>
                            @if (Model.CanLogActivity && Model.OpenToLog)
                            {
                                <th class="text-center align-middle">
                                    <input id="checkAll"
                                           type="checkbox"
                                           data-id="@Model.Head.Id" />
                                </th>
                            }
                            @if (Model.CanReadMail)
                            {
                                <th class="text-center align-middle">
                                    <span class="far fa-envelope"></span>
                                </th>
                            }
                            @if (Model.CanViewPrizes)
                            {
                                <th class="text-center align-middle">
                                    <span class="fas fa-gift"></span>
                                </th>
                            }
                            <th class="align-middle">User</th>
                            <th class="align-middle">Points Earned</th>
                            @if (Model.ShowVendorCodes)
                            {
                                <th class="align-middle">
                                    Book Code
                                    @if (Model.CanRedeemBulkVendorCodes)
                                    {
                                        <button type="button"
                                                class="btn btn-outline-primary btn-sm float-end me-2"
                                                data-bs-toggle="modal"
                                                data-bs-target="#bulkRedeemModal">
                                            <span class="buttonText">Redeem all</span>
                                        </button>
                                    }
                                </th>
                            }
                            <th class="align-middle">Branch</th>
                            <th class="align-middle">Program</th>
                            @if (Model.CanEditDetails)
                            {
                                <th width="96px">&nbsp;</th>
                            }
                        </tr>
                        <tr class="warning @(Model.Id == Model.Head.Id ? " text-strong" : null)">
                            @if (Model.CanLogActivity && Model.OpenToLog)
                            {
                                <td class="on-top text-center align-middle">
                                    @if (!Model.Head.HasPendingQuestionnaire)
                                    {
                                        <input class="userSelection"
                                               type="checkbox"
                                               data-id="@Model.Head.Id" />
                                    }
                                    else
                                    {
                                        <span class="pendingQuestionnaire fas fa-exclamation-circle text-warning"
                                              style="cursor:pointer"
                                              data-bs-toggle="modal"
                                              data-bs-target=".pendingModal"></span>
                                    }
                                </td>
                            }
                            @if (Model.CanReadMail)
                            {
                                <td class="on-top text-center align-middle">
                                    <a class="plain-link"
                                       asp-action="Mail"
                                       asp-route-id="@Model.Head.Id">
                                        @if (Model.Head.HasNewMail)
                                        {
                                            <span class="fa-stack">
                                                <span class="fas fa-circle fa-stack-2x text-primary"></span>
                                                <span class="fas fa-envelope fa-stack-1x text-light"
                                                      title="New message(s)!"></span>
                                            </span>
                                        }
                                        else
                                        {
                                            <span class="fa-stack">
                                                <span class="fas fa-circle fa-stack-2x text-light"></span>
                                                <span class="far fa-envelope fa-stack-1x text-secondary"></span>
                                            </span>
                                        }
                                    </a>
                                </td>

                            }
                            @if (Model.CanViewPrizes)
                            {
                                <td class="on-top text-center" style="vertical-align:middle;">
                                    <a class="plain-link"
                                       asp-action="Prizes"
                                       asp-route-id="@Model.Head.Id">
                                        @if (Model.Head.HasUnclaimedPrize)
                                        {
                                            <span class="fa-stack">
                                                <span class="fas fa-circle fa-stack-2x text-primary"></span>
                                                <span class="fas fa-gift fa-stack-1x text-light"
                                                      title="New prize(s)!"></span>
                                            </span>
                                        }
                                        else
                                        {
                                            <span>&nbsp;</span>
                                        }
                                    </a>
                                </td>
                            }
                            <td class="td-class">
                                <a asp-action="Detail"
                                   asp-route-id="@Model.Head.Id"
                                   class="rowlink">
                                    <div>
                                        @if (Model.Head.Id == Model.Id)
                                        {
                                            <span class="fas fa-crown fa-fw"></span>
                                        }
                                        @Model.Head.FullName
                                    </div>
                                    <div>@Model.Head.Username</div>
                                </a>
                            </td>
                            <td>@Model.Head.PointsEarned</td>
                            @if (Model.ShowVendorCodes)
                            {
                                <td>
                                    @if (Model.Head.NeedsToAnswerVendorCodeQuestion)
                                    {
                                        <button class="btn btn-info btn-sm btn-spinner btn-on-top"
                                                name="redeemButton"
                                                value="@Model.Head.Id"
                                                asp-action="HandleHouseholdDonation"
                                                asp-is-disabled="@(!Model.CanEditDetails)"
                                                button-spinner>
                                            <span class="buttonText">Redeem code</span>
                                        </button>
                                        @if (Model.Head.CanDonateVendorCode)
                                        {
                                            @:or
                                            <button class="btn btn-outline-success btn-sm btn-on-top"
                                                    name="donateButton"
                                                    value="@Model.Head.Id"
                                                    asp-action="HandleHouseholdDonation"
                                                    asp-is-disabled="@(!Model.CanEditDetails)"
                                                    button-spinner>
                                                <span class="buttonText">Donate book</span>
                                            </button>
                                        }
                                        @if (Model.Head.CanEmailAwardVendorCode)
                                        {
                                            @:or
                                            <button class="btn btn-warning btn-sm btn-on-top emailAwardButton"
                                                    asp-action="HandleHouseholdDonation"
                                                    asp-is-disabled="@(!Model.CanEditDetails)"
                                                    data-email="@Model.Head.Email"
                                                    data-userid="@Model.Head.Id">
                                                <span class="buttonText">Email e-audiobook</span>
                                            </button>
                                        }
                                    }
                                    else
                                    {
                                        if (!string.IsNullOrEmpty(Model.Head.VendorCodeUrl))
                                        {
                                            <strong class="on-top-nobg">
                                                <a aria-label="@Model.Head.VendorCode (Opens new window)"
                                                   href="@Model.Head.VendorCodeUrl"
                                                   target="_blank">@Model.Head.VendorCode</a>
                                            </strong>
                                        }
                                        else
                                        {
                                            <strong>@Model.Head.VendorCode</strong>
                                        }
                                        if (@Model.Head.Donated == true
                                        && User.HasClaim(GRA.ClaimType.Permission, GRA.Domain.Model.Permission.PerformDrawing.ToString()))
                                        {
                                            <button class="btn btn-info btn-sm btn-spinner btn-on-top"
                                                    name="undonateButton"
                                                    value="@Model.Head.Id"
                                                    asp-action="HandleHouseholdDonation"
                                                    asp-is-disabled="@(!Model.CanEditDetails)"
                                                    button-spinner>
                                                <span class="buttonText">Un-donate</span>
                                            </button>
                                        }
                                    }
                                    @if (!string.IsNullOrEmpty(Model.Head.VendorCodeMessage))
                                    {
                                        <br />

                                        @Html.Raw(Model.Head.VendorCodeMessage)
                                    }
                                </td>
                            }
                            <td>@Model.Head.BranchName</td>
                            <td>@Model.Head.ProgramName</td>
                            @if (Model.CanEditDetails)
                            {
                                <td class="on-top">&nbsp;</td>
                            }
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var user in Model.Users)
                        {
                            <tr class="@(Model.Id == user.Id ? " info text-strong" : null)">
                                @if (Model.CanLogActivity && Model.OpenToLog)
                                {
                                    <td class="on-top text-center align-middle">
                                        @if (!user.HasPendingQuestionnaire)
                                        {
                                            <input class="userSelection"
                                                   type="checkbox"
                                                   data-id="@user.Id" />
                                        }
                                        else
                                        {
                                            <span class="pendingQuestionnaire fas fa-exclamation-circle text-warning"
                                                  style="cursor:pointer"
                                                  data-bs-toggle="modal"
                                                  data-bs-target=".pendingModal"></span>
                                        }
                                    </td>
                                }
                                @if (Model.CanReadMail)
                                {
                                    <td class="on-top text-center align-middle">
                                        <a class="plain-link"
                                           asp-action="Mail"
                                           asp-route-id="@user.Id">
                                            @if (user.HasNewMail)
                                            {
                                                <span class="fa-stack">
                                                    <span class="fas fa-circle fa-stack-2x text-primary"></span>
                                                    <span class="fas fa-envelope fa-stack-1x text-light"
                                                          title="New message(s)!"></span>
                                                </span>
                                            }
                                            else
                                            {
                                                <span class="fa-stack">
                                                    <span class="fas fa-circle fa-stack-2x text-light"></span>
                                                    <span class="far fa-envelope fa-stack-1x text-secondary"></span>
                                                </span>
                                            }
                                        </a>
                                    </td>
                                }
                                @if (Model.CanViewPrizes)
                                {
                                    <td class="on-top text-center align-middle">
                                        <a class="plain-link"
                                           asp-action="Prizes"
                                           asp-route-id="@user.Id">
                                            @if (user.HasUnclaimedPrize)
                                            {
                                                <span class="fa-stack">
                                                    <span class="fas fa-circle fa-stack-2x text-primary"></span>
                                                    <span class="fas fa-gift fa-stack-1x text-light"
                                                          title="New prize(s)!"></span>
                                                </span>
                                            }
                                            else
                                            {
                                                <span>&nbsp;</span>
                                            }
                                        </a>
                                    </td>
                                }
                                <td class="td-class">
                                    <a asp-action="Detail"
                                       asp-route-id="@user.Id"
                                       class="rowlink">
                                        <div>
                                            @if (user.Id == Model.Id)
                                            {
                                                <span class="fas fa-user"></span>
                                            }
                                            @user.FullName
                                        </div>
                                    </a>
                                    <div>
                                        @if (Model.CanEditDetails && string.IsNullOrWhiteSpace(user.Username))
                                        {
                                            <a class="btn btn-outline-secondary btn-sm on-top"
                                               asp-action="RegisterHouseholdMember"
                                               asp-route-id="@user.Id">
                                                <span class="fas fa-user-plus"></span>
                                                Add Username
                                            </a>
                                        }
                                        else
                                        {
                                            @user.Username
                                        }
                                    </div>
                                </td>
                                <td class="align-bottom">@user.PointsEarned</td>
                                @if (Model.ShowVendorCodes)
                                {
                                    <td>
                                        @if (user.NeedsToAnswerVendorCodeQuestion)
                                        {
                                            <button class="btn btn-info btn-sm btn-spinner btn-on-top"
                                                    name="redeemButton"
                                                    value="@user.Id"
                                                    asp-action="HandleHouseholdDonation"
                                                    asp-is-disabled="@(!Model.CanEditDetails)"
                                                    button-spinner>
                                                <span class="buttonText">Redeem code</span>
                                            </button>
                                            @if (user.CanDonateVendorCode)
                                            {
                                                @:or
                                                <button class="btn btn-outline-success btn-sm btn-spinner btn-on-top"
                                                        name="donateButton"
                                                        value="@user.Id"
                                                        asp-action="HandleHouseholdDonation"
                                                        asp-is-disabled="@(!Model.CanEditDetails)"
                                                        button-spinner>
                                                    <span class="buttonText">Donate book</span>
                                                </button>
                                            }
                                            @if (user.CanEmailAwardVendorCode)
                                            {
                                                @:or
                                                <button class="btn btn-warning btn-sm btn-on-top emailAwardButton"
                                                        asp-action="HandleHouseholdDonation"
                                                        asp-is-disabled="@(!Model.CanEditDetails)"
                                                        data-email="@user.Email"
                                                        data-userid="@user.Id">
                                                    <span class="buttonText">Email e-audiobook</span>
                                                </button>
                                            }
                                        }
                                        else
                                        {
                                            if (!string.IsNullOrEmpty(user.VendorCodeUrl))
                                            {
                                                <strong class="on-top-nobg">
                                                    <a aria-label="@user.VendorCode (Opens new window)"
                                                       href="@user.VendorCodeUrl"
                                                       target="_blank">@user.VendorCode</a>
                                                </strong>
                                            }
                                            else
                                            {
                                                <strong>@user.VendorCode</strong>
                                            }
                                            if (user.Donated == true && User.HasClaim(GRA.ClaimType.Permission, GRA.Domain.Model.Permission.PerformDrawing.ToString()))
                                            {
                                                <button class="btn btn-info btn-sm btn-spinner btn-on-top"
                                                        name="undonateButton"
                                                        value="@user.Id"
                                                        asp-action="HandleHouseholdDonation"
                                                        asp-is-disabled="@(!Model.CanEditDetails)"
                                                        button-spinner>
                                                    <span class="buttonText">Un-donate</span>
                                                </button>
                                            }
                                        }
                                        @if (!string.IsNullOrEmpty(user.VendorCodeMessage))
                                        {
                                            <br />

                                            @Html.Raw(user.VendorCodeMessage)
                                        }
                                    </td>
                                }
                                <td class="align-bottom">@user.BranchName</td>
                                <td class="align-bottom">@user.ProgramName</td>
                                @if (Model.CanEditDetails)
                                {

                                    <td class="on-top align-middle text-center">
                                        @if (!string.IsNullOrWhiteSpace(user.Username))
                                        {
                                            <button type="button"
                                                    class="btn btn-outline-primary btn-sm"
                                                    data-bs-toggle="modal"
                                                    data-bs-target="#promoteModal"
                                                    data-id="@user.Id"
                                                    data-name="@user.FullName"
                                                    title="Promote to @Model.FamilyOrGroup manager">
                                                <span class="fas fa-level-up-alt fa-fw"
                                                      aria-hidden="true"></span>
                                            </button>
                                            <button type="button"
                                                    class="btn btn-outline-danger btn-sm"
                                                    data-bs-toggle="modal"
                                                    data-bs-target="#removeModal"
                                                    data-id="@user.Id"
                                                    data-name="@user.FullName"
                                                    title="Remove from @Model.FamilyOrGroup">
                                                <span class="fas fa-times fa-fw"
                                                      aria-hidden="true"></span>
                                            </button>
                                        }
                                        else
                                        {
                                            @:&nbsp;
                                        }
                                    </td>

                                }
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
        </div>
    </form>
}


<div class="mb-3 d-print-none d-flex">
    @if (Model.HouseholdCount > 0)
    {
        <div>
            <a href="#" class="btn btn-outline-secondary float-end">Return to Top</a>
        </div>
    }
    <div class="ms-auto">
        <a asp-action="Index" class="btn btn-outline-secondary">Return to Participants</a>
    </div>
</div>

<div class="modal fade pendingModal"
     tabindex="-1"
     role="dialog"
     aria-labelledby="pendingModalLabel">
    <div class="modal-dialog modal-sm" role="document">
        <div class="modal-content">
            <div class="modal-body">
                <button type="button"
                        class="btn-close"
                        data-bs-dismiss="modal"
                        aria-label="Close dialog">
                </button>
                <br />
                Activity cannot be logged for this participant until they log in and answer a questionnaire.
            </div>
        </div>
    </div>
</div>

@if (Model.CanEditDetails)
{
    <div class="row">
        <div class="modal fade"
             id="listModal"
             tabindex="-1"
             role="dialog"
             data-bs-backdrop="static"
             data-bs-keyboard="false"
             aria-labelledby="listModalLabel">
            <div class="modal-dialog modal-xl" role="document">
                <div class="modal-content">
                    <div class="card">
                        <div class="card-header">
                            <span class="lead">Add existing participant</span>
                        </div>
                        <div class="card-body">
                            <div class="row mb-2">
                                <div class="col-12">
                                    <ul class="nav nav-pills">
                                        <li id="All" class="participantScope nav-item">
                                            <a style="cursor:pointer"
                                               class="nav-link active">All</a>
                                        </li>
                                        <li id="System" class="participantScope nav-item">
                                            <a class="dropdown-toggle nav-link"
                                               data-bs-toggle="dropdown"
                                               href="#"
                                               role="button"
                                               aria-haspopup="true"
                                               aria-expanded="false">
                                                <span id="systemText">System</span> <span class="caret"></span>
                                            </a>
                                            <ul class="dropdown-menu">
                                                @foreach (var system in Model.SystemList)
                                                {
                                                    <li>
                                                        <a class="system-selector dropdown-item"
                                                           data-id="@system.Id">
                                                            @system.Name
                                                        </a>
                                                    </li>
                                                }
                                            </ul>
                                        </li>
                                        <li id="Branch" class="participantScope nav-item">
                                            <a class="dropdown-toggle nav-link"
                                               data-bs-toggle="dropdown"
                                               href="#"
                                               role="button"
                                               aria-haspopup="true"
                                               aria-expanded="false">
                                                <span id="branchText">Branch</span> <span class="caret"></span>
                                            </a>
                                            <ul id="branchDropdown" class="dropdown-menu">
                                                @foreach (var branch in Model.BranchList)
                                                {
                                                    <li>
                                                        <a class="branch-selector dropdown-item"
                                                           data-id="@branch.Id">
                                                            @branch.Name
                                                        </a>
                                                    </li>
                                                }
                                            </ul>
                                        </li>
                                    </ul>
                                </div>
                            </div>
                            <div class="row mb-3">
                                <div class="col-12 input-group">
                                    <input id="searchText"
                                           class="form-control"
                                           placeholder="Search by username, first or last name, full name, free book code" />
                                    <button type="button"
                                            id="clearButton"
                                            class="btn btn-outline-secondary">
                                        Clear
                                    </button>
                                    <input type="submit"
                                           id="searchButton"
                                           value="Search"
                                           class="btn btn-outline-primary" />
                                </div>
                            </div>
                            <div id="searchMessage" class="row d-none">
                                <div class="col-12">
                                    <p class="alert-sm alert-info">
                                        Searching for: <strong id="searchTerm"></strong>
                                    </p>
                                </div>
                            </div>
                            <div class="row">
                                <form asp-action="AddExisitingParticipant"
                                      method="post"
                                      role="form">
                                    <input name="Id" value="@Model.Id" type="hidden" />
                                    <div id="modalParticipantsList" class="col-12">
                                    </div>
                                </form>
                            </div>
                        </div>
                        <div class="modal-footer">
                            <button type="button"
                                    class="btn btn-outline-secondary"
                                    data-bs-dismiss="modal">
                                Close
                            </button>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <div class="row">
        <div class="modal fade"
             id="promoteModal"
             tabindex="-1"
             role="dialog"
             aria-labelledby="promoteModalLabel">
            <div class="modal-dialog" role="document">
                <div class="modal-content">
                    <div class="modal-header">
                        <h1 class="modal-title h4" id="promoteModalLabel">Promote to Manager</h1>
                        <button type="button"
                                class="btn-close"
                                data-bs-dismiss="modal"
                                aria-label="Close dialog">
                        </button>
                    </div>
                    <div class="modal-body d-flex align-items-stretch">
                        <span class="fas fa-exclamation-circle fa-lg text-warning pt-2 me-3"
                              aria-hidden="true"></span>
                        <span id="modal-text"></span>
                    </div>
                    <div class="modal-footer d-flex justify-content-end">
                        <button type="button"
                                class="btn btn-outline-secondary"
                                data-bs-dismiss="modal">
                            Cancel
                        </button>
                        <form asp-controller="Participants"
                              asp-action="HouseholdPromote"
                              method="post"
                              role="form"
                              style="display:inline">
                            <input asp-for="Id" type="hidden" />
                            <input id="PromoteId" name="PromoteId" type="hidden" />
                            <button type="submit"
                                    class="btn btn-outline-primary"
                                    aria-label="Confirm">
                                <span class="fas fa-level-up-alt fa-fw" aria-hidden="true"></span>
                                Promote
                            </button>
                        </form>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <div class="row">
        <div class="modal fade"
             id="removeModal"
             tabindex="-1"
             role="dialog"
             aria-labelledby="removeModalLabel">
            <div class="modal-dialog" role="document">
                <div class="modal-content">
                    <div class="modal-header">
                        <h1 class="modal-title h4" id="deleteModalLabel">
                            Remove from family/group
                        </h1>
                        <button type="button"
                                class="btn-close"
                                data-bs-dismiss="modal"
                                aria-label="Close dialog">
                        </button>

                    </div>
                    <div class="modal-body d-flex align-items-stretch">
                        <span class="fas fa-exclamation-triangle fa-lg text-danger pt-2 me-3"
                              aria-hidden="true"></span>
                        <span id="modal-text"></span>
                    </div>
                    <div class="modal-footer d-flex justify-content-end">
                        <button type="button"
                                class="btn btn-outline-secondary"
                                data-bs-dismiss="modal">
                            Cancel
                        </button>
                        <form asp-controller="Participants"
                              asp-action="HouseholdRemove"
                              method="post"
                              role="form"
                              style="display:inline">
                            <input asp-for="Id" type="hidden" />
                            <input id="RemoveId" name="RemoveId" type="hidden" />
                            <button type="submit"
                                    class="btn btn-outline-danger"
                                    aria-label="Confirm">
                                Remove
                            </button>
                        </form>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <div class="row">
        <div class="modal fade"
             id="emailAwardModal"
             tabindex="-1"
             role="dialog"
             aria-labelledby="emailAwardLabel">
            <div class="modal-dialog" role="document">
                <div class="modal-content">
                    <form asp-action="@nameof(ParticipantsController.EmailAward)"
                          method="post"
                          role="form"
                          style="display:inline">
                        <input asp-for="EmailAwardModel.UserId" type="hidden" />
                        <input asp-for="EmailAwardModel.Action"
                               value="@nameof(ParticipantsController.Household)"
                               type="hidden" />
                        <div class="modal-body">
                            <p>@Html.Raw(Model.Head.EmailAwardInstructions)</p>
                            <div class="row mb-3">
                                <div class="col-12">
                                    <label asp-for="EmailAwardModel.Email"
                                           class="col-form-label"></label>
                                    <input asp-for="EmailAwardModel.Email" class="form-control" />
                                    <span asp-validation-for="EmailAwardModel.Email"
                                          class="text-danger"></span>
                                </div>
                            </div>
                        </div>
                        <div class="modal-footer">
                            <button type="button"
                                    class="btn btn-outline-secondary"
                                    data-bs-dismiss="modal"
                                    style="margin-right: 1em;">
                                @GRA.Annotations.Interface.Cancel
                            </button>
                            <button type="submit"
                                    class="btn btn-warning btn-spinner float-end"
                                    aria-label="Confirm"
                                    button-spinner>
                                @GRA.Annotations.Interface.Confirm
                            </button>
                        </div>
                    </form>
                </div>
            </div>
        </div>
    </div>
}

@if (Model.CanViewPrizes && Model.HouseholdPrizeList.Count > 0 && Model.Users.Any())
{
    <div class="row">
        <div class="modal fade"
             id="prizeModal"
             tabindex="-1"
             role="dialog"
             aria-labelledby="prizeModalLabel">
            <div class="modal-dialog" role="document">
                <div class="modal-content">
                    <form asp-controller="Participants"
                          asp-action="@nameof(ParticipantsController.HouseholdPrize)"
                          method="get"
                          role="form"
                          style="display:inline">
                        <input asp-for="Id" type="hidden" />
                        <div class="modal-header">
                            <h1 class="modal-title h4"
                                id="deleteModalLabel">
                                Redeem @Model.FamilyOrGroup prize
                            </h1>
                            <button type="button"
                                    class="btn-close"
                                    data-bs-dismiss="modal"
                                    aria-label="Close dialog">
                            </button>
                        </div>
                        <div class="modal-body">
                            <label asp-for="Prize" class="col-form-label">
                                Select which prize to redeem:
                            </label>
                            <select asp-for="Prize"
                                    asp-items="Model.HouseholdPrizeList"
                                    class="form-select"
                                    required>
                                <option></option>
                            </select>
                            <span asp-validation-for="Prize" class="text-danger"></span>
                        </div>
                        <div class="modal-footer d-flex justify-content-end">
                            <button type="button"
                                    class="btn btn-outline-secondary"
                                    data-bs-dismiss="modal">
                                Cancel
                            </button>
                            <button type="submit"
                                    class="btn btn-outline-primary"
                                    aria-label="Confirm">
                                Select
                            </button>
                        </div>
                    </form>
                </div>
            </div>
        </div>
    </div>
}

@if (Model.CanRedeemBulkVendorCodes)
{
    <div class="row">
        <div class="modal fade"
             id="bulkRedeemModal"
             tabindex="-1"
             role="dialog"
             aria-labelledby="bulkRedeemLabel">
            <div class="modal-dialog" role="document">
                <div class="modal-content">
                    <form asp-controller="Participants"
                          asp-action="@nameof(ParticipantsController.HouseholdBulkRedeemCode)"
                          method="post"
                          role="form" style="display:inline">
                        <input id="bulkRedeemId" asp-for="Id" type="hidden" />
                        <div class="modal-header">
                            <h1 class="modal-title h4" id="deleteModalLabel">
                                Redeem @Model.FamilyOrGroup codes
                            </h1>
                            <button type="button"
                                    class="btn-close"
                                    data-bs-dismiss="modal"
                                    aria-label="Close dialog">
                            </button>
                        </div>
                        <div class="modal-body">
                            <p>
                                This will redeem codes for every member of this
                                @Model.FamilyOrGroup - once codes are redeemed,
                                they cannot be donated.
                            </p>
                            <p>
                                <strong>Mail will not be sent</strong> to members of this
                                @Model.FamilyOrGroup with redemption instructions.
                            </p>
                        </div>
                        <div class="modal-footer d-flex justify-content-end">
                            <button type="button"
                                    class="btn btn-outline-secondary"
                                    data-bs-dismiss="modal"
                                    id="bulkDoNotRedeem">
                                Do not redeem
                            </button>
                            <button type="submit"
                                    class="btn btn-info"
                                    aria-label="Confirm"
                                    onclick="$('#bulkDoNotRedeem').prop('disabled', true).addClass('disabled')"
                                    button-spinner>
                                Redeem all
                            </button>
                        </div>
                    </form>
                </div>
            </div>
        </div>
    </div>
}

@section scripts {
    <script>
        $(document).ready(function () {
            $('.td-class').each(function () {
                $(this).children('a.rowlink').height($(this).height() + 11);
            });
        });
        $(window).resize(function () {
            $('.td-class').each(function () {
                $(this).children('a.rowlink').height($(this).height() + 11);
            });
        });
    </script>

    @if (Model.CanLogActivity && Model.OpenToLog)
    {
        <script>
            var submitting = false;

            $("#checkAll").on("change", function (e) {
                if (e.originalEvent) {
                    $(".userSelection").prop("checked", $(this).prop("checked"));
                }
            });

            $(".userSelection").on("change", function (e) {
                if (e.originalEvent) {
                    if ($(".userSelection:not(:checked)").length) {
                        $("#checkAll").prop("checked", false);
                    }
                    else {
                        $("#checkAll").prop("checked", true);
                    }
                }
            });

            $(".activityInput").on("keypress", function (e) {
                let keyCode = e.keyCode || e.which;
                if (keyCode === 13) {
                    e.preventDefault();
                    if (submitting != true) {
                        submitting = true;
                        $("#ActivityAmount").val($(this).val());
                        SetUserSelection();
                        $("#form").attr("action", $(this).data("action")).submit();
                    }
                }
            });

            $(".codeInput").on("keypress", function (e) {
                let keyCode = e.keyCode || e.which;
                if (keyCode === 13) {
                    e.preventDefault();
                    if (submitting != true) {
                        submitting = true;
                        $("#SecretCode").val($(this).val());
                        SetUserSelection();
                        $("#form").attr("action", $(this).data("action")).submit();
                    }
                }
            });

            $(".activityButton").on("click", function (e) {
                e.preventDefault();
                if (submitting != true) {
                    submitting = true;
                    $("#ActivityAmount").val($(this).parent().parent().find(".activityInput").val());
                    SetUserSelection();
                    $("#form").attr("action", $(this).data("action")).submit();
                }
            });

            $(".codeButton").on("click", function (e) {
                e.preventDefault();
                if (submitting != true) {
                    submitting = true;
                    $("#SecretCode").val($(this).parent().parent().find(".codeInput").val());
                    SetUserSelection();
                    $("#form").attr("action", $(this).data("action")).submit();
                }
            });

            function SetUserSelection() {
                let selectionArray = [];
                $(".userSelection:checked").each(function () {
                    selectionArray.push($(this).data("id"));
                });
                $("#UserSelection").val(selectionArray);
            };
        </script>
    }

    @if (Model.CanEditDetails)
    {
        <script>
            var userId = @Model.Id;
                                                                                                                                    var defaultSystemId = @Model.SystemId;
            var participantsUrl = "@Url.Action("HouseholdGetParticipantsList")";
            var branchUrl = "@Url.Action("GetBranches", "Lookup", new { Area = string.Empty })";
            var systemId = null;
            var branchId = null;
            var search = "";
            var page = 1;

            function UpdateParticipantsList() {
                $.get(participantsUrl,
                    {
                        userId: userId,
                        systemId: systemId,
                        branchId: branchId,
                        search: search,
                        page: page
                    }, function (response) {
                        $("#modalParticipantsList").html(response);
                    });
            }

            function UpdateBranchList(system) {
                $.get(branchUrl,
                    {
                        systemId: system,
                        branchId: null,
                        prioritize: true
                    }, function (response) {
                        $("#branchDropdown").empty();
                        $.each(response, function (index, item) {
                            $("#branchDropdown").append('<li><a class="branch-selector" data-id="' + item.value + '">' + item.text + '</a></li>');
                        });
                    });
            }

            $('#listModal').on('show.bs.modal', function () {
                UpdateParticipantsList();
            })

            $("#All").on("click", function () {
                if (systemId != null) {
                    $(this).siblings().removeClass("active");
                    $(this).addClass().addClass("active");
                    $("#systemText").text("System");
                    $("#branchText").text("Branch");
                    if (systemId != defaultSystemId) {
                        UpdateBranchList(defaultSystemId);
                    }
                    systemId = null;
                    branchId = null;
                    page = 1;
                    UpdateParticipantsList();
                }
            });

            $(".system-selector").on("click", function (e) {
                let thisId = $(this).data("id");
                if (systemId != thisId || branchId != null) {
                    if (systemId == null || branchId != null) {
                        var navPill = $(this).parent().parent().parent();
                        navPill.siblings().removeClass("active");
                        navPill.addClass().addClass("active");
                        if (branchId != null) {
                            $("#branchText").text("Branch");
                        }
                    }
                    $("#systemText").text($(this).text());
                    if (systemId != thisId && (systemId != null || thisId != defaultSystemId)) {
                        UpdateBranchList(thisId);
                    }
                    systemId = thisId;
                    branchId = null;
                    page = 1;
                    UpdateParticipantsList();
                }
            });

            $(document).on("click", ".branch-selector", function (e) {
                let thisId = $(this).data("id");
                if (branchId != thisId) {
                    if (branchId == null) {
                        var navPill = $(this).parent().parent().parent();
                        navPill.siblings().removeClass("active");
                        navPill.addClass().addClass("active");
                        if (systemId == null) {
                            systemId = defaultSystemId;
                            $("#systemText").text($(".system-selector").first().text());
                        }
                    }
                    $("#branchText").text($(this).text());
                    branchId = thisId;
                    page = 1;
                    UpdateParticipantsList();
                }
            });

            $("#searchText").on("keypress", function (e) {
                let keyCode = e.keyCode || e.which;
                if (keyCode === 13) {
                    e.preventDefault();
                    performParticipantSearch();
                }
            });

            function performParticipantSearch() {
                search = $("#searchText").val();
                if (search != "") {
                    $("#searchMessage").removeClass("d-none");
                    $("#searchTerm").html(search);
                }
                else {
                    $("#searchMessage").addClass("d-none");
                }
                page = 1;
                UpdateParticipantsList();
            }

            $("#searchButton").on("click", performParticipantSearch);

            $("#clearButton").on("click", function () {
                $("#searchText").val("");
                if (search != "") {
                    search = "";
                    $("#searchMessage").addClass("d-none");
                    page = 1;
                    UpdateParticipantsList();
                }
            })

            $(document).on("click", ".page-button", function () {
                if (!$(this).hasClass("disabled")) {
                    page = $(this).data("page");
                    UpdateParticipantsList();
                }
            });

            $('#promoteModal').on('show.bs.modal', function (event) {
                let button = $(event.relatedTarget);
                let id = button.data('id');
                let name = button.data('name');
                let modal = $(this);
                modal.find('#modal-text').text('Are you sure you wish to promote "' + name + '" to @Model.FamilyOrGroup manager?');
                modal.find('#PromoteId').val(id);
            })

            $('#removeModal').on('show.bs.modal', function (event) {
                let button = $(event.relatedTarget);
                let id = button.data('id');
                let name = button.data('name');
                let modal = $(this);
                modal.find('#modal-text').text('Are you sure you wish to remove "' + name + '" from the @Model.FamilyOrGroup?');
                modal.find('#RemoveId').val(id);
            })

            $(".emailAwardButton").on("click", function (event) {
                event.preventDefault();
                let modal = $("#emailAwardModal");
                modal.find("#EmailAwardModel_Email").val($(this).data("email"));
                modal.find("#EmailAwardModel_UserId").val($(this).data("userid"));
                modal.modal();
            });
        </script>
    }
}
