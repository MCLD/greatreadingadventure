@model GRA.Controllers.ViewModel.MissionControl.Participants.ParticipantsAddViewModel

<form asp-controller="Participants" asp-action="Add" method="post" role="form" novalidate>
    <div class="row">
        <div class="col-12">

            <div class="row mb-3">
                <div class="col-12">
                    <label asp-for="Username" class="col-form-label"></label>
                    <span id="Username-Icon" class="fa colored-icon d-none"></span>
                    <input asp-for="Username" class="form-control" autofocus />
                    <span id="Username-Validation"
                          asp-validation-for="Username"></span>
                </div>
            </div>

            <div class="row mb-3">
                <div class="col-12">
                    <label asp-for="Password" class="col-form-label"></label>
                    <input asp-for="Password" type="password" class="form-control" />
                    <span asp-validation-for="Password" class="text-danger"></span>
                </div>
            </div>

            <hr />

            <div class="row mb-3">
                <div class="col-12">
                    <label asp-for="FirstName" class="col-form-label"></label>
                    <input asp-for="FirstName" class="form-control" />
                    <span asp-validation-for="FirstName" class="text-danger"></span>
                </div>
            </div>

            <div class="row mb-3">
                <div class="col-12">
                    <label asp-for="LastName" class="col-form-label"></label>
                    <input asp-for="LastName" class="form-control" />
                    <span asp-validation-for="LastName" class="text-danger"></span>
                </div>
            </div>

            @if (Model.RequirePostalCode)
            {
                <div class="row mb-3">
                    <div class="col-12">
                        <label asp-for="PostalCode" class="col-form-label"></label>
                        <input asp-for="PostalCode" class="form-control" />
                        <span asp-validation-for="PostalCode" class="text-danger"></span>
                    </div>
                </div>
            }

            @if (Model.SystemList.Count() > 1)
            {
                <div class="row mb-3">
                    <div class="col-12">
                        <label asp-for="SystemId" class="col-form-label"></label>
                        <select asp-for="SystemId"
                                asp-items="Model.SystemList"
                                class="form-select">
                            <option></option>
                        </select>
                        <span asp-validation-for="SystemId" class="text-danger"></span>
                    </div>
                </div>
            }
            else
            {
                <input asp-for="SystemId" type="hidden" />
            }

            <div class="row mb-3">
                <div class="col-12">
                    <label asp-for="BranchId" class="col-form-label"></label>
                    <select asp-for="BranchId"
                            asp-items="Model.BranchList"
                            class="form-select"></select>
                    <span asp-validation-for="BranchId" class="text-danger"></span>
                </div>
            </div>

            @if (Model.ProgramList.Count() > 1)
            {
                <div class="row mb-3">
                    <div class="col-12">
                        <label asp-for="ProgramId" class="col-form-label"></label>
                        <select asp-for="ProgramId"
                                asp-items="Model.ProgramList"
                                class="form-select">
                            <option></option>
                        </select>
                        <span asp-validation-for="ProgramId" class="text-danger"></span>
                    </div>
                </div>
            }
            else
            {
                <input asp-for="ProgramId" type="hidden" />
            }

            <div id="ageField" class="row mb-3 @(Model.ShowAge ? "": "d-none")">
                <div class="col-12">
                    <label asp-for="Age" class="col-form-label"></label>
                    <input asp-for="Age" class="form-control" type="text" />
                    <span id="ageMessage" asp-validation-for="Age" class="text-danger"></span>
                </div>
            </div>

            <div id="schoolFields" class="@(Model.ShowSchool ? "": "d-none")">
                @await Html.PartialAsync("_SchoolSelectionPartial", Model)
            </div>

            <hr />

            <div class="row mb-3">
                <div class="col-12">
                    <p>
                        @GRA.Annotations.Validate.EmailPhoneNeededForPrizes
                    </p>
                </div>
            </div>

            <div class="row mb-3">
                <div class="col-12">
                    <label asp-for="Email" class="col-form-label"></label>
                    <input asp-for="Email" class="form-control" type="email" />
                    <span asp-validation-for="Email" class="text-danger"></span>
                </div>
            </div>

            <div class="row mb-3">
                <div class="col-12">
                    <label asp-for="PhoneNumber" class="col-form-label"></label>
                    <input asp-for="PhoneNumber" class="form-control" type="tel" />
                    <span asp-validation-for="PhoneNumber" class="text-danger"></span>
                </div>
            </div>

            @if (Model?.AskFirstTime?.Count() > 1)
            {
                <div class="row mb-3">
                    <div class="col-12">
                        <label asp-for="IsFirstTime" class="col-form-label"></label>
                        <select asp-for="IsFirstTime"
                                asp-items="Model.AskFirstTime"
                                class="form-select"></select>
                        <span asp-validation-for="IsFirstTime" class="text-danger"></span>
                    </div>
                </div>
            }

            @if (Model.AskEmailSubscription?.Count() > 1)
            {
                <div class="row mb-3">
                    <div class="col-12">
                        <label asp-for="EmailSubscriptionRequested"
                               class="col-form-label">@Model.AskEmailSubscriptionText</label>
                        <select asp-for="EmailSubscriptionRequested"
                                asp-items="Model.AskEmailSubscription"
                                class="form-select"></select>
                        <span asp-validation-for="EmailSubscriptionRequested"
                              class="text-danger"></span>
                    </div>
                </div>
            }

            @if (!string.IsNullOrWhiteSpace(Model.TranslationDescriptionPastTense))
            {
                <div class="row mb-3">
                    <div class="col-12">
                        <label asp-for="DailyPersonalGoal" class="col-form-label"></label>
                        <div>
                            I will @Model.TranslationDescriptionPastTense
                            <input asp-for="DailyPersonalGoal" class="form-control"
                                   style="display:inline-block; width:75px;" />
                            @Model.ActivityDescriptionPlural a day
                        </div>
                        <span asp-validation-for="DailyPersonalGoal" class="text-danger"></span>
                    </div>
                </div>
            }

			@if (Model.AskPersonalPointGoal)
			{
				<div class="row mb-3">
					<div class="col-12">
						<label asp-for="PersonalPointGoal" class="col-form-label"></label>
						<span class="fas fa-info-circle"
							  data-bs-toggle="tooltip"
							  title="@String.Format(GRA.Annotations.Interface.PersonalPointGoalDescription, Model.MinimumPersonalPointGoal)"></span>
						<div>
							@GRA.Annotations.Interface.PersonalPointGoalLabel
							<input asp-for="PersonalPointGoal"
								   max="@Model.MaximumPersonalPointGoal"
								   min="@Model.MinimumPersonalPointGoal"
								   class="form-control"
								   style="display:inline-block; width:100px;" />
						</div>
						<span asp-validation-for="PersonalPointGoal" class="text-danger"></span>
					</div>
				</div>
			}

            <hr />

            <div class="row mb-3">
                <div class="col-12 d-flex justify-content-end">
                    <button type="submit"
                            class="btn btn-outline-primary"
                            button-spinner>
                        Add Participant
                    </button>
                </div>
            </div>

        </div>
    </div>
</form>

@section scripts {
    <script>
        var programs = JSON.parse('@Html.Raw(Model.ProgramJson)');
        var selectedProgram = $.grep(programs, function (obj) {
            return obj.Id == $("#ProgramId").val();
        })[0];

        $("#SystemId").on("change", function () {
            var systemId = $(this).val();
            var branchList = $("#BranchId");
            var branchId = branchList.val();
            var url = "@Url.Action("GetBranches", "Lookup", new { Area = string.Empty })";

            $.getJSON(url, { systemId: systemId, branchId: branchId }, function (response) {
                branchList.empty();
                if (response.length > 1) {
                    branchList.append(new Option("", "-1"));
                }
                $.each(response, function (index, item) {
                    branchList.append(new Option(item.text, item.value, item.selected, item.selected))
                });
            });
        });

        $("#ProgramId").on("change", function () {
            var programId = $(this).val();
            selectedProgram = $.grep(programs, function (obj) {
                return obj.Id == programId;
            })[0];
            if (selectedProgram != null) {
                if (selectedProgram.AskAge) {
                    $("#ageField").removeClass("d-none");
                    validateAge();
                }
                else {
                    $("#ageField").addClass("d-none");
                }

                if (selectedProgram.AskSchool) {
                    $("#schoolFields").removeClass("d-none");
                }
                else {
                    $("#schoolFields").addClass("d-none");
                }
            }
        });

        $("#Age").on("change", function () {
            validateAge();
        });

        function validateAge() {
            var age = $("#Age").val();
            var message = $("#ageMessage");
            if (age != "" && ((age > selectedProgram.AgeMaximum && selectedProgram.AgeMaximum != null)
                || (age < selectedProgram.AgeMinimum && selectedProgram.AgeMinimum != null))) {
                var program = $.grep(programs, function (obj) {
                    return ((obj.AgeMaximum >= age || obj.AgeMaximum == null)
                        && (obj.AgeMinimum <= age || obj.AgeMinimum == null));
                })[0];
                if (program != null) {
                    message.removeClass('field-validation-valid field-validation-error text-danger');
                    message.addClass('text-primary');
                    $("#Age").removeClass("input-validation-error")
                    message.text("The program " + program.Name + " may be better suited for that age.")
                }
            }
            else {
                message.text("");
            }
        }

        const usernameCheckUrl = "@Url.Action(nameof(GRA.Controllers.LookupController.UsernameInUse), LookupController.Name, new { Area = string.Empty })";
        const usernameIcon = $("#Username-Icon");
        const usernameField = $("#Username");
        const usernameValidation = $("#Username-Validation");

        usernameField.on("blur", function () {
            if ($(this).val().trim() != "" && !$(this).hasClass("input-validation-error")) {
                $(this).val($(this).val().trim());
                usernameIcon.addClass("fa-spinner fa-spin")
                    .removeClass("d-none fa-times-circle fa-check-circle text-success text-danger");
                $.post(usernameCheckUrl, { username: $(this).val() }, function (response) {
                    if (response) {
                        $(this).removeClass("valid");
                        $(this).addClass("input-validation-error");
                        usernameValidation.removeClass("field-validation-valid text-success")
                            .addClass("field-validation-error")
                            .text("Someone has already chosen that username.");
                        usernameIcon.removeClass("fa-spinner fa-spin")
                            .addClass("fa-times-circle text-danger");
                    }
                    else {
                        usernameValidation.removeClass("field-validation-valid")
                            .addClass("text-success")
                            .text("The chosen username is available.");
                        usernameIcon.removeClass("fa-spinner fa-spin")
                            .addClass("fa-check-circle text-success");
                    }
                });
            }
        });

        usernameField.on("keypress", function () {
            usernameIcon.addClass("d-none");
        });
    </script>

    @await Html.PartialAsync("_SchoolSelectionScripts", Model)
}