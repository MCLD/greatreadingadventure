<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8" />
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <meta name="robots" content="noindex, nofollow" />
    <title>@ViewData[GRA.Controllers.ViewDataKey.Title]</title>
    <link rel="icon" href="/favicon.ico">
    <link rel="icon" href="/icon.svg" type="image/svg+xml" sizes="any">
    <link rel="apple-touch-icon" href="/apple-touch-icon.png">
    <link rel="manifest" href="/manifest.webmanifest">
    <link rel="stylesheet" href="~/css/jquery-ui.min.css" asp-append-version="true" />
    <link rel="stylesheet" href="~/css/main.min.css" asp-append-version="true" />
    <link rel="stylesheet" href="~/css/missioncontrol.min.css" asp-append-version="true" />
    @RenderSection("styles", required: false)
    @if (Context.Items.ContainsKey(GRA.Controllers.ItemKey.SiteCss))
    {
        <link rel="stylesheet" href="@Url.Content(Context.Items[GRA.Controllers.ItemKey.SiteCss].ToString())" />
    }
    <style>
        div.tooltip-inner {
            width: 10rem;
        }
    </style>
</head>
<body id="mission-control-body">
    <div class="navbar navbar-inverse navbar-static-top">
        <div class="container">
            <div class="navbar-header">
                <button type="button"
                        class="navbar-toggle mc-menu-button btn-sm"
                        data-toggle="collapse"
                        data-target=".navbar-collapse">
                    <span class="sr-only">Toggle navigation</span>
                    Menu
                </button>
                <a asp-controller="Home"
                   asp-action="Index"
                   class="navbar-brand mc-navbar-brand">
                    <span class="fa fa-rocket"></span>
                    Mission Control
                </a>
            </div>
            <div class="navbar-collapse navbar-right collapse">
                <ul class="nav navbar-nav">
                    <li><a asp-area="" asp-controller="Home" asp-action="Index" title="Back to the site" data-toggle="tooltip" data-placement="bottom" class="gra-homelink"><span class="fa fa-sitemap"></span><span class="visible-xs-inline"> Back to the site</span></a></li>
                    @if (Context.User.HasClaim(GRA.ClaimType.Permission, nameof(GRA.Domain.Model.Permission.ReadAllMail)))
                    {
                        var newMail = (int)Context.Items[GRA.Controllers.ItemKey.UnreadCount] > 0;
                        var newMailClass = newMail ? "text-danger" : "";
                        var newMailDisplay = newMail ? "inline" : "none";
                        <li ActiveBy routeKey="Controller" value="Mail">
                            <a asp-controller="Mail" asp-action="Index" title="Mail">
                                <span class="fas fa-envelope mc-mail-icon @newMailClass"></span><span class="visible-xs-inline"> Mail</span>
                                <span class="label label-default label-as-badge mc-mail-incoming-count" style="display: @newMailDisplay">
                                    @Context.Items[GRA.Controllers.ItemKey.UnreadCount]
                                </span>
                            </a>
                        </li>
                    }
                    @if (Context.User.HasClaim(GRA.ClaimType.Permission, GRA.Domain.Model.Permission.ViewParticipantList.ToString()))
                    {
                        <li ActiveBy routeKey="Controller" value="Participants"><a asp-controller="Participants" asp-action="Index" title="Participants"><span class="fa fa-users"></span><span class="visible-xs-inline"> Participants</span></a></li>
                    }
                    @if (Context.User.HasClaim(GRA.ClaimType.Permission, GRA.Domain.Model.Permission.ViewAllChallenges.ToString()))
                    {
                        <li ActiveBy routeKey="Controller" value="Challenges">
                            <a href="#" class="dropdown-toggle" data-toggle="dropdown" role="button" aria-haspopup="true" aria-expanded="false" title="Challenges"><span class="fa fa-trophy"></span><span class="visible-xs-inline"> Challenges</span><span class="caret"></span></a>
                            <ul class="dropdown-menu">
                                <li><a asp-controller="Challenges" asp-action="Index">All Challenges</a></li>
                                @if (Context.User.HasClaim(GRA.ClaimType.Permission, GRA.Domain.Model.Permission.ActivateAllChallenges.ToString()) || Context.User.HasClaim(GRA.ClaimType.Permission, GRA.Domain.Model.Permission.ActivateSystemChallenges.ToString()))
                                {
                                    <li><a asp-controller="Challenges" asp-action="Pending">Pending Challenges</a></li>
                                }
                                <li><a asp-controller="Challenges" asp-action="Groups">Challenge Groups</a></li>
                            </ul>
                        </li>
                    }
                    @if (Context.User.HasClaim(GRA.ClaimType.Permission, GRA.Domain.Model.Permission.ManageTriggers.ToString()))
                    {
                        <li ActiveBy routeKey="Controller" value="Triggers"><a asp-controller="Triggers" asp-action="Index" title="Triggers"><span class="fa fa-gears"></span><span class="visible-xs-inline"> Triggers</span></a></li>
                    }
                    @if (Context.User.HasClaim(GRA.ClaimType.Permission, GRA.Domain.Model.Permission.ManageEvents.ToString()) && Context.Items.ContainsKey(GRA.Controllers.ItemKey.ExternalEventListUrl) == false)
                    {
                        <li ActiveBy routeKey="Controller" value="Events">
                            <a href="#" class="dropdown-toggle" data-toggle="dropdown" role="button" aria-haspopup="true" aria-expanded="false" title="Events"><span class="fa fa-calendar"></span><span class="visible-xs-inline"> Events</span><span class="caret"></span></a>
                            <ul class="dropdown-menu">
                                <li><a asp-controller="Events" asp-action="Index">Events</a></li>
                                <li><a asp-controller="Events" asp-action="CommunityExperiences">Community Experiences</a></li>
                                @if (Context.User.HasClaim(GRA.ClaimType.Permission, GRA.Domain.Model.Permission.ManageLocations.ToString()))
                                {
                                    <li><a asp-controller="Events" asp-action="Locations">Locations</a></li>
                                }
                                <li><a asp-controller="Events" asp-action="StreamingEvents">Streaming Events</a></li>
                            </ul>
                        </li>
                    }
                    @if (Context.User.HasClaim(GRA.ClaimType.Permission, GRA.Domain.Model.Permission.ManageAvatars.ToString()))
                    {
                        <li ActiveBy routeKey="Controller" value="Avatars">
                            <a href="#" class="dropdown-toggle" data-toggle="dropdown" role="button" aria-haspopup="true" aria-expanded="false" title="Avatars"><span class="fa fa-picture-o"></span><span class="visible-xs-inline"> Avatars</span> <span class="caret"></span></a>
                            <ul class="dropdown-menu">
                                <li><a asp-controller="Avatars" asp-action="Index">Avatars</a></li>
                                <li><a asp-controller="Avatars" asp-action="Bundles" asp-route-Search="Default">Avatar Bundles</a></li>
                            </ul>
                        </li>
                    }
                    @if (Context.User.HasClaim(GRA.ClaimType.Permission, GRA.Domain.Model.Permission.PerformDrawing.ToString()))
                    {
                        <li ActiveBy routeKey="Controller" value="Drawing">
                            <a href="#" class="dropdown-toggle" data-toggle="dropdown" role="button" aria-haspopup="true" aria-expanded="false" title="Drawings"><span class="fa fa-ticket"></span><span class="visible-xs-inline"> Drawings</span> <span class="caret"></span></a>
                            <ul class="dropdown-menu">
                                <li><a asp-controller="Drawing" asp-action="Criteria">Drawing Criteria</a></li>
                                <li><a asp-controller="Drawing" asp-action="Index">Drawings</a></li>
                            </ul>
                        </li>
                    }
                    @if (Context.Items.ContainsKey(GRA.Controllers.ItemKey.ShowPerformerScheduling))
                    {
                        <li ActiveBy routeKey="Controller" value="PerformerScheduling"><a asp-controller="PerformerScheduling" asp-action="Index" title="Performer Scheduling"><span class="fas fa-theater-masks"></span><span class="visible-xs-inline"> Performer Scheduling</span></a></li>
                    }
                    @if (Context.User.HasClaim(GRA.ClaimType.Permission, GRA.Domain.Model.Permission.ViewAllReporting.ToString()))
                    {
                        <li ActiveBy routeKey="Controller" value="Reporting">
                            <a href="#" class="dropdown-toggle" data-toggle="dropdown" role="button" aria-haspopup="true" aria-expanded="false" title="Reporting"><span class="fa fa-file-text-o"></span><span class="visible-xs-inline"> Reporting</span> <span class="caret"></span></a>
                            <ul class="dropdown-menu">
                                <li><a asp-controller="Reporting" asp-action="Index">All reports</a></li>
                            </ul>
                        </li>
                    }
                    @if (Context.User.HasClaim(GRA.ClaimType.Permission, nameof(GRA.Domain.Model.Permission.ReceivePackingSlips)) && Context.Items.ContainsKey(GRA.Controllers.ItemKey.ShowPackingSlips) && Context.Items[GRA.Controllers.ItemKey.ShowPackingSlips] as bool? == true)
                    {
                        <li ActiveBy routeKey="Controller" value="VendorCodes">
                            <a asp-controller="VendorCodes"
                               asp-action="ViewPackingSlip"
                               title="Packing Slips"><span class="fas fa-file-invoice"></span><span class="visible-xs-inline"> Packing Slips</span></a>
                        </li>
                    }
                    @if (Context.User.HasClaim(GRA.ClaimType.Permission, nameof(GRA.Domain.Model.Permission.ManageCarousels)) || Context.User.HasClaim(GRA.ClaimType.Permission, GRA.Domain.Model.Permission.ManageCategories.ToString()) || Context.User.HasClaim(GRA.ClaimType.Permission, GRA.Domain.Model.Permission.ManageDashboardContent.ToString()) || Context.User.HasClaim(GRA.ClaimType.Permission, GRA.Domain.Model.Permission.ManageGroupTypes.ToString()) || Context.User.HasClaim(GRA.ClaimType.Permission, nameof(GRA.Domain.Model.Permission.ManageNews)) || Context.User.HasClaim(GRA.ClaimType.Permission, GRA.Domain.Model.Permission.ViewUnpublishedPages.ToString()) || Context.User.HasClaim(GRA.ClaimType.Permission, GRA.Domain.Model.Permission.ManagePrograms.ToString()) || Context.User.HasClaim(GRA.ClaimType.Permission, GRA.Domain.Model.Permission.ManageQuestionnaires.ToString()) || Context.User.HasClaim(GRA.ClaimType.Permission, GRA.Domain.Model.Permission.ManageRoles.ToString()) || Context.User.HasClaim(GRA.ClaimType.Permission, GRA.Domain.Model.Permission.ManageSchools.ToString()) || Context.User.HasClaim(GRA.ClaimType.Permission, GRA.Domain.Model.Permission.ManageSites.ToString()) || Context.User.HasClaim(GRA.ClaimType.Permission, GRA.Domain.Model.Permission.ManageSystems.ToString()) || Context.User.HasClaim(GRA.ClaimType.Permission, GRA.Domain.Model.Permission.ManageSystems.ToString()) || Context.User.HasClaim(GRA.ClaimType.Permission, GRA.Domain.Model.Permission.ManageVendorCodes.ToString()))
                    {
                        <li ActiveBy routeKey="Controller" value="Pages, Schools">
                            <a href="#" class="dropdown-toggle" data-toggle="dropdown" role="button" aria-haspopup="true" aria-expanded="false" title="Setup"><span class="fa fa-wrench"></span><span class="visible-xs-inline"> Setup</span> <span class="caret"></span></a>

                            <ul class="dropdown-menu">
                                <li>
                                    <a asp-controller="Home" asp-action="AuthorizationCode">
                                        Authorization code
                                    </a>
                                </li>
                                @if (Context.User.HasClaim(GRA.ClaimType.Permission, nameof(GRA.Domain.Model.Permission.ManageCarousels)))
                                {
                                    <li><a asp-controller="Carousels" asp-action="Index">Carousel management</a></li>
                                }
                                @if (Context.User.HasClaim(GRA.ClaimType.Permission, GRA.Domain.Model.Permission.ManageCategories.ToString()))
                                {
                                    <li><a asp-controller="Categories" asp-action="Index">Category management</a></li>
                                }
                                @if (Context.User.HasClaim(GRA.ClaimType.Permission, GRA.Domain.Model.Permission.ManageDailyLiteracyTips.ToString()))
                                {
                                    <li><a asp-controller="DailyTips" asp-action="Index">Daily tip management</a></li>
                                }
                                @if (Context.User.HasClaim(GRA.ClaimType.Permission, GRA.Domain.Model.Permission.ManageDashboardContent.ToString()))
                                {
                                    <li><a asp-controller="Dashboard" asp-action="Index">Dashboard Content management</a></li>
                                }
                                @if (Context.User.HasClaim(GRA.ClaimType.Permission, GRA.Domain.Model.Permission.ManageBulkEmails.ToString()))
                                {
                                    <li><a asp-controller="EmailManagement" asp-action="Index">Email management</a></li>
                                }
                                @if (Context.User.HasClaim(GRA.ClaimType.Permission, GRA.Domain.Model.Permission.ManageGroupTypes.ToString()))
                                {
                                    <li><a asp-controller="GroupTypes" asp-action="Index">Group Type management</a></li>
                                }
                                @if (Context.User.HasClaim(GRA.ClaimType.Permission, nameof(GRA.Domain.Model.Permission.ManageNews)))
                                {
                                    <li><a asp-controller="News" asp-action="Index">News management</a></li>
                                }
                                @if (Context.User.HasClaim(GRA.ClaimType.Permission, GRA.Domain.Model.Permission.ViewUnpublishedPages.ToString()))
                                {
                                    <li><a asp-controller="Pages" asp-action="Index">Page management</a></li>
                                }
                                @if (Context.User.HasClaim(GRA.ClaimType.Permission, GRA.Domain.Model.Permission.ManagePerformers.ToString()))
                                {
                                    <li><a asp-controller="PerformerManagement" asp-action="Index">Performer management</a></li>
                                }
                                @if (Context.User.HasClaim(GRA.ClaimType.Permission, GRA.Domain.Model.Permission.ManagePrograms.ToString()))
                                {
                                    <li><a asp-controller="Programs" asp-action="Index">Program management</a></li>
                                }
                                @if (Context.User.HasClaim(GRA.ClaimType.Permission, GRA.Domain.Model.Permission.ManageQuestionnaires.ToString()))
                                {
                                    <li><a asp-controller="Questionnaires" asp-action="Index">Questionnaire management</a></li>
                                }
                                @if (Context.User.HasClaim(GRA.ClaimType.Permission, GRA.Domain.Model.Permission.ManageRoles.ToString()))
                                {
                                    <li><a asp-controller="Roles" asp-action="Index">Role management</a></li>
                                }
                                @if (Context.User.HasClaim(GRA.ClaimType.Permission, GRA.Domain.Model.Permission.ManageSchools.ToString()))
                                {
                                    <li><a asp-controller="Schools" asp-action="Index">School management</a></li>
                                }
                                @if (Context.User.HasClaim(GRA.ClaimType.Permission, GRA.Domain.Model.Permission.ManageSites.ToString()))
                                {
                                    <li><a asp-controller="Sites" asp-action="Index">Site management</a></li>
                                }
                                @if (Context.User.HasClaim(GRA.ClaimType.Permission, GRA.Domain.Model.Permission.ManageSocial.ToString()))
                                {
                                    <li><a asp-controller="Social" asp-action="Index">Social management</a></li>
                                }
                                @if (Context.User.HasClaim(GRA.ClaimType.Permission, GRA.Domain.Model.Permission.ManageSystems.ToString()))
                                {
                                    <li><a asp-controller="Systems" asp-action="Index">System &amp; branch management</a></li>
                                }
                                @if (Context.User.HasClaim(GRA.ClaimType.Permission, GRA.Domain.Model.Permission.ManageVendorCodes.ToString()))
                                {
                                    <li><a asp-controller="VendorCodes" asp-action="Index">Vendor code management</a></li>
                                }
                                <li>
                                    <a asp-controller="SystemInformation" asp-action="Index">
                                        <span class="fa fa-info-circle"></span>
                                        System information
                                    </a>
                                </li>
                            </ul>
                        </li>
                    }
                    <li><a asp-controller="Home" asp-action="Signout" asp-area="">Sign out</a></li>
                </ul>
            </div>
        </div>
    </div>
    <div class="container body-content">
        <noscript>
            <div class="row">
                <div class="col-xs-12">
                    <div class="alert alert-warning"><span class="fa fa-lg fa-warning text-primary"></span> This website relies on JavaScript. Please enable JavaScript in your browser to get the best experience.</div>
                </div>
            </div>
        </noscript>

        @if (ViewData.ContainsKey(GRA.Controllers.ViewDataKey.TitleHtml)
        && ViewData[GRA.Controllers.ViewDataKey.TitleHtml] != null)
        {
            <div class="row">
                <div class="col-xs-12">
                    @RenderSection("inHeading", required: false)
                    <span class="h2">@Html.Raw(ViewData[GRA.Controllers.ViewDataKey.TitleHtml])</span>
                </div>
            </div>
        }
        else if (ViewData.ContainsKey(GRA.Controllers.ViewDataKey.Title))
        {
            <div class="row mc-page-title">
                <div class="col-xs-12">
                    @RenderSection("inHeading", required: false)
                    <span class="h2">@ViewData[GRA.Controllers.ViewDataKey.Title]</span>
                </div>
            </div>
        }

        @if (TempData[GRA.Controllers.TempDataKey.AlertDanger] != null)
        {
            <div class="row mc-alertrow">
                <div class="col-xs-12 col-sm-6 col-sm-offset-3">
                    <div class="alert alert-danger">@Html.Raw(TempData[GRA.Controllers.TempDataKey.AlertDanger])</div>
                </div>
            </div>
        }
        @if (TempData[GRA.Controllers.TempDataKey.AlertWarning] != null)
        {
            <div class="row mc-alertrow">
                <div class="col-xs-12 col-sm-6 col-sm-offset-3">
                    <div class="alert alert-warning">@Html.Raw(TempData[GRA.Controllers.TempDataKey.AlertWarning])</div>
                </div>
            </div>
        }
        @if (TempData[GRA.Controllers.TempDataKey.AlertSuccess] != null)
        {
            <div class="row mc-alertrow">
                <div class="col-xs-12 col-sm-6 col-sm-offset-3">
                    <div class="alert alert-success">@Html.Raw(TempData[GRA.Controllers.TempDataKey.AlertSuccess])</div>
                </div>
            </div>
        }
        @if (TempData[GRA.Controllers.TempDataKey.AlertInfo] != null)
        {
            <div class="row mc-alertrow">
                <div class="col-xs-12 col-sm-6 col-sm-offset-3">
                    <div class="alert alert-info">@Html.Raw(TempData[GRA.Controllers.TempDataKey.AlertInfo])</div>
                </div>
            </div>
        }
        @RenderBody()
        <footer style="clear: both;">
            <grasite property="footer"></grasite>
        </footer>
    </div>
    <script src="~/js/main.min.js" asp-append-version="true"></script>
    <script src="~/js/jquery-ui.min.js" asp-append-version="true"></script>
    @RenderSection("scripts", required: false)
    <script>
        $(function () {
            $("[data-toggle=\"tooltip\"]").tooltip()
        })
    </script>
    @if (Context.User.HasClaim(GRA.ClaimType.Permission, nameof(GRA.Domain.Model.Permission.ReadAllMail)))
    {
        <script>
            var mcMailUpdateEvery = 300 * 1000;
            function updateUnreadMailCount(updateInterval) {
                var mcMailInterval = setInterval(function () {
                    $.ajax("@Url.Action("GetUnreadMailCount", "Home", new { area = "MissionControl" })")
                        .done(function (data, textStatus, jqXHR) {
                            if (data === 0) {
                                $(".mc-mail-icon").removeClass("text-danger");
                                $(".mc-mail-incoming-count").hide();
                                $(".mc-mail-incoming-count").text("0");
                            } else {
                                $(".mc-mail-icon").addClass("text-danger");
                                $(".mc-mail-incoming-count").text(data);
                                $(".mc-mail-incoming-count").show();
                            }
                        })
                        .fail(function (jqXHR, textStatus, errorThrown) {
                            console.log("Failure: " + textStatus + " on unread mail count, stopping updates");
                            clearInterval(mcMailInterval);
                        });
                }, updateInterval);
         }
        $().ready(function() {
            updateUnreadMailCount(mcMailUpdateEvery);
        });
        </script>
    }

    @if (Context.Items.ContainsKey(GRA.Controllers.ItemKey.SiteJs))
    {
        <script src="@Url.Content(Context.Items[GRA.Controllers.ItemKey.SiteJs].ToString())"></script>
    }
</body>
</html>
