@model GRA.Controllers.ViewModel.MissionControl.Challenges.ChallengesDetailViewModel
@using GRA.Domain.Model

@section styles {
    <link rel="stylesheet" href="~/css/WMD.min.css" asp-append-version="true" />
    <style>
        textarea#wmd-input {
            height: 200px !important;
        }
    </style>
}

<div class="row">
    <div class="modal fade frame-modal" id="badgeModal" tabindex="-1" role="dialog" aria-labelledby="badgeModalLabel">
        <span class="frame-close fa fa-stack fa-lg" data-dismiss="modal">
            <span class="fa fa-circle fa-stack-2x fa-inverse"></span>
            <span class="fa fa-times-circle fa-stack-1x fa-lg" style="text-shadow:none;"></span>
        </span>
        <div class="frame-container">
            <iframe id="badgeMaker" class="badge-maker"></iframe>
        </div>
    </div>
</div>

<form asp-controller="Challenges" method="post" role="form" enctype="multipart/form-data" style="padding: 10px 0;">

    @if (Model.AddTask)
    {
        <div class="row">
            <div class="modal fade" id="addModal" tabindex="-1" role="dialog" aria-labelledby="addModalLabel">
                <div class="modal-dialog" role="document">
                    <div class="modal-content">
                        <div class="modal-header">
                            <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
                            <h4 class="modal-title" id="addModalLabel">Add task</h4>
                        </div>
                        <div class="modal-body">
                            <input asp-for="Task.ChallengeTaskType" value="@ChallengeTaskType.Action" type="hidden" />
                            <input asp-for="TaskUploadFile" type="file" accept=".png,.jpg,.jpeg,.png" style="display:none;" />
                            <ul class="nav nav-tabs gra-nav-tabs" role="tablist">
                                <li role="presentation" class="active">
                                    <a id="actionTab" href="#action" aria-controls="action" role="tab" data-toggle="tab">Action</a>
                                </li>
                                <li role="presentation">
                                    <a id="bookTab" href="#book" aria-controls="book" role="tab" data-toggle="tab">Book</a>
                                </li>
                            </ul>

                            <div class="tab-content">
                                <div role="tabpanel" class="tab-pane gra-tab-pane active" id="action">
                                    <div class="form-group">
                                        <label asp-for="Task.Title" class="control-label">Description</label>
                                        <div id="wmd-button-bar"></div>
                                        <textarea asp-for="Task.Title" id="wmd-input" class="form-control wmd-input actionTitle" data-val-required="The Description field is required."></textarea>
                                        <br /><label class="control-label">Preview</label>
                                        <div id="preview"></div>
                                    </div>
                                    <div class="form-group">
                                        <label class="control-label">Add a file</label>
                                        <div class="input-group">
                                            <label class="input-group-btn">
                                                <button type="button" class="btn btn-default btn-file taskFileButton">
                                                    <span class="fa fa-file-o"></span> Select a file
                                                </button>
                                            </label>
                                            <input type="text" class="form-control selectedTaskFile" readonly>
                                        </div>
                                        <span asp-validation-for="TaskUploadFile" class="text-danger"></span>
                                        <button class="btn btn-default clearTaskFile" type="button" style="margin-top: 0.5em;"><span class="fa fa-ban"></span> Clear file selection</button>
                                    </div>
                                </div>
                                <div role="tabpanel" class="tab-pane gra-tab-pane" id="book">
                                    <div class="form-group">
                                        <label asp-for="Task.Title" class="control-label"></label>
                                        <input asp-for="Task.Title" id="bookTitle" class="form-control" disabled />
                                    </div>
                                    <div class="form-group">
                                        <label asp-for="Task.Author" class="control-label"></label>
                                        <input asp-for="Task.Author" class="form-control" />
                                        <span asp-validation-for="Task.Author" class="text-danger"></span>
                                    </div>
                                    <div class="form-group">
                                        <label asp-for="Task.Isbn" class="control-label"></label>
                                        <input asp-for="Task.Isbn" class="form-control" />
                                        <span asp-validation-for="Task.Isbn" class="text-danger"></span>
                                    </div>
                                    <div class="form-group">
                                        <label asp-for="Task.Url" class="control-label"></label>
                                        <input asp-for="Task.Url" class="form-control" />
                                    </div>
                                    <div class="form-group">
                                        <label class="control-label">Add a file</label>
                                        <div class="input-group">
                                            <label class="input-group-btn">
                                                <button type="button" class="btn btn-default btn-file taskFileButton">
                                                    <span class="fa fa-file-o"></span> Select a file
                                                </button>
                                            </label>
                                            <input type="text" class="form-control selectedTaskFile" readonly>
                                        </div>
                                        <span asp-validation-for="TaskUploadFile" class="text-danger"></span>
                                        <button class="btn btn-default clearTaskFile" type="button" style="margin-top: 0.5em;"><span class="fa fa-ban"></span> Clear file selection</button>
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div class="modal-footer">
                            <button type="button" class="btn btn-default" data-dismiss="modal" style="margin-right: 1em;">Cancel</button>
                            <button type="submit" asp-action="AddTask" class="btn btn-primary pull-right btn-spinner" aria-label="Confirm">
                                <span class="buttonText">Add</span>
                                <span class="fa fa-spinner fa-pulse fa-lg fa-fw hidden"></span>
                            </button>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    }

    @if (Model.Task != null)
    {
        <div class="row">
            <div class="modal fade" id="editModal" tabindex="-1" role="dialog" aria-labelledby="editModalLabel">
                <div class="modal-dialog" role="document">
                    <div class="modal-content">
                        <div class="modal-header">
                            <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
                            <h4 class="modal-title" id="editModalLabel">Edit task</h4>
                        </div>
                        <div class="modal-body">
                            <input asp-for="Task.Id" type="hidden" />
                            <input asp-for="Task.Position" type="hidden" />
                            <input asp-for="Task.ChallengeId" type="hidden" />
                            <input asp-for="Task.ChallengeTaskType" type="hidden" />
                            <input asp-for="Task.Filename" type="hidden" />
                            <input asp-for="TaskUploadFile" type="file" accept=".png,.jpg,.jpeg,.png" style="display:none;" />

                            <ul class="nav nav-tabs gra-nav-tabs" role="tablist">
                                <li role="presentation" class="@(Model.Task.ChallengeTaskType == ChallengeTaskType.Action ? " active" : "" )">
                                    <a id="actionTab" href="#action" aria-controls="action" role="tab" data-toggle="tab">Action</a>
                                </li>
                                <li role="presentation" class="@(Model.Task.ChallengeTaskType == ChallengeTaskType.Book ? " active" : "" )">
                                    <a id="bookTab" href="#book" aria-controls="book" role="tab" data-toggle="tab">Book</a>
                                </li>
                            </ul>

                            <div class="tab-content">
                                <div role="tabpanel" class="tab-pane gra-tab-pane @(Model.Task.ChallengeTaskType == ChallengeTaskType.Action ? " active" : "" )" id="action">
                                    <div class="form-group">
                                        <label asp-for="Task.Title" class="control-label">Description</label>
                                        <div id="wmd-button-bar"></div>
                                        <textarea asp-for="Task.Title" id="wmd-input" class="form-control wmd-input actionTitle" data-val-required="The Description field is required." disabled="@(Model.Task.ChallengeTaskType == ChallengeTaskType.Action ? null : "disabled")"></textarea>
                                        <br /><label class="control-label">Preview</label>
                                        <div id="preview"></div>
                                    </div>
                                    <div class="form-group">
                                        @if (string.IsNullOrWhiteSpace(Model.Task.Filename))
                                        {
                                            <label class="control-label">Add a file</label>
                                        }
                                        else
                                        {
                                            <label class="control-label">Edit File &ndash; <a href="@Model.TaskFilePath" target="_blank">Link</a></label>
                                        }
                                        <div class="input-group">
                                            <label class="input-group-btn">
                                                <button type="button" class="btn btn-default btn-file taskFileButton">
                                                    <span class="fa fa-file-o"></span> Select a file
                                                </button>
                                            </label>
                                            <input type="text" value="@Model.Task.Filename" class="form-control selectedTaskFile" readonly>
                                        </div>
                                        <span asp-validation-for="TaskUploadFile" class="text-danger"></span>
                                        <button class="btn btn-default clearTaskFile" type="button" style="margin-top: 0.5em;"><span class="fa fa-ban"></span> Clear file selection</button>
                                    </div>
                                </div>
                                <div role="tabpanel" class="tab-pane gra-tab-pane @(Model.Task.ChallengeTaskType == ChallengeTaskType.Book ? " active" : "" )" id="book">
                                    <div class="form-group">
                                        <label asp-for="Task.Title" class="control-label"></label>
                                        <input asp-for="Task.Title" id="bookTitle" class="form-control" disabled="@(Model.Task.ChallengeTaskType == ChallengeTaskType.Book ? null : " disabled")" />
                                    </div>
                                    <div class="form-group">
                                        <label asp-for="Task.Author" class="control-label"></label>
                                        <input asp-for="Task.Author" class="form-control" />
                                        <span asp-validation-for="Task.Author" class="text-danger"></span>
                                    </div>
                                    <div class="form-group">
                                        <label asp-for="Task.Isbn" class="control-label"></label>
                                        <input asp-for="Task.Isbn" class="form-control" />
                                        <span asp-validation-for="Task.Isbn" class="text-danger"></span>
                                    </div>
                                    <div class="form-group">
                                        <label asp-for="Task.Url" class="control-label"></label>
                                        <input asp-for="Task.Url" class="form-control" />
                                    </div>
                                    <div class="form-group">
                                        @if (string.IsNullOrWhiteSpace(Model.Task.Filename))
                                        {
                                            <label class="control-label">Add a file</label>
                                        }
                                        else
                                        {
                                            <label class="control-label">Edit file</label>
                                        }
                                        <div class="input-group">
                                            <label class="input-group-btn">
                                                <button type="button" class="btn btn-default btn-file taskFileButton">
                                                    <span class="fa fa-file-o"></span> Select a file
                                                </button>
                                            </label>
                                            <input type="text" value="@Model.Task.Filename" class="form-control selectedTaskFile" readonly>
                                        </div>
                                        <span asp-validation-for="TaskUploadFile" class="text-danger"></span>
                                        <button class="btn btn-default clearTaskFile" type="button" style="margin-top: 0.5em;"><span class="fa fa-ban"></span> Clear file selection</button>
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div class="modal-footer">
                            <button type="button" class="btn btn-default" data-dismiss="modal" style="margin-right: 1em;">Cancel</button>
                            <button type="submit" asp-action="ModifyTask" class="btn btn-primary pull-right btn-spinner" aria-label="Confirm">
                                <span class="buttonText">Save</span>
                                <span class="fa fa-spinner fa-pulse fa-lg fa-fw hidden"></span>
                            </button>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    }

    <div class="row">
        <div class="modal fade" id="deleteModal" tabindex="-1" role="dialog" aria-labelledby="deleteModalLabel">
            <div class="modal-dialog" role="document">
                <div class="modal-content">
                    <div class="modal-header">
                        <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
                        <h4 class="modal-title" id="deleteModalLabel">Delete task</h4>
                    </div>
                    <div class="modal-body">
                        <span class="fa fa-exclamation-triangle" aria-hidden="true"></span>
                        <span id="modal-text"></span>
                    </div>
                    <div class="modal-footer">
                        <button type="button" class="btn btn-default" data-dismiss="modal" style="margin-right: 1em;">Cancel</button>
                        <button type="submit" id="DeleteTask" asp-action="DeleteTask" class="btn btn-danger pull-right" aria-label="Confirm">
                            <span class="fa fa-remove" aria-hidden="true"></span>
                            Delete
                        </button>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <input asp-for="Challenge.Id" type="hidden" />
    <input asp-for="Challenge.BadgeId" type="hidden" />
    <input asp-for="MaxPointsMessage" type="hidden" />
    <input asp-for="CanEditGroups" type="hidden" />
    <input asp-for="CanManageEvents" type="hidden" />
    <input asp-for="CanViewTriggers" type="hidden" />
    <input asp-for="UseBadgeMaker" type="hidden" />
    <input asp-for="BadgeMakerUrl" type="hidden" />
    <input asp-for="BadgeMakerImage" type="hidden" />

    @if (Model.Groups.Count > 0)
    {
        <div class="panel-group row-spacing" id="accordion" role="tablist" aria-multiselectable="true">
            <div class="panel panel-default">
                <div class="panel-heading" role="tab" id="headingGroups">
                    <h4 class="panel-title">
                        <a role="button" data-toggle="collapse" data-parent="#accordion" href="#collapseGroups" aria-expanded="false" aria-controls="collapseGroups">
                            Challenge Groups
                        </a>
                    </h4>
                </div>
                <div id="collapseGroups" class="panel-collapse collapse" role="tabpanel" aria-labelledby="headingGroups">
                    <div class="panel-body">
                        The following group(s) contain this challenge:
                        <ul>
                            @foreach (var group in Model.Groups)
                            {
                                @if (Model.CanEditGroups)
                                {
                                    <li>
                                        <a asp-action="EditGroup" asp-route-id="@group.Id" target="_blank">@group.Name</a>
                                    </li>
                                }
                                else
                                {
                                    <li>
                                        <a asp-area="" asp-controller="Challenges" asp-action="List" asp-route-id="@group.Stub" target="_blank">@group.Name</a>
                                    </li>
                                }
                            }
                        </ul>
                    </div>
                </div>
            </div>
        </div>
    }

    @if (Model.RelatedEvents.Count > 0)
    {
        <div class="panel-group row-spacing" id="accordion" role="tablist" aria-multiselectable="true">
            <div class="panel panel-default">
                <div class="panel-heading" role="tab" id="headingEvents">
                    <h4 class="panel-title">
                        <a role="button" data-toggle="collapse" data-parent="#accordion" href="#collapseEvents" aria-expanded="false" aria-controls="collapseEvents">
                            Related Events
                        </a>
                    </h4>
                </div>
                <div id="collapseEvents" class="panel-collapse collapse" role="tabpanel" aria-labelledby="headingEvents">
                    <div class="panel-body">
                        The following event(s) are related to this challenge:
                        <ul>
                            @foreach (var graEvent in Model.RelatedEvents)
                            {
                                @if (Model.CanManageEvents)
                                {
                                    <li>
                                        <a asp-controller="Events" asp-action="Edit" asp-route-id="@graEvent.Id" target="_blank">@graEvent.Name</a>
                                    </li>
                                }
                                else
                                {
                                    <li>
                                        <a asp-area="" asp-controller="Events" asp-action="Detail" asp-route-id="@graEvent.Id" target="_blank">@graEvent.Id</a>
                                    </li>
                                }
                            }
                        </ul>
                    </div>
                </div>
            </div>
        </div>
    }

    @if (Model.DependentTriggers.Count > 0)
    {
        <div class="panel-group row-spacing" id="accordion" role="tablist" aria-multiselectable="true">
            <div class="panel panel-default">
                <div class="panel-heading" role="tab" id="headingOne">
                    <h4 class="panel-title">
                        <a role="button" data-toggle="collapse" data-parent="#accordion" href="#collapseOne" aria-expanded="false" aria-controls="collapseOne">
                            Dependent Triggers
                        </a>
                    </h4>
                </div>
                <div id="collapseOne" class="panel-collapse collapse" role="tabpanel" aria-labelledby="headingOne">
                    <div class="panel-body">
                        The following trigger(s) depend on this challenge:
                        <ul>
                            @foreach (var trigger in Model.DependentTriggers)
                            {
                                @if (Model.CanViewTriggers)
                                {
                                    <li>
                                        <a asp-controller="Triggers" asp-action="Edit" asp-route-id="@trigger.Id" target="_blank">@trigger.Name</a>
                                    </li>
                                }
                                else
                                {
                                    <li>
                                        @trigger.Name
                                    </li>
                                }
                            }
                        </ul>
                    </div>
                </div>
            </div>
        </div>
    }

    <div class="row row-spacing">
        <div class="col-xs-12">
            <label class="control-label">Status</label>
            <input class="form-control" value=@(Model.Challenge.IsActive ? "Active" : "Inactive" ) ignore disabled />
        </div>
    </div>

    <div class="row row-spacing">
        <div class="col-xs-12">
            <label asp-for="Challenge.Name" class="control-label"></label>
            <input asp-for="Challenge.Name" class="form-control ignore" />
            <span asp-validation-for="Challenge.Name" class="text-danger"></span>
        </div>
    </div>

    <div class="row row-spacing">
        <div class="col-xs-12">
            <label asp-for="Challenge.Description" class="control-label"></label>
            <textarea asp-for="Challenge.Description" class="form-control ignore"> </textarea>
            <span asp-validation-for="Challenge.Description" class="text-danger"></span>
        </div>
    </div>

    <div class="row">
        <div class="col-xs-12 col-sm-6 row-spacing">
            <label asp-for="Challenge.PointsAwarded" class="control-label"></label>
            <label style="font-size: 12px;">@Model.MaxPointsMessage</label>
            <input asp-for="Challenge.PointsAwarded" type="number" min="1" class="form-control ignore" />
            <span asp-validation-for="Challenge.PointsAwarded" class="text-danger"></span>
        </div>

        <div class="col-xs-12 col-sm-6 row-spacing">
            <label asp-for="Challenge.TasksToComplete" class="control-label"></label>
            <input asp-for="Challenge.TasksToComplete" type="number" min="1" class="form-control ignore" />
            <span asp-validation-for="Challenge.TasksToComplete" class="text-danger"></span>
        </div>
    </div>

    <div class="row row-spacing">
        <div class="col-xs-12">
            <label asp-for="Challenge.CategoryIds" class="control-label"></label>
            <input asp-for="CategoryPlaceholder" class="form-control" />
            <select asp-for="Challenge.CategoryIds" asp-items="Model.CategoryList" class="form-control hidden" multiple="multiple"></select>
            <span asp-validation-for="Challenge.CategoryIds" class="text-danger"></span>
        </div>
    </div>

    <div class="row row-spacing">
        <div class="col-xs-12">
            <label asp-for="Challenge.LimitToSystemId" class="control-label"></label>
            <select asp-for="Challenge.LimitToSystemId" asp-items="Model.SystemList" class="form-control">
                <option value="">No</option>
            </select>
            <span asp-validation-for="Challenge.LimitToSystemId" class="text-danger"></span>
        </div>
    </div>

    <div class="row row-spacing">
        <div class="col-xs-12">
            <label asp-for="Challenge.LimitToBranchId" class="control-label"></label>
            <select asp-for="Challenge.LimitToBranchId" asp-items="Model.BranchList" class="form-control">
                <option value="">No</option>
            </select>
            <span asp-validation-for="Challenge.LimitToBranchId" class="text-danger"></span>
        </div>
    </div>

    <div class="row row-spacing">
        <div class="col-xs-12">
            <label asp-for="Challenge.LimitToProgramId" class="control-label"></label>
            <select asp-for="Challenge.LimitToProgramId" asp-items="Model.ProgramList" class="form-control">
                <option value="">No</option>
            </select>
            <span asp-validation-for="Challenge.LimitToProgramId" class="text-danger"></span>
        </div>
    </div>

    <div class="row row-spacing">
        <div class="col-xs-12">
            @if (!string.IsNullOrWhiteSpace(Model.BadgePath))
            {
                <label class="control-label">Edit badge image</label>
            }
            else
            {
                <label class="control-label">Add a badge</label>
            }
        </div>

        <div class="col-xs-12 col-sm-4 col-md-3">

            @if (!string.IsNullOrWhiteSpace(Model.BadgePath))
            {
                <input asp-for="BadgePath" type="hidden" />
                <img id="badgeImage" class="img-thumbnail badge-lg"
                     src="~/@Model.BadgePath?@DateTime.Now.ToString(" yyMMddHHmmss")"
                     asp-append-version="true" />
            }
            else
            {
                <img id="badgeImage" class="img-thumbnail badge-lg" src="@Model.BadgeMakerImage" style="height:210px;" />
            }
        </div>

        <div class="col-xs-12 col-sm-8 col-md-9">
            <ul class="nav nav-tabs gra-nav-tabs" role="tablist">
                <li role="presentation" class=@(Model.UseBadgeMaker ? "active" : "" )>
                    <a id="badgeTab" href="#badge" aria-controls="badge" role="tab" data-toggle="tab">Badge Maker</a>
                </li>
                <li role="presentation" class=@(Model.UseBadgeMaker ? "" : "active" )>
                    <a id="uploadTab" href="#upload" aria-controls="upload" role="tab" data-toggle="tab">Upload an Image</a>
                </li>
            </ul>

            <div class="tab-content">
                <div role="tabpanel" class="tab-pane gra-tab-pane @(Model.UseBadgeMaker ? " active" : "" )" id="badge">
                    <button id="openMaker" type="button" class="btn btn-default">
                        <span class="fa fa-certificate"></span> Create a Badge
                    </button>
                </div>

                <div role="tabpanel" class="tab-pane gra-tab-pane @(Model.UseBadgeMaker ? " " : " active")" id="upload">
                    <div class="input-group">
                        <label class="input-group-btn">
                            <span class="btn btn-default badgeFile">
                                <span class="fa fa-file-image-o"></span> Select an image<input type="file" name="BadgeUploadImage" id="BadgeUploadImage" accept=".png,.jpg,.jpeg" style="display: none;" />
                            </span>
                        </label>
                        <input type="text" class="form-control" readonly id="selectedFile">
                    </div>
                    <div>
                        <span asp-validation-for="BadgeUploadImage" class="text-danger"></span>
                    </div>
                    <button id="clearFile" class="btn btn-default" type="button" style="margin-top: 0.5em;"><span class="fa fa-ban"></span> Clear file selection</button>
                </div>
            </div>
        </div>
    </div>

    <hr />

    <div class="form-group">
        <a asp-action="Index" class="btn btn-default">Return to List</a>
        <button type="submit" asp-action="Edit" name="Submit" value="Edit" class="btn btn-primary btn-spinner">
            <span class="buttonText">Save Changes</span>
            <span class="fa fa-spinner fa-pulse fa-lg fa-fw hidden"></span>
        </button>
        @if (Model.CanActivate)
        {
            <input asp-for="CanActivate" type="hidden" />
            <button type="submit" asp-action="Edit" name="Submit" value="Activate" class="btn btn-success btn-spinner">
                <span class="buttonText">Save and Activate</span>
                <span class="fa fa-spinner fa-pulse fa-lg fa-fw hidden"></span>
            </button>
        }
    </div>

    <h3>
        Tasks
    </h3>

    <table class="table table-condensed table-bordered link-table">
        <thead>
            <tr>
                <th>Title</th>
                <th>Type</th>
                <th width="107">&nbsp;</th>
            </tr>
        </thead>
        @if (Model.Challenge.Tasks != null)
        {
            @foreach (var task in Model.Challenge.Tasks)
            {
                <tr>
                    <td class="td-class">
                        <input type="submit" asp-action="OpenModifyTask" asp-route-taskId="@task.Id" hidden />

                        @if (!string.IsNullOrWhiteSpace(task.Description))
                        {
                            <a class="rowlink"></a>
                            <div class="task-description">
                                @Html.Raw(task.Description)
                                @if (!string.IsNullOrWhiteSpace(task.Filename))
                                {
                                    <a href="@task.Filename" target="_blank" class="btn btn-xs btn-default on-top" style="margin-top:5px;">
                                        <span class="fa fa-file-o"></span>
                                        View Attachment
                                    </a>
                                }
                            </div>
                        }
                        else
                        {
                            <a class="rowlink">
                                @task.Title
                            </a>
                        }
                    </td>
                    <td>@task.ChallengeTaskType</td>
                    <td class="on-top" style="white-space:nowrap;">
                        <button type="button" data-id="@task.Id" class="btn btn-default btn-xs decreaseTaskSort" style="width:25px;" disabled="@(task == Model.Challenge.Tasks.First() ? " disabled" : null)">
                            <span class="fa fa-arrow-up"></span>
                        </button>
                        <button type="button" data-id="@task.Id" class="btn btn-default btn-xs increaseTaskSort" style="width:25px;" disabled="@(task == Model.Challenge.Tasks.Last() ? " disabled" : null)">
                            <span class="fa fa-arrow-down"></span>
                        </button>
                        <button type="button"
                                class="btn btn-danger btn-xs"
                                style="margin-left:16px;"
                                data-toggle="modal"
                                data-target="#deleteModal"
                                data-id="@task.Id"
                                data-name="@task.Title">
                            <span class="fa fa-remove" aria-hidden="true"></span>
                        </button>
                    </td>
                </tr>
            }
        }
    </table>

    <button type="submit" formmethod="post" asp-action="OpenAddTask" asp-route-id="@Model.Challenge.Id" class="btn btn-primary">
        <span class="buttonText">Add Task</span>
    </button>

</form>

@section scripts {
    @if (Model.AddTask || Model.Task != null)
    {
        <script src="~/lib/commonmark/dist/commonmark.min.js" asp-append-version="true"></script>
        <script src="~/js/WMD.min.js" asp-append-version="true"></script>
    }

    <script>
        var decreaseTaskUrl = "@Url.Action("DecreaseTaskSort")";
        var increaseTaskUrl = "@Url.Action("IncreaseTaskSort")";

        $("#CategoryPlaceholder").remove();
        $("#Challenge_CategoryIds").multiselect({
            nonSelectedText: "",
            buttonClass: "form-control",
            buttonWidth: "100%",
            disableIfEmpty: true
        });

        $(document).ready(function () {

            @if (Model.AddTask || Model.Task != null)
            {
                <text>
                var editor = new Markdown.Editor({ allowUploads: true, allowImages: false });
                editor.run();

                var observer = new MutationObserver(function (mutations) {
                    mutations.forEach(function (mutation) {
                        if (mutation.addedNodes.length > 0) {
                            if (mutation.addedNodes[0].className == "wmd-prompt-background") {
                                $(document).off("focusin.bs.modal")
                            }
                        }
                        if (mutation.removedNodes.length > 0) {
                            if (mutation.removedNodes[0].className == "wmd-prompt-background") {
                                $(document).on("focusin.bs.modal")
                            }
                        }
                    });
                });
                var mutationTarget = document.querySelector("body");
                var mutationConfig = { childList: true };

                observer.observe(mutationTarget, mutationConfig);
                </text>
                if (Model.AddTask)
                {
                    <text>
                        $("#addModal").modal({
                            show: true,
                            keyboard: false
                        });
                    </text>
                }
                if (Model.Task != null)
                {
                    <text>
                        $("#editModal").modal({
                            show: true,
                            keyboard: false
                        });
                    </text>
                }
            }

            $('.td-class').each(function() {
                $(this).children('a.rowlink').height($(this).height() + 11);
            });

            $('#BadgeUploadImage:file').on('fileselect', function (event, numFiles, label) {
                var input = $(this).parents('.input-group').find(':text'),
                log = numFiles > 1 ? numFiles = ' files selected' : label;

                if (input.length)
                {
                    input.val(log);
                    $('.badgeFile').removeClass('btn-default');
                    $('.badgeFile').addClass('btn-success');
                    $("#badgeImage").removeAttr("src");
                    $("#badgeImage").height(200);
                    $("#BadgeMakerImage").val("");
                }
                else
                {
                    input.val('');
                    $('.badgeFile').addClass('btn-default');
                    $('.badgeFile').removeClass('btn-success');
                }
            });

            $('#clearFile').on("click", function() {
                $('#BadgeUploadImage').val('');
                $('.badgeFile').addClass('btn-default');
                $('.badgeFile').removeClass('btn-success');
                $('#selectedFile').val('');
            });

            $(document).on('change', ':file', function() {
                var input = $(this),
                    numFiles = input.get(0).files ? input.get(0).files.length : 1,
                    label = input.val().replace(/\\/g, '/').replace(/.*\//, '');
                    input.trigger('fileselect', [numFiles, label]);
            });
        });

        $(window).resize(function() {
            $('.td-class').each(function() {
                $(this).children('a.rowlink').height($(this).height() + 11);
            });
        });

        $.validator.setDefaults({
            ignore: ".ignore"
        });

        $('.rowlink').on('click', function() {
            $(this).siblings('input:first').click();
        });

        $('#deleteModal').on('show.bs.modal', function (event) {
            var button = $(event.relatedTarget);
            var id = button.data('id');
            var name = button.data('name');
            var modal = $(this);
            modal.find('#modal-text').text('Are you sure you wish to delete the task "' + name + '" ?');
            modal.find('#DeleteTask').attr("formaction", function (i, val) {
                return val + '/' + id;
            });
        });
        $('#addModal, #editModal').on('hidden.bs.modal', function() {
            var form = $(this).parents('form:first');
            form.attr('action', '@Url.Action("CloseTask")');
            form.validate().cancelSubmit = true;
            form.submit();
        });

        $("#Challenge_LimitToSystemId").on("change", function() {
                var systemId = $(this).val();
                var branchList = $("#Challenge_LimitToBranchId");
                var branchId = branchList.val();
                var url = "@Url.Action("GetBranches", "Lookup", new { Area = string.Empty })";

            $.getJSON(url, { systemId: systemId, branchId: branchId, listAll: "true", prioritize: "true" }, function(response) {
                    branchList.empty();
                    branchList.append(new Option("No", ""));
                $.each(response, function(index, item) {
                        branchList.append(new Option(item.text, item.value, item.selected, item.selected))
                });
            });
        });

        $("#badgeTab").on('show.bs.tab', function() {
            $("#UseBadgeMaker").val("true");
        });

        $("#uploadTab").on('show.bs.tab', function() {
            $("#UseBadgeMaker").val("false");
        });

        $("#openMaker").on("click", function() {
            $("#badgeMaker").attr("src", "@Html.Raw(@Model.BadgeMakerUrl)");
            $("#badgeModal").modal("show");
        });

        $(window).on("message", function(e) {
            $("#badgeModal").modal("hide");
                var data = e.originalEvent.data;
            $("#badgeImage").attr("src", data);
            $("#badgeImage").height(200);
            $("#BadgeMakerImage").val(data);
            $('#BadgeUploadImage').val('');
            $('.btn-file').addClass('btn-default');
            $('.btn-file').removeClass('btn-success');
            $('#selectedFile').val('');
        });

        $("#actionTab").on('show.bs.tab', function () {
            $("#Task_ChallengeTaskType").val("@ChallengeTaskType.Action");
            $(".actionTitle").removeAttr("disabled");
            $("#bookTitle").attr("disabled", "disabled");
            $("#bookFile").attr("disabled", "disabled");
        });

        $("#bookTab").on('show.bs.tab', function () {
            $("#Task_ChallengeTaskType").val("@ChallengeTaskType.Book");
            $("#bookTitle").removeAttr("disabled");
            $("#bookFile").removeAttr("disabled");
            $(".actionTitle").attr("disabled", "disabled");
            $("#actionFile").attr("disabled", "disabled");
        });

        $(".taskFileButton").on("click", function () {
            $("#TaskUploadFile").trigger("click");
        });

        $("#TaskUploadFile:file").on("fileselect", function (event, numFiles, label) {
            var input = $(this).parent().find(".selectedTaskFile"),
                log = numFiles > 1 ? numFiles = " files selected" : label;

            if (input.length) {
                input.val(log);
                $(".taskFileButton").removeClass("btn-default");
                $(".taskFileButton").addClass("btn-success");
            }
            else {
                input.val("");
                $(".taskFileButton").addClass("btn-default");
                $(".taskFileButton").removeClass("btn-success");
            }
        });

        $(".clearTaskFile").on("click", function () {
            $("#Task_Filename").val("");
            $("#TaskUploadFile").val("");
            $(".taskFileButton").addClass("btn-default");
            $(".taskFileButton").removeClass("btn-success");
            $(".selectedTaskFile").val("");
        });

        $(".decreaseTaskSort").on("click", function () {
            var taskButton = $(this);
            var taskId = taskButton.data("id");
            var child = taskButton.children("span");
            if (child.hasClass("fa-spinner") == false) {
                child.removeClass("fa-arrow-up").addClass("fa-spinner fa-pulse");
                $.post(decreaseTaskUrl, { id: taskId }, function (response) {
                    setTimeout(function () {
                        child.removeClass("fa-spinner fa-pulse").addClass("fa-arrow-up");
                        if (response == true) {
                            var taskDiv = taskButton.parent().parent();
                            var prevDiv = taskDiv.prev();
                            taskDiv.insertBefore(prevDiv);
                            if (taskDiv.prev().length == 0) {
                                taskDiv.find(".decreaseTaskSort").attr("disabled", "disabled");
                            }
                            taskDiv.find(".increaseTaskSort").removeAttr("disabled");
                            if (prevDiv.next().length == 0) {
                                prevDiv.find(".increaseTaskSort").attr("disabled", "disabled");
                            }
                            prevDiv.find(".decreaseTaskSort").removeAttr("disabled");
                        }
                        else {
                            alert("Error changing task position.");
                        }
                    }, 200);
                });
            }
        })

        $(".increaseTaskSort").on("click", function () {
            var taskButton = $(this);
            var taskId = taskButton.data("id");
            var child = taskButton.children("span");
            if (child.hasClass("fa-spinner") == false) {
                child.removeClass("fa-arrow-down").addClass("fa-spinner fa-pulse");
                $.post(increaseTaskUrl, { id: taskId }, function (response) {
                    setTimeout(function () {
                        child.removeClass("fa-spinner fa-pulse").addClass("fa-arrow-down");
                        if (response == true) {
                            var taskDiv = taskButton.parent().parent();
                            var nextDiv = taskDiv.next();
                            taskDiv.insertAfter(nextDiv);
                            if (taskDiv.next().length == 0) {
                                taskDiv.find(".increaseTaskSort").attr("disabled", "disabled");
                            }
                            taskDiv.find(".decreaseTaskSort").removeAttr("disabled");
                            if (nextDiv.prev().length == 0) {
                                nextDiv.find(".decreaseTaskSort").attr("disabled", "disabled");
                            }
                            nextDiv.find(".increaseTaskSort").removeAttr("disabled");
                        }
                        else {
                            alert("Error changing task position.");
                        }
                    }, 200);
                });
            }
        })

    </script>
}