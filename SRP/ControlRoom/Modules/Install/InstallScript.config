IF  EXISTS (SELECT * FROM dbo.sysobjects WHERE id = OBJECT_ID(N'[DF_Avatar_LastModDate]') AND type = 'D')
BEGIN
ALTER TABLE [dbo].[Avatar] DROP CONSTRAINT [DF_Avatar_LastModDate]
END

GO

IF  EXISTS (SELECT * FROM dbo.sysobjects WHERE id = OBJECT_ID(N'[DF_Avatar_LastModUser]') AND type = 'D')
BEGIN
ALTER TABLE [dbo].[Avatar] DROP CONSTRAINT [DF_Avatar_LastModUser]
END

GO

IF  EXISTS (SELECT * FROM dbo.sysobjects WHERE id = OBJECT_ID(N'[DF_Avatar_AddedDate]') AND type = 'D')
BEGIN
ALTER TABLE [dbo].[Avatar] DROP CONSTRAINT [DF_Avatar_AddedDate]
END

GO

IF  EXISTS (SELECT * FROM dbo.sysobjects WHERE id = OBJECT_ID(N'[DF_Avatar_AddedUser]') AND type = 'D')
BEGIN
ALTER TABLE [dbo].[Avatar] DROP CONSTRAINT [DF_Avatar_AddedUser]
END

GO

IF  EXISTS (SELECT * FROM dbo.sysobjects WHERE id = OBJECT_ID(N'[DF_Award_BadgeID]') AND type = 'D')
BEGIN
ALTER TABLE [dbo].[Award] DROP CONSTRAINT [DF_Award_BadgeID]
END

GO

IF  EXISTS (SELECT * FROM dbo.sysobjects WHERE id = OBJECT_ID(N'[DF_Award_NumPoints]') AND type = 'D')
BEGIN
ALTER TABLE [dbo].[Award] DROP CONSTRAINT [DF_Award_NumPoints]
END

GO

IF  EXISTS (SELECT * FROM dbo.sysobjects WHERE id = OBJECT_ID(N'[DF_Award_BranchID]') AND type = 'D')
BEGIN
ALTER TABLE [dbo].[Award] DROP CONSTRAINT [DF_Award_BranchID]
END

GO

IF  EXISTS (SELECT * FROM dbo.sysobjects WHERE id = OBJECT_ID(N'[DF_Award_ProgramID]') AND type = 'D')
BEGIN
ALTER TABLE [dbo].[Award] DROP CONSTRAINT [DF_Award_ProgramID]
END

GO

IF  EXISTS (SELECT * FROM dbo.sysobjects WHERE id = OBJECT_ID(N'[DF_Award_District]') AND type = 'D')
BEGIN
ALTER TABLE [dbo].[Award] DROP CONSTRAINT [DF_Award_District]
END

GO

IF  EXISTS (SELECT * FROM dbo.sysobjects WHERE id = OBJECT_ID(N'[DF_Award_SchoolName]') AND type = 'D')
BEGIN
ALTER TABLE [dbo].[Award] DROP CONSTRAINT [DF_Award_SchoolName]
END

GO

IF  EXISTS (SELECT * FROM dbo.sysobjects WHERE id = OBJECT_ID(N'[DF_Award_BadgeList]') AND type = 'D')
BEGIN
ALTER TABLE [dbo].[Award] DROP CONSTRAINT [DF_Award_BadgeList]
END

GO

IF  EXISTS (SELECT * FROM dbo.sysobjects WHERE id = OBJECT_ID(N'[DF_Award_LastModDate]') AND type = 'D')
BEGIN
ALTER TABLE [dbo].[Award] DROP CONSTRAINT [DF_Award_LastModDate]
END

GO

IF  EXISTS (SELECT * FROM dbo.sysobjects WHERE id = OBJECT_ID(N'[DF_Award_LastModUser]') AND type = 'D')
BEGIN
ALTER TABLE [dbo].[Award] DROP CONSTRAINT [DF_Award_LastModUser]
END

GO

IF  EXISTS (SELECT * FROM dbo.sysobjects WHERE id = OBJECT_ID(N'[DF_Award_AddedDate]') AND type = 'D')
BEGIN
ALTER TABLE [dbo].[Award] DROP CONSTRAINT [DF_Award_AddedDate]
END

GO

IF  EXISTS (SELECT * FROM dbo.sysobjects WHERE id = OBJECT_ID(N'[DF_Award_AddedUser]') AND type = 'D')
BEGIN
ALTER TABLE [dbo].[Award] DROP CONSTRAINT [DF_Award_AddedUser]
END

GO

IF  EXISTS (SELECT * FROM dbo.sysobjects WHERE id = OBJECT_ID(N'[DF_Badge_AssignProgramPrizeCode]') AND type = 'D')
BEGIN
ALTER TABLE [dbo].[Badge] DROP CONSTRAINT [DF_Badge_AssignProgramPrizeCode]
END

GO

IF  EXISTS (SELECT * FROM dbo.sysobjects WHERE id = OBJECT_ID(N'[DF_Badge_LastModDate]') AND type = 'D')
BEGIN
ALTER TABLE [dbo].[Badge] DROP CONSTRAINT [DF_Badge_LastModDate]
END

GO

IF  EXISTS (SELECT * FROM dbo.sysobjects WHERE id = OBJECT_ID(N'[DF_Badge_LastModUser]') AND type = 'D')
BEGIN
ALTER TABLE [dbo].[Badge] DROP CONSTRAINT [DF_Badge_LastModUser]
END

GO

IF  EXISTS (SELECT * FROM dbo.sysobjects WHERE id = OBJECT_ID(N'[DF_Badge_AddedDate]') AND type = 'D')
BEGIN
ALTER TABLE [dbo].[Badge] DROP CONSTRAINT [DF_Badge_AddedDate]
END

GO

IF  EXISTS (SELECT * FROM dbo.sysobjects WHERE id = OBJECT_ID(N'[DF_Badge_AddedUser]') AND type = 'D')
BEGIN
ALTER TABLE [dbo].[Badge] DROP CONSTRAINT [DF_Badge_AddedUser]
END

GO

IF  EXISTS (SELECT * FROM dbo.sysobjects WHERE id = OBJECT_ID(N'[DF_BookList_LastModDate]') AND type = 'D')
BEGIN
ALTER TABLE [dbo].[BookList] DROP CONSTRAINT [DF_BookList_LastModDate]
END

GO

IF  EXISTS (SELECT * FROM dbo.sysobjects WHERE id = OBJECT_ID(N'[DF_BookList_LastModUser]') AND type = 'D')
BEGIN
ALTER TABLE [dbo].[BookList] DROP CONSTRAINT [DF_BookList_LastModUser]
END

GO

IF  EXISTS (SELECT * FROM dbo.sysobjects WHERE id = OBJECT_ID(N'[DF_BookList_AddedDate]') AND type = 'D')
BEGIN
ALTER TABLE [dbo].[BookList] DROP CONSTRAINT [DF_BookList_AddedDate]
END

GO

IF  EXISTS (SELECT * FROM dbo.sysobjects WHERE id = OBJECT_ID(N'[DF_BookList_AddedUser]') AND type = 'D')
BEGIN
ALTER TABLE [dbo].[BookList] DROP CONSTRAINT [DF_BookList_AddedUser]
END

GO

IF  EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID(N'[dbo].[FK_BookListBooks_BookList]') AND parent_object_id = OBJECT_ID(N'[dbo].[BookListBooks]'))
ALTER TABLE [dbo].[BookListBooks] DROP CONSTRAINT [FK_BookListBooks_BookList]
GO

IF  EXISTS (SELECT * FROM dbo.sysobjects WHERE id = OBJECT_ID(N'[DF_BookListBooks_LastModDate]') AND type = 'D')
BEGIN
ALTER TABLE [dbo].[BookListBooks] DROP CONSTRAINT [DF_BookListBooks_LastModDate]
END

GO

IF  EXISTS (SELECT * FROM dbo.sysobjects WHERE id = OBJECT_ID(N'[DF_BookListBooks_LastModUser]') AND type = 'D')
BEGIN
ALTER TABLE [dbo].[BookListBooks] DROP CONSTRAINT [DF_BookListBooks_LastModUser]
END

GO

IF  EXISTS (SELECT * FROM dbo.sysobjects WHERE id = OBJECT_ID(N'[DF_BookListBooks_AddedDate]') AND type = 'D')
BEGIN
ALTER TABLE [dbo].[BookListBooks] DROP CONSTRAINT [DF_BookListBooks_AddedDate]
END

GO

IF  EXISTS (SELECT * FROM dbo.sysobjects WHERE id = OBJECT_ID(N'[DF_BookListBooks_AddedUser]') AND type = 'D')
BEGIN
ALTER TABLE [dbo].[BookListBooks] DROP CONSTRAINT [DF_BookListBooks_AddedUser]
END

GO

IF  EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID(N'[dbo].[FK_Code_CodeType]') AND parent_object_id = OBJECT_ID(N'[dbo].[Code]'))
ALTER TABLE [dbo].[Code] DROP CONSTRAINT [FK_Code_CodeType]
GO

IF  EXISTS (SELECT * FROM dbo.sysobjects WHERE id = OBJECT_ID(N'[DF_CodeType_isSystem]') AND type = 'D')
BEGIN
ALTER TABLE [dbo].[CodeType] DROP CONSTRAINT [DF_CodeType_isSystem]
END

GO

IF  EXISTS (SELECT * FROM dbo.sysobjects WHERE id = OBJECT_ID(N'[DF_CustomEventFields_Use1]') AND type = 'D')
BEGIN
ALTER TABLE [dbo].[CustomEventFields] DROP CONSTRAINT [DF_CustomEventFields_Use1]
END

GO

IF  EXISTS (SELECT * FROM dbo.sysobjects WHERE id = OBJECT_ID(N'[DF_CustomEventFields_Use2]') AND type = 'D')
BEGIN
ALTER TABLE [dbo].[CustomEventFields] DROP CONSTRAINT [DF_CustomEventFields_Use2]
END

GO

IF  EXISTS (SELECT * FROM dbo.sysobjects WHERE id = OBJECT_ID(N'[DF_CustomEventFields_Use3]') AND type = 'D')
BEGIN
ALTER TABLE [dbo].[CustomEventFields] DROP CONSTRAINT [DF_CustomEventFields_Use3]
END

GO

IF  EXISTS (SELECT * FROM dbo.sysobjects WHERE id = OBJECT_ID(N'[DF_CustomEventFields_LastModDate]') AND type = 'D')
BEGIN
ALTER TABLE [dbo].[CustomEventFields] DROP CONSTRAINT [DF_CustomEventFields_LastModDate]
END

GO

IF  EXISTS (SELECT * FROM dbo.sysobjects WHERE id = OBJECT_ID(N'[DF_CustomEventFields_LastModUser]') AND type = 'D')
BEGIN
ALTER TABLE [dbo].[CustomEventFields] DROP CONSTRAINT [DF_CustomEventFields_LastModUser]
END

GO

IF  EXISTS (SELECT * FROM dbo.sysobjects WHERE id = OBJECT_ID(N'[DF_CustomEventFields_AddedDate]') AND type = 'D')
BEGIN
ALTER TABLE [dbo].[CustomEventFields] DROP CONSTRAINT [DF_CustomEventFields_AddedDate]
END

GO

IF  EXISTS (SELECT * FROM dbo.sysobjects WHERE id = OBJECT_ID(N'[DF_CustomEventFields_AddedUser]') AND type = 'D')
BEGIN
ALTER TABLE [dbo].[CustomEventFields] DROP CONSTRAINT [DF_CustomEventFields_AddedUser]
END

GO

IF  EXISTS (SELECT * FROM dbo.sysobjects WHERE id = OBJECT_ID(N'[DF_CustomRegistrationFields_Use1]') AND type = 'D')
BEGIN
ALTER TABLE [dbo].[CustomRegistrationFields] DROP CONSTRAINT [DF_CustomRegistrationFields_Use1]
END

GO

IF  EXISTS (SELECT * FROM dbo.sysobjects WHERE id = OBJECT_ID(N'[DF_CustomRegistrationFields_Use2]') AND type = 'D')
BEGIN
ALTER TABLE [dbo].[CustomRegistrationFields] DROP CONSTRAINT [DF_CustomRegistrationFields_Use2]
END

GO

IF  EXISTS (SELECT * FROM dbo.sysobjects WHERE id = OBJECT_ID(N'[DF_CustomRegistrationFields_Use3]') AND type = 'D')
BEGIN
ALTER TABLE [dbo].[CustomRegistrationFields] DROP CONSTRAINT [DF_CustomRegistrationFields_Use3]
END

GO

IF  EXISTS (SELECT * FROM dbo.sysobjects WHERE id = OBJECT_ID(N'[DF_CustomRegistrationFields_Use4]') AND type = 'D')
BEGIN
ALTER TABLE [dbo].[CustomRegistrationFields] DROP CONSTRAINT [DF_CustomRegistrationFields_Use4]
END

GO

IF  EXISTS (SELECT * FROM dbo.sysobjects WHERE id = OBJECT_ID(N'[DF_CustomRegistrationFields_Use5]') AND type = 'D')
BEGIN
ALTER TABLE [dbo].[CustomRegistrationFields] DROP CONSTRAINT [DF_CustomRegistrationFields_Use5]
END

GO

IF  EXISTS (SELECT * FROM dbo.sysobjects WHERE id = OBJECT_ID(N'[DF_CustomRegistrationFields_LastModDate]') AND type = 'D')
BEGIN
ALTER TABLE [dbo].[CustomRegistrationFields] DROP CONSTRAINT [DF_CustomRegistrationFields_LastModDate]
END

GO

IF  EXISTS (SELECT * FROM dbo.sysobjects WHERE id = OBJECT_ID(N'[DF_CustomRegistrationFields_LastModUser]') AND type = 'D')
BEGIN
ALTER TABLE [dbo].[CustomRegistrationFields] DROP CONSTRAINT [DF_CustomRegistrationFields_LastModUser]
END

GO

IF  EXISTS (SELECT * FROM dbo.sysobjects WHERE id = OBJECT_ID(N'[DF_CustomRegistrationFields_AddedDate]') AND type = 'D')
BEGIN
ALTER TABLE [dbo].[CustomRegistrationFields] DROP CONSTRAINT [DF_CustomRegistrationFields_AddedDate]
END

GO

IF  EXISTS (SELECT * FROM dbo.sysobjects WHERE id = OBJECT_ID(N'[DF_CustomRegistrationFields_AddedUser]') AND type = 'D')
BEGIN
ALTER TABLE [dbo].[CustomRegistrationFields] DROP CONSTRAINT [DF_CustomRegistrationFields_AddedUser]
END

GO

IF  EXISTS (SELECT * FROM dbo.sysobjects WHERE id = OBJECT_ID(N'[DF_Event_LastModDate]') AND type = 'D')
BEGIN
ALTER TABLE [dbo].[Event] DROP CONSTRAINT [DF_Event_LastModDate]
END

GO

IF  EXISTS (SELECT * FROM dbo.sysobjects WHERE id = OBJECT_ID(N'[DF_Event_LastModUser]') AND type = 'D')
BEGIN
ALTER TABLE [dbo].[Event] DROP CONSTRAINT [DF_Event_LastModUser]
END

GO

IF  EXISTS (SELECT * FROM dbo.sysobjects WHERE id = OBJECT_ID(N'[DF_Event_AddedDate]') AND type = 'D')
BEGIN
ALTER TABLE [dbo].[Event] DROP CONSTRAINT [DF_Event_AddedDate]
END

GO

IF  EXISTS (SELECT * FROM dbo.sysobjects WHERE id = OBJECT_ID(N'[DF_Event_AddedUser]') AND type = 'D')
BEGIN
ALTER TABLE [dbo].[Event] DROP CONSTRAINT [DF_Event_AddedUser]
END

GO

IF  EXISTS (SELECT * FROM dbo.sysobjects WHERE id = OBJECT_ID(N'[DF_GamePlayStats_Started]') AND type = 'D')
BEGIN
ALTER TABLE [dbo].[GamePlayStats] DROP CONSTRAINT [DF_GamePlayStats_Started]
END

GO

IF  EXISTS (SELECT * FROM dbo.sysobjects WHERE id = OBJECT_ID(N'[DF_GamePlayStats_CompletedPlay]') AND type = 'D')
BEGIN
ALTER TABLE [dbo].[GamePlayStats] DROP CONSTRAINT [DF_GamePlayStats_CompletedPlay]
END

GO

IF  EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID(N'[dbo].[FK_MGChooseAdv_Minigame]') AND parent_object_id = OBJECT_ID(N'[dbo].[MGChooseAdv]'))
ALTER TABLE [dbo].[MGChooseAdv] DROP CONSTRAINT [FK_MGChooseAdv_Minigame]
GO

IF  EXISTS (SELECT * FROM dbo.sysobjects WHERE id = OBJECT_ID(N'[DF_MGChooseAdv_LastModDate]') AND type = 'D')
BEGIN
ALTER TABLE [dbo].[MGChooseAdv] DROP CONSTRAINT [DF_MGChooseAdv_LastModDate]
END

GO

IF  EXISTS (SELECT * FROM dbo.sysobjects WHERE id = OBJECT_ID(N'[DF_MGChooseAdv_LastModUser]') AND type = 'D')
BEGIN
ALTER TABLE [dbo].[MGChooseAdv] DROP CONSTRAINT [DF_MGChooseAdv_LastModUser]
END

GO

IF  EXISTS (SELECT * FROM dbo.sysobjects WHERE id = OBJECT_ID(N'[DF_MGChooseAdv_AddedDate]') AND type = 'D')
BEGIN
ALTER TABLE [dbo].[MGChooseAdv] DROP CONSTRAINT [DF_MGChooseAdv_AddedDate]
END

GO

IF  EXISTS (SELECT * FROM dbo.sysobjects WHERE id = OBJECT_ID(N'[DF_MGChooseAdv_AddedUser]') AND type = 'D')
BEGIN
ALTER TABLE [dbo].[MGChooseAdv] DROP CONSTRAINT [DF_MGChooseAdv_AddedUser]
END

GO

IF  EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID(N'[dbo].[FK_MGChooseAdvSlides_MGChooseAdv]') AND parent_object_id = OBJECT_ID(N'[dbo].[MGChooseAdvSlides]'))
ALTER TABLE [dbo].[MGChooseAdvSlides] DROP CONSTRAINT [FK_MGChooseAdvSlides_MGChooseAdv]
GO

IF  EXISTS (SELECT * FROM dbo.sysobjects WHERE id = OBJECT_ID(N'[DF_MGChooseAdvSlides_Difficulty]') AND type = 'D')
BEGIN
ALTER TABLE [dbo].[MGChooseAdvSlides] DROP CONSTRAINT [DF_MGChooseAdvSlides_Difficulty]
END

GO

IF  EXISTS (SELECT * FROM dbo.sysobjects WHERE id = OBJECT_ID(N'[DF_MGChooseAdvSlides_StepNumber]') AND type = 'D')
BEGIN
ALTER TABLE [dbo].[MGChooseAdvSlides] DROP CONSTRAINT [DF_MGChooseAdvSlides_StepNumber]
END

GO

IF  EXISTS (SELECT * FROM dbo.sysobjects WHERE id = OBJECT_ID(N'[DF_MGChooseAdvSlides_LastModDate]') AND type = 'D')
BEGIN
ALTER TABLE [dbo].[MGChooseAdvSlides] DROP CONSTRAINT [DF_MGChooseAdvSlides_LastModDate]
END

GO

IF  EXISTS (SELECT * FROM dbo.sysobjects WHERE id = OBJECT_ID(N'[DF_MGChooseAdvSlides_LastModUser]') AND type = 'D')
BEGIN
ALTER TABLE [dbo].[MGChooseAdvSlides] DROP CONSTRAINT [DF_MGChooseAdvSlides_LastModUser]
END

GO

IF  EXISTS (SELECT * FROM dbo.sysobjects WHERE id = OBJECT_ID(N'[DF_MGChooseAdvSlides_AddedDate]') AND type = 'D')
BEGIN
ALTER TABLE [dbo].[MGChooseAdvSlides] DROP CONSTRAINT [DF_MGChooseAdvSlides_AddedDate]
END

GO

IF  EXISTS (SELECT * FROM dbo.sysobjects WHERE id = OBJECT_ID(N'[DF_MGChooseAdvSlides_AddedUser]') AND type = 'D')
BEGIN
ALTER TABLE [dbo].[MGChooseAdvSlides] DROP CONSTRAINT [DF_MGChooseAdvSlides_AddedUser]
END

GO

IF  EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID(N'[dbo].[FK_MGCodeBreaker_Minigame]') AND parent_object_id = OBJECT_ID(N'[dbo].[MGCodeBreaker]'))
ALTER TABLE [dbo].[MGCodeBreaker] DROP CONSTRAINT [FK_MGCodeBreaker_Minigame]
GO

IF  EXISTS (SELECT * FROM dbo.sysobjects WHERE id = OBJECT_ID(N'[DF_MGCodeBreaker_LastModDate]') AND type = 'D')
BEGIN
ALTER TABLE [dbo].[MGCodeBreaker] DROP CONSTRAINT [DF_MGCodeBreaker_LastModDate]
END

GO

IF  EXISTS (SELECT * FROM dbo.sysobjects WHERE id = OBJECT_ID(N'[DF_MGCodeBreaker_LastModUser]') AND type = 'D')
BEGIN
ALTER TABLE [dbo].[MGCodeBreaker] DROP CONSTRAINT [DF_MGCodeBreaker_LastModUser]
END

GO

IF  EXISTS (SELECT * FROM dbo.sysobjects WHERE id = OBJECT_ID(N'[DF_MGCodeBreaker_AddedDate]') AND type = 'D')
BEGIN
ALTER TABLE [dbo].[MGCodeBreaker] DROP CONSTRAINT [DF_MGCodeBreaker_AddedDate]
END

GO

IF  EXISTS (SELECT * FROM dbo.sysobjects WHERE id = OBJECT_ID(N'[DF_MGCodeBreaker_AddedUser]') AND type = 'D')
BEGIN
ALTER TABLE [dbo].[MGCodeBreaker] DROP CONSTRAINT [DF_MGCodeBreaker_AddedUser]
END

GO

IF  EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID(N'[dbo].[FK_MGCodeBreakerKey_MGCodeBreaker]') AND parent_object_id = OBJECT_ID(N'[dbo].[MGCodeBreakerKey]'))
ALTER TABLE [dbo].[MGCodeBreakerKey] DROP CONSTRAINT [FK_MGCodeBreakerKey_MGCodeBreaker]
GO

IF  EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID(N'[dbo].[FK_MGHiddenPic_Minigame]') AND parent_object_id = OBJECT_ID(N'[dbo].[MGHiddenPic]'))
ALTER TABLE [dbo].[MGHiddenPic] DROP CONSTRAINT [FK_MGHiddenPic_Minigame]
GO

IF  EXISTS (SELECT * FROM dbo.sysobjects WHERE id = OBJECT_ID(N'[DF_MGHiddenPic_LastModDate]') AND type = 'D')
BEGIN
ALTER TABLE [dbo].[MGHiddenPic] DROP CONSTRAINT [DF_MGHiddenPic_LastModDate]
END

GO

IF  EXISTS (SELECT * FROM dbo.sysobjects WHERE id = OBJECT_ID(N'[DF_MGHiddenPic_LastModUser]') AND type = 'D')
BEGIN
ALTER TABLE [dbo].[MGHiddenPic] DROP CONSTRAINT [DF_MGHiddenPic_LastModUser]
END

GO

IF  EXISTS (SELECT * FROM dbo.sysobjects WHERE id = OBJECT_ID(N'[DF_MGHiddenPic_AddedDate]') AND type = 'D')
BEGIN
ALTER TABLE [dbo].[MGHiddenPic] DROP CONSTRAINT [DF_MGHiddenPic_AddedDate]
END

GO

IF  EXISTS (SELECT * FROM dbo.sysobjects WHERE id = OBJECT_ID(N'[DF_MGHiddenPic_AddedUser]') AND type = 'D')
BEGIN
ALTER TABLE [dbo].[MGHiddenPic] DROP CONSTRAINT [DF_MGHiddenPic_AddedUser]
END

GO

IF  EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID(N'[dbo].[FK_MGHiddenPicBk_MGHiddenPic1]') AND parent_object_id = OBJECT_ID(N'[dbo].[MGHiddenPicBk]'))
ALTER TABLE [dbo].[MGHiddenPicBk] DROP CONSTRAINT [FK_MGHiddenPicBk_MGHiddenPic1]
GO

IF  EXISTS (SELECT * FROM dbo.sysobjects WHERE id = OBJECT_ID(N'[DF_MGHiddenPicBk_LastModDate]') AND type = 'D')
BEGIN
ALTER TABLE [dbo].[MGHiddenPicBk] DROP CONSTRAINT [DF_MGHiddenPicBk_LastModDate]
END

GO

IF  EXISTS (SELECT * FROM dbo.sysobjects WHERE id = OBJECT_ID(N'[DF_MGHiddenPicBk_LastModUser]') AND type = 'D')
BEGIN
ALTER TABLE [dbo].[MGHiddenPicBk] DROP CONSTRAINT [DF_MGHiddenPicBk_LastModUser]
END

GO

IF  EXISTS (SELECT * FROM dbo.sysobjects WHERE id = OBJECT_ID(N'[DF_MGHiddenPicBk_AddedDate]') AND type = 'D')
BEGIN
ALTER TABLE [dbo].[MGHiddenPicBk] DROP CONSTRAINT [DF_MGHiddenPicBk_AddedDate]
END

GO

IF  EXISTS (SELECT * FROM dbo.sysobjects WHERE id = OBJECT_ID(N'[DF_MGHiddenPicBk_AddedUser]') AND type = 'D')
BEGIN
ALTER TABLE [dbo].[MGHiddenPicBk] DROP CONSTRAINT [DF_MGHiddenPicBk_AddedUser]
END

GO

IF  EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID(N'[dbo].[FK_MGMatchingGame_Minigame]') AND parent_object_id = OBJECT_ID(N'[dbo].[MGMatchingGame]'))
ALTER TABLE [dbo].[MGMatchingGame] DROP CONSTRAINT [FK_MGMatchingGame_Minigame]
GO

IF  EXISTS (SELECT * FROM dbo.sysobjects WHERE id = OBJECT_ID(N'[DF_MGMatchingGame_EasyGameSize]') AND type = 'D')
BEGIN
ALTER TABLE [dbo].[MGMatchingGame] DROP CONSTRAINT [DF_MGMatchingGame_EasyGameSize]
END

GO

IF  EXISTS (SELECT * FROM dbo.sysobjects WHERE id = OBJECT_ID(N'[DF_MGMatchingGame_MediumGameSize]') AND type = 'D')
BEGIN
ALTER TABLE [dbo].[MGMatchingGame] DROP CONSTRAINT [DF_MGMatchingGame_MediumGameSize]
END

GO

IF  EXISTS (SELECT * FROM dbo.sysobjects WHERE id = OBJECT_ID(N'[DF_MGMatchingGame_HardGameSize]') AND type = 'D')
BEGIN
ALTER TABLE [dbo].[MGMatchingGame] DROP CONSTRAINT [DF_MGMatchingGame_HardGameSize]
END

GO

IF  EXISTS (SELECT * FROM dbo.sysobjects WHERE id = OBJECT_ID(N'[DF_MGMatchingGame_LastModDate]') AND type = 'D')
BEGIN
ALTER TABLE [dbo].[MGMatchingGame] DROP CONSTRAINT [DF_MGMatchingGame_LastModDate]
END

GO

IF  EXISTS (SELECT * FROM dbo.sysobjects WHERE id = OBJECT_ID(N'[DF_MGMatchingGame_LastModUser]') AND type = 'D')
BEGIN
ALTER TABLE [dbo].[MGMatchingGame] DROP CONSTRAINT [DF_MGMatchingGame_LastModUser]
END

GO

IF  EXISTS (SELECT * FROM dbo.sysobjects WHERE id = OBJECT_ID(N'[DF_MGMatchingGame_AddedDate]') AND type = 'D')
BEGIN
ALTER TABLE [dbo].[MGMatchingGame] DROP CONSTRAINT [DF_MGMatchingGame_AddedDate]
END

GO

IF  EXISTS (SELECT * FROM dbo.sysobjects WHERE id = OBJECT_ID(N'[DF_MGMatchingGame_AddedUser]') AND type = 'D')
BEGIN
ALTER TABLE [dbo].[MGMatchingGame] DROP CONSTRAINT [DF_MGMatchingGame_AddedUser]
END

GO

IF  EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID(N'[dbo].[FK_MGMatchingGameTiles_MGMatchingGame]') AND parent_object_id = OBJECT_ID(N'[dbo].[MGMatchingGameTiles]'))
ALTER TABLE [dbo].[MGMatchingGameTiles] DROP CONSTRAINT [FK_MGMatchingGameTiles_MGMatchingGame]
GO

IF  EXISTS (SELECT * FROM dbo.sysobjects WHERE id = OBJECT_ID(N'[DF_MGMatchingGameTiles_LastModDate]') AND type = 'D')
BEGIN
ALTER TABLE [dbo].[MGMatchingGameTiles] DROP CONSTRAINT [DF_MGMatchingGameTiles_LastModDate]
END

GO

IF  EXISTS (SELECT * FROM dbo.sysobjects WHERE id = OBJECT_ID(N'[DF_MGMatchingGameTiles_LastModUser]') AND type = 'D')
BEGIN
ALTER TABLE [dbo].[MGMatchingGameTiles] DROP CONSTRAINT [DF_MGMatchingGameTiles_LastModUser]
END

GO

IF  EXISTS (SELECT * FROM dbo.sysobjects WHERE id = OBJECT_ID(N'[DF_MGMatchingGameTiles_AddedDate]') AND type = 'D')
BEGIN
ALTER TABLE [dbo].[MGMatchingGameTiles] DROP CONSTRAINT [DF_MGMatchingGameTiles_AddedDate]
END

GO

IF  EXISTS (SELECT * FROM dbo.sysobjects WHERE id = OBJECT_ID(N'[DF_MGMatchingGameTiles_AddedUser]') AND type = 'D')
BEGIN
ALTER TABLE [dbo].[MGMatchingGameTiles] DROP CONSTRAINT [DF_MGMatchingGameTiles_AddedUser]
END

GO

IF  EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID(N'[dbo].[FK_MGMixAndMatch_Minigame]') AND parent_object_id = OBJECT_ID(N'[dbo].[MGMixAndMatch]'))
ALTER TABLE [dbo].[MGMixAndMatch] DROP CONSTRAINT [FK_MGMixAndMatch_Minigame]
GO

IF  EXISTS (SELECT * FROM dbo.sysobjects WHERE id = OBJECT_ID(N'[DF_MGMixAndMatch_LastModDate]') AND type = 'D')
BEGIN
ALTER TABLE [dbo].[MGMixAndMatch] DROP CONSTRAINT [DF_MGMixAndMatch_LastModDate]
END

GO

IF  EXISTS (SELECT * FROM dbo.sysobjects WHERE id = OBJECT_ID(N'[DF_MGMixAndMatch_LastModUser]') AND type = 'D')
BEGIN
ALTER TABLE [dbo].[MGMixAndMatch] DROP CONSTRAINT [DF_MGMixAndMatch_LastModUser]
END

GO

IF  EXISTS (SELECT * FROM dbo.sysobjects WHERE id = OBJECT_ID(N'[DF_MGMixAndMatch_AddedDate]') AND type = 'D')
BEGIN
ALTER TABLE [dbo].[MGMixAndMatch] DROP CONSTRAINT [DF_MGMixAndMatch_AddedDate]
END

GO

IF  EXISTS (SELECT * FROM dbo.sysobjects WHERE id = OBJECT_ID(N'[DF_MGMixAndMatch_AddedUser]') AND type = 'D')
BEGIN
ALTER TABLE [dbo].[MGMixAndMatch] DROP CONSTRAINT [DF_MGMixAndMatch_AddedUser]
END

GO

IF  EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID(N'[dbo].[FK_MGMixAndMatchItems_MGMixAndMatch]') AND parent_object_id = OBJECT_ID(N'[dbo].[MGMixAndMatchItems]'))
ALTER TABLE [dbo].[MGMixAndMatchItems] DROP CONSTRAINT [FK_MGMixAndMatchItems_MGMixAndMatch]
GO

IF  EXISTS (SELECT * FROM dbo.sysobjects WHERE id = OBJECT_ID(N'[DF_MGMixAndMatchItems_LastModDate]') AND type = 'D')
BEGIN
ALTER TABLE [dbo].[MGMixAndMatchItems] DROP CONSTRAINT [DF_MGMixAndMatchItems_LastModDate]
END

GO

IF  EXISTS (SELECT * FROM dbo.sysobjects WHERE id = OBJECT_ID(N'[DF_MGMixAndMatchItems_LastModUser]') AND type = 'D')
BEGIN
ALTER TABLE [dbo].[MGMixAndMatchItems] DROP CONSTRAINT [DF_MGMixAndMatchItems_LastModUser]
END

GO

IF  EXISTS (SELECT * FROM dbo.sysobjects WHERE id = OBJECT_ID(N'[DF_MGMixAndMatchItems_AddedDate]') AND type = 'D')
BEGIN
ALTER TABLE [dbo].[MGMixAndMatchItems] DROP CONSTRAINT [DF_MGMixAndMatchItems_AddedDate]
END

GO

IF  EXISTS (SELECT * FROM dbo.sysobjects WHERE id = OBJECT_ID(N'[DF_MGMixAndMatchItems_AddedUser]') AND type = 'D')
BEGIN
ALTER TABLE [dbo].[MGMixAndMatchItems] DROP CONSTRAINT [DF_MGMixAndMatchItems_AddedUser]
END

GO

IF  EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID(N'[dbo].[FK_MGOnlineBook_Minigame]') AND parent_object_id = OBJECT_ID(N'[dbo].[MGOnlineBook]'))
ALTER TABLE [dbo].[MGOnlineBook] DROP CONSTRAINT [FK_MGOnlineBook_Minigame]
GO

IF  EXISTS (SELECT * FROM dbo.sysobjects WHERE id = OBJECT_ID(N'[DF_MGOnlineBook_LastModDate]') AND type = 'D')
BEGIN
ALTER TABLE [dbo].[MGOnlineBook] DROP CONSTRAINT [DF_MGOnlineBook_LastModDate]
END

GO

IF  EXISTS (SELECT * FROM dbo.sysobjects WHERE id = OBJECT_ID(N'[DF_MGOnlineBook_LastModUser]') AND type = 'D')
BEGIN
ALTER TABLE [dbo].[MGOnlineBook] DROP CONSTRAINT [DF_MGOnlineBook_LastModUser]
END

GO

IF  EXISTS (SELECT * FROM dbo.sysobjects WHERE id = OBJECT_ID(N'[DF_MGOnlineBook_AddedDate]') AND type = 'D')
BEGIN
ALTER TABLE [dbo].[MGOnlineBook] DROP CONSTRAINT [DF_MGOnlineBook_AddedDate]
END

GO

IF  EXISTS (SELECT * FROM dbo.sysobjects WHERE id = OBJECT_ID(N'[DF_MGOnlineBook_AddedUser]') AND type = 'D')
BEGIN
ALTER TABLE [dbo].[MGOnlineBook] DROP CONSTRAINT [DF_MGOnlineBook_AddedUser]
END

GO

IF  EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID(N'[dbo].[FK_MGOnlineBookPages_MGOnlineBook]') AND parent_object_id = OBJECT_ID(N'[dbo].[MGOnlineBookPages]'))
ALTER TABLE [dbo].[MGOnlineBookPages] DROP CONSTRAINT [FK_MGOnlineBookPages_MGOnlineBook]
GO

IF  EXISTS (SELECT * FROM dbo.sysobjects WHERE id = OBJECT_ID(N'[DF_MGOnlineBookPages_LastModDate]') AND type = 'D')
BEGIN
ALTER TABLE [dbo].[MGOnlineBookPages] DROP CONSTRAINT [DF_MGOnlineBookPages_LastModDate]
END

GO

IF  EXISTS (SELECT * FROM dbo.sysobjects WHERE id = OBJECT_ID(N'[DF_MGOnlineBookPages_LastModUser]') AND type = 'D')
BEGIN
ALTER TABLE [dbo].[MGOnlineBookPages] DROP CONSTRAINT [DF_MGOnlineBookPages_LastModUser]
END

GO

IF  EXISTS (SELECT * FROM dbo.sysobjects WHERE id = OBJECT_ID(N'[DF_MGOnlineBookPages_AddedDate]') AND type = 'D')
BEGIN
ALTER TABLE [dbo].[MGOnlineBookPages] DROP CONSTRAINT [DF_MGOnlineBookPages_AddedDate]
END

GO

IF  EXISTS (SELECT * FROM dbo.sysobjects WHERE id = OBJECT_ID(N'[DF_MGOnlineBookPages_AddedUser]') AND type = 'D')
BEGIN
ALTER TABLE [dbo].[MGOnlineBookPages] DROP CONSTRAINT [DF_MGOnlineBookPages_AddedUser]
END

GO

IF  EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID(N'[dbo].[FK_MGWordMatch_Minigame]') AND parent_object_id = OBJECT_ID(N'[dbo].[MGWordMatch]'))
ALTER TABLE [dbo].[MGWordMatch] DROP CONSTRAINT [FK_MGWordMatch_Minigame]
GO

IF  EXISTS (SELECT * FROM dbo.sysobjects WHERE id = OBJECT_ID(N'[DF_MGWordMatch_LastModDate]') AND type = 'D')
BEGIN
ALTER TABLE [dbo].[MGWordMatch] DROP CONSTRAINT [DF_MGWordMatch_LastModDate]
END

GO

IF  EXISTS (SELECT * FROM dbo.sysobjects WHERE id = OBJECT_ID(N'[DF_MGWordMatch_LastModUser]') AND type = 'D')
BEGIN
ALTER TABLE [dbo].[MGWordMatch] DROP CONSTRAINT [DF_MGWordMatch_LastModUser]
END

GO

IF  EXISTS (SELECT * FROM dbo.sysobjects WHERE id = OBJECT_ID(N'[DF_MGWordMatch_AddedDate]') AND type = 'D')
BEGIN
ALTER TABLE [dbo].[MGWordMatch] DROP CONSTRAINT [DF_MGWordMatch_AddedDate]
END

GO

IF  EXISTS (SELECT * FROM dbo.sysobjects WHERE id = OBJECT_ID(N'[DF_MGWordMatch_AddedUser]') AND type = 'D')
BEGIN
ALTER TABLE [dbo].[MGWordMatch] DROP CONSTRAINT [DF_MGWordMatch_AddedUser]
END

GO

IF  EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID(N'[dbo].[FK_MGWordMatchItems_MGWordMatch]') AND parent_object_id = OBJECT_ID(N'[dbo].[MGWordMatchItems]'))
ALTER TABLE [dbo].[MGWordMatchItems] DROP CONSTRAINT [FK_MGWordMatchItems_MGWordMatch]
GO

IF  EXISTS (SELECT * FROM dbo.sysobjects WHERE id = OBJECT_ID(N'[DF_MGWordMatchItems_LastModDate]') AND type = 'D')
BEGIN
ALTER TABLE [dbo].[MGWordMatchItems] DROP CONSTRAINT [DF_MGWordMatchItems_LastModDate]
END

GO

IF  EXISTS (SELECT * FROM dbo.sysobjects WHERE id = OBJECT_ID(N'[DF_MGWordMatchItems_LastModUser]') AND type = 'D')
BEGIN
ALTER TABLE [dbo].[MGWordMatchItems] DROP CONSTRAINT [DF_MGWordMatchItems_LastModUser]
END

GO

IF  EXISTS (SELECT * FROM dbo.sysobjects WHERE id = OBJECT_ID(N'[DF_MGWordMatchItems_AddedDate]') AND type = 'D')
BEGIN
ALTER TABLE [dbo].[MGWordMatchItems] DROP CONSTRAINT [DF_MGWordMatchItems_AddedDate]
END

GO

IF  EXISTS (SELECT * FROM dbo.sysobjects WHERE id = OBJECT_ID(N'[DF_MGWordMatchItems_AddedUser]') AND type = 'D')
BEGIN
ALTER TABLE [dbo].[MGWordMatchItems] DROP CONSTRAINT [DF_MGWordMatchItems_AddedUser]
END

GO

IF  EXISTS (SELECT * FROM dbo.sysobjects WHERE id = OBJECT_ID(N'[DF_Minigame_LastModDate]') AND type = 'D')
BEGIN
ALTER TABLE [dbo].[Minigame] DROP CONSTRAINT [DF_Minigame_LastModDate]
END

GO

IF  EXISTS (SELECT * FROM dbo.sysobjects WHERE id = OBJECT_ID(N'[DF_Minigame_LastModUser]') AND type = 'D')
BEGIN
ALTER TABLE [dbo].[Minigame] DROP CONSTRAINT [DF_Minigame_LastModUser]
END

GO

IF  EXISTS (SELECT * FROM dbo.sysobjects WHERE id = OBJECT_ID(N'[DF_Minigame_AddedDate]') AND type = 'D')
BEGIN
ALTER TABLE [dbo].[Minigame] DROP CONSTRAINT [DF_Minigame_AddedDate]
END

GO

IF  EXISTS (SELECT * FROM dbo.sysobjects WHERE id = OBJECT_ID(N'[DF_Minigame_AddedUser]') AND type = 'D')
BEGIN
ALTER TABLE [dbo].[Minigame] DROP CONSTRAINT [DF_Minigame_AddedUser]
END

GO

IF  EXISTS (SELECT * FROM dbo.sysobjects WHERE id = OBJECT_ID(N'[DF_Notifications_PID_To]') AND type = 'D')
BEGIN
ALTER TABLE [dbo].[Notifications] DROP CONSTRAINT [DF_Notifications_PID_To]
END

GO

IF  EXISTS (SELECT * FROM dbo.sysobjects WHERE id = OBJECT_ID(N'[DF_Notifications_PID_From]') AND type = 'D')
BEGIN
ALTER TABLE [dbo].[Notifications] DROP CONSTRAINT [DF_Notifications_PID_From]
END

GO

IF  EXISTS (SELECT * FROM dbo.sysobjects WHERE id = OBJECT_ID(N'[DF_Notifications_isQuestion]') AND type = 'D')
BEGIN
ALTER TABLE [dbo].[Notifications] DROP CONSTRAINT [DF_Notifications_isQuestion]
END

GO

IF  EXISTS (SELECT * FROM dbo.sysobjects WHERE id = OBJECT_ID(N'[DF_Notifications_Subject]') AND type = 'D')
BEGIN
ALTER TABLE [dbo].[Notifications] DROP CONSTRAINT [DF_Notifications_Subject]
END

GO

IF  EXISTS (SELECT * FROM dbo.sysobjects WHERE id = OBJECT_ID(N'[DF_Notifications_AddedDate]') AND type = 'D')
BEGIN
ALTER TABLE [dbo].[Notifications] DROP CONSTRAINT [DF_Notifications_AddedDate]
END

GO

IF  EXISTS (SELECT * FROM dbo.sysobjects WHERE id = OBJECT_ID(N'[DF_Notifications_AddedUser]') AND type = 'D')
BEGIN
ALTER TABLE [dbo].[Notifications] DROP CONSTRAINT [DF_Notifications_AddedUser]
END

GO

IF  EXISTS (SELECT * FROM dbo.sysobjects WHERE id = OBJECT_ID(N'[DF_Notifications_LastModDate]') AND type = 'D')
BEGIN
ALTER TABLE [dbo].[Notifications] DROP CONSTRAINT [DF_Notifications_LastModDate]
END

GO

IF  EXISTS (SELECT * FROM dbo.sysobjects WHERE id = OBJECT_ID(N'[DF_Notifications_LastModUser]') AND type = 'D')
BEGIN
ALTER TABLE [dbo].[Notifications] DROP CONSTRAINT [DF_Notifications_LastModUser]
END

GO

IF  EXISTS (SELECT * FROM dbo.sysobjects WHERE id = OBJECT_ID(N'[DF_Notifications_isUnread]') AND type = 'D')
BEGIN
ALTER TABLE [dbo].[Notifications] DROP CONSTRAINT [DF_Notifications_isUnread]
END

GO

IF  EXISTS (SELECT * FROM dbo.sysobjects WHERE id = OBJECT_ID(N'[DF_Offer_RedirectURL]') AND type = 'D')
BEGIN
ALTER TABLE [dbo].[Offer] DROP CONSTRAINT [DF_Offer_RedirectURL]
END

GO

IF  EXISTS (SELECT * FROM dbo.sysobjects WHERE id = OBJECT_ID(N'[DF_Offer_MaxImpressions]') AND type = 'D')
BEGIN
ALTER TABLE [dbo].[Offer] DROP CONSTRAINT [DF_Offer_MaxImpressions]
END

GO

IF  EXISTS (SELECT * FROM dbo.sysobjects WHERE id = OBJECT_ID(N'[DF_Offer_TotalImpressions]') AND type = 'D')
BEGIN
ALTER TABLE [dbo].[Offer] DROP CONSTRAINT [DF_Offer_TotalImpressions]
END

GO

IF  EXISTS (SELECT * FROM dbo.sysobjects WHERE id = OBJECT_ID(N'[DF_Offer_ZipCode]') AND type = 'D')
BEGIN
ALTER TABLE [dbo].[Offer] DROP CONSTRAINT [DF_Offer_ZipCode]
END

GO

IF  EXISTS (SELECT * FROM dbo.sysobjects WHERE id = OBJECT_ID(N'[DF_Offer_AgeStart]') AND type = 'D')
BEGIN
ALTER TABLE [dbo].[Offer] DROP CONSTRAINT [DF_Offer_AgeStart]
END

GO

IF  EXISTS (SELECT * FROM dbo.sysobjects WHERE id = OBJECT_ID(N'[DF_Offer_AgeEnd]') AND type = 'D')
BEGIN
ALTER TABLE [dbo].[Offer] DROP CONSTRAINT [DF_Offer_AgeEnd]
END

GO

IF  EXISTS (SELECT * FROM dbo.sysobjects WHERE id = OBJECT_ID(N'[DF_Offer_ProgramId]') AND type = 'D')
BEGIN
ALTER TABLE [dbo].[Offer] DROP CONSTRAINT [DF_Offer_ProgramId]
END

GO

IF  EXISTS (SELECT * FROM dbo.sysobjects WHERE id = OBJECT_ID(N'[DF_Offer_BranchId]') AND type = 'D')
BEGIN
ALTER TABLE [dbo].[Offer] DROP CONSTRAINT [DF_Offer_BranchId]
END

GO

IF  EXISTS (SELECT * FROM dbo.sysobjects WHERE id = OBJECT_ID(N'[DF_Offer_LastModDate]') AND type = 'D')
BEGIN
ALTER TABLE [dbo].[Offer] DROP CONSTRAINT [DF_Offer_LastModDate]
END

GO

IF  EXISTS (SELECT * FROM dbo.sysobjects WHERE id = OBJECT_ID(N'[DF_Offer_LastModUser]') AND type = 'D')
BEGIN
ALTER TABLE [dbo].[Offer] DROP CONSTRAINT [DF_Offer_LastModUser]
END

GO

IF  EXISTS (SELECT * FROM dbo.sysobjects WHERE id = OBJECT_ID(N'[DF_Offer_AddedDate]') AND type = 'D')
BEGIN
ALTER TABLE [dbo].[Offer] DROP CONSTRAINT [DF_Offer_AddedDate]
END

GO

IF  EXISTS (SELECT * FROM dbo.sysobjects WHERE id = OBJECT_ID(N'[DF_Offer_AddedUser]') AND type = 'D')
BEGIN
ALTER TABLE [dbo].[Offer] DROP CONSTRAINT [DF_Offer_AddedUser]
END

GO

IF  EXISTS (SELECT * FROM dbo.sysobjects WHERE id = OBJECT_ID(N'[DF_Patron_IsMasterAccount]') AND type = 'D')
BEGIN
ALTER TABLE [dbo].[Patron] DROP CONSTRAINT [DF_Patron_IsMasterAccount]
END

GO

IF  EXISTS (SELECT * FROM dbo.sysobjects WHERE id = OBJECT_ID(N'[DF_Patron_RegistrationDate]') AND type = 'D')
BEGIN
ALTER TABLE [dbo].[Patron] DROP CONSTRAINT [DF_Patron_RegistrationDate]
END

GO

IF  EXISTS (SELECT * FROM dbo.sysobjects WHERE id = OBJECT_ID(N'[DF_Patron_Score1]') AND type = 'D')
BEGIN
ALTER TABLE [dbo].[Patron] DROP CONSTRAINT [DF_Patron_Score1]
END

GO

IF  EXISTS (SELECT * FROM dbo.sysobjects WHERE id = OBJECT_ID(N'[DF_Patron_Score2]') AND type = 'D')
BEGIN
ALTER TABLE [dbo].[Patron] DROP CONSTRAINT [DF_Patron_Score2]
END

GO

IF  EXISTS (SELECT * FROM dbo.sysobjects WHERE id = OBJECT_ID(N'[DF_Patron_Score1Pct]') AND type = 'D')
BEGIN
ALTER TABLE [dbo].[Patron] DROP CONSTRAINT [DF_Patron_Score1Pct]
END

GO

IF  EXISTS (SELECT * FROM dbo.sysobjects WHERE id = OBJECT_ID(N'[DF_Patron_Score2Pct]') AND type = 'D')
BEGIN
ALTER TABLE [dbo].[Patron] DROP CONSTRAINT [DF_Patron_Score2Pct]
END

GO

IF  EXISTS (SELECT * FROM dbo.sysobjects WHERE id = OBJECT_ID(N'[DF_PatronBookLists_LastModDate]') AND type = 'D')
BEGIN
ALTER TABLE [dbo].[PatronBookLists] DROP CONSTRAINT [DF_PatronBookLists_LastModDate]
END

GO

IF  EXISTS (SELECT * FROM dbo.sysobjects WHERE id = OBJECT_ID(N'[DF_PatronPrizes_LastModDate]') AND type = 'D')
BEGIN
ALTER TABLE [dbo].[PatronPrizes] DROP CONSTRAINT [DF_PatronPrizes_LastModDate]
END

GO

IF  EXISTS (SELECT * FROM dbo.sysobjects WHERE id = OBJECT_ID(N'[DF_PatronPrizes_LastModUser]') AND type = 'D')
BEGIN
ALTER TABLE [dbo].[PatronPrizes] DROP CONSTRAINT [DF_PatronPrizes_LastModUser]
END

GO

IF  EXISTS (SELECT * FROM dbo.sysobjects WHERE id = OBJECT_ID(N'[DF_PatronPrizes_AddedDate]') AND type = 'D')
BEGIN
ALTER TABLE [dbo].[PatronPrizes] DROP CONSTRAINT [DF_PatronPrizes_AddedDate]
END

GO

IF  EXISTS (SELECT * FROM dbo.sysobjects WHERE id = OBJECT_ID(N'[DF_PatronPrizes_AddedUser]') AND type = 'D')
BEGIN
ALTER TABLE [dbo].[PatronPrizes] DROP CONSTRAINT [DF_PatronPrizes_AddedUser]
END

GO

IF  EXISTS (SELECT * FROM dbo.sysobjects WHERE id = OBJECT_ID(N'[DF_PatronRewardCodes_LastModDate]') AND type = 'D')
BEGIN
ALTER TABLE [dbo].[PatronRewardCodes] DROP CONSTRAINT [DF_PatronRewardCodes_LastModDate]
END

GO

IF  EXISTS (SELECT * FROM dbo.sysobjects WHERE id = OBJECT_ID(N'[DF_PatronRewardCodes_LastModUser]') AND type = 'D')
BEGIN
ALTER TABLE [dbo].[PatronRewardCodes] DROP CONSTRAINT [DF_PatronRewardCodes_LastModUser]
END

GO

IF  EXISTS (SELECT * FROM dbo.sysobjects WHERE id = OBJECT_ID(N'[DF_PatronRewardCodes_AddedDate]') AND type = 'D')
BEGIN
ALTER TABLE [dbo].[PatronRewardCodes] DROP CONSTRAINT [DF_PatronRewardCodes_AddedDate]
END

GO

IF  EXISTS (SELECT * FROM dbo.sysobjects WHERE id = OBJECT_ID(N'[DF_PatronRewardCodes_AddedUser]') AND type = 'D')
BEGIN
ALTER TABLE [dbo].[PatronRewardCodes] DROP CONSTRAINT [DF_PatronRewardCodes_AddedUser]
END

GO

IF  EXISTS (SELECT * FROM dbo.sysobjects WHERE id = OBJECT_ID(N'[DF_PrizeDrawing_LastModDate]') AND type = 'D')
BEGIN
ALTER TABLE [dbo].[PrizeDrawing] DROP CONSTRAINT [DF_PrizeDrawing_LastModDate]
END

GO

IF  EXISTS (SELECT * FROM dbo.sysobjects WHERE id = OBJECT_ID(N'[DF_PrizeDrawing_LastModUser]') AND type = 'D')
BEGIN
ALTER TABLE [dbo].[PrizeDrawing] DROP CONSTRAINT [DF_PrizeDrawing_LastModUser]
END

GO

IF  EXISTS (SELECT * FROM dbo.sysobjects WHERE id = OBJECT_ID(N'[DF_PrizeDrawing_AddedDate]') AND type = 'D')
BEGIN
ALTER TABLE [dbo].[PrizeDrawing] DROP CONSTRAINT [DF_PrizeDrawing_AddedDate]
END

GO

IF  EXISTS (SELECT * FROM dbo.sysobjects WHERE id = OBJECT_ID(N'[DF_PrizeDrawing_AddedUser]') AND type = 'D')
BEGIN
ALTER TABLE [dbo].[PrizeDrawing] DROP CONSTRAINT [DF_PrizeDrawing_AddedUser]
END

GO

IF  EXISTS (SELECT * FROM dbo.sysobjects WHERE id = OBJECT_ID(N'[DF_PrizeDrawingWinners_LastModDate]') AND type = 'D')
BEGIN
ALTER TABLE [dbo].[PrizeDrawingWinners] DROP CONSTRAINT [DF_PrizeDrawingWinners_LastModDate]
END

GO

IF  EXISTS (SELECT * FROM dbo.sysobjects WHERE id = OBJECT_ID(N'[DF_PrizeDrawingWinners_LastModUser]') AND type = 'D')
BEGIN
ALTER TABLE [dbo].[PrizeDrawingWinners] DROP CONSTRAINT [DF_PrizeDrawingWinners_LastModUser]
END

GO

IF  EXISTS (SELECT * FROM dbo.sysobjects WHERE id = OBJECT_ID(N'[DF_PrizeDrawingWinners_AddedDate]') AND type = 'D')
BEGIN
ALTER TABLE [dbo].[PrizeDrawingWinners] DROP CONSTRAINT [DF_PrizeDrawingWinners_AddedDate]
END

GO

IF  EXISTS (SELECT * FROM dbo.sysobjects WHERE id = OBJECT_ID(N'[DF_PrizeDrawingWinners_AddedUser]') AND type = 'D')
BEGIN
ALTER TABLE [dbo].[PrizeDrawingWinners] DROP CONSTRAINT [DF_PrizeDrawingWinners_AddedUser]
END

GO

IF  EXISTS (SELECT * FROM dbo.sysobjects WHERE id = OBJECT_ID(N'[DF_PrizeTemplate_NumPrizes]') AND type = 'D')
BEGIN
ALTER TABLE [dbo].[PrizeTemplate] DROP CONSTRAINT [DF_PrizeTemplate_NumPrizes]
END

GO

IF  EXISTS (SELECT * FROM dbo.sysobjects WHERE id = OBJECT_ID(N'[DF_PrizeTemplate_LastModDate]') AND type = 'D')
BEGIN
ALTER TABLE [dbo].[PrizeTemplate] DROP CONSTRAINT [DF_PrizeTemplate_LastModDate]
END

GO

IF  EXISTS (SELECT * FROM dbo.sysobjects WHERE id = OBJECT_ID(N'[DF_PrizeTemplate_LastModUser]') AND type = 'D')
BEGIN
ALTER TABLE [dbo].[PrizeTemplate] DROP CONSTRAINT [DF_PrizeTemplate_LastModUser]
END

GO

IF  EXISTS (SELECT * FROM dbo.sysobjects WHERE id = OBJECT_ID(N'[DF_PrizeTemplate_AddedDate]') AND type = 'D')
BEGIN
ALTER TABLE [dbo].[PrizeTemplate] DROP CONSTRAINT [DF_PrizeTemplate_AddedDate]
END

GO

IF  EXISTS (SELECT * FROM dbo.sysobjects WHERE id = OBJECT_ID(N'[DF_PrizeTemplate_AddedUser]') AND type = 'D')
BEGIN
ALTER TABLE [dbo].[PrizeTemplate] DROP CONSTRAINT [DF_PrizeTemplate_AddedUser]
END

GO

IF  EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID(N'[dbo].[FK_ProgramCodes_Programs]') AND parent_object_id = OBJECT_ID(N'[dbo].[ProgramCodes]'))
ALTER TABLE [dbo].[ProgramCodes] DROP CONSTRAINT [FK_ProgramCodes_Programs]
GO

IF  EXISTS (SELECT * FROM dbo.sysobjects WHERE id = OBJECT_ID(N'[DF_ProgramCodes_isUsed]') AND type = 'D')
BEGIN
ALTER TABLE [dbo].[ProgramCodes] DROP CONSTRAINT [DF_ProgramCodes_isUsed]
END

GO

IF  EXISTS (SELECT * FROM dbo.sysobjects WHERE id = OBJECT_ID(N'[DF_ProgramCodes_DateCreated]') AND type = 'D')
BEGIN
ALTER TABLE [dbo].[ProgramCodes] DROP CONSTRAINT [DF_ProgramCodes_DateCreated]
END

GO

IF  EXISTS (SELECT * FROM dbo.sysobjects WHERE id = OBJECT_ID(N'[DF_ProgramGame_LastModUser]') AND type = 'D')
BEGIN
ALTER TABLE [dbo].[ProgramGame] DROP CONSTRAINT [DF_ProgramGame_LastModUser]
END

GO

IF  EXISTS (SELECT * FROM dbo.sysobjects WHERE id = OBJECT_ID(N'[DF_ProgramGame_AddedDate]') AND type = 'D')
BEGIN
ALTER TABLE [dbo].[ProgramGame] DROP CONSTRAINT [DF_ProgramGame_AddedDate]
END

GO

IF  EXISTS (SELECT * FROM dbo.sysobjects WHERE id = OBJECT_ID(N'[DF_ProgramGame_AddedUser]') AND type = 'D')
BEGIN
ALTER TABLE [dbo].[ProgramGame] DROP CONSTRAINT [DF_ProgramGame_AddedUser]
END

GO

IF  EXISTS (SELECT * FROM dbo.sysobjects WHERE id = OBJECT_ID(N'[DF_ProgramGame_LastModDate]') AND type = 'D')
BEGIN
ALTER TABLE [dbo].[ProgramGame] DROP CONSTRAINT [DF_ProgramGame_LastModDate]
END

GO

IF  EXISTS (SELECT * FROM dbo.sysobjects WHERE id = OBJECT_ID(N'[DF_ProgramGame_Minigame1ID]') AND type = 'D')
BEGIN
ALTER TABLE [dbo].[ProgramGame] DROP CONSTRAINT [DF_ProgramGame_Minigame1ID]
END

GO

IF  EXISTS (SELECT * FROM dbo.sysobjects WHERE id = OBJECT_ID(N'[DF_ProgramGame_Minigame2ID]') AND type = 'D')
BEGIN
ALTER TABLE [dbo].[ProgramGame] DROP CONSTRAINT [DF_ProgramGame_Minigame2ID]
END

GO

IF  EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID(N'[dbo].[FK_ProgramGameLevel_ProgramGame]') AND parent_object_id = OBJECT_ID(N'[dbo].[ProgramGameLevel]'))
ALTER TABLE [dbo].[ProgramGameLevel] DROP CONSTRAINT [FK_ProgramGameLevel_ProgramGame]
GO

IF  EXISTS (SELECT * FROM dbo.sysobjects WHERE id = OBJECT_ID(N'[DF_ProgramGameLevel_LastModDate]') AND type = 'D')
BEGIN
ALTER TABLE [dbo].[ProgramGameLevel] DROP CONSTRAINT [DF_ProgramGameLevel_LastModDate]
END

GO

IF  EXISTS (SELECT * FROM dbo.sysobjects WHERE id = OBJECT_ID(N'[DF_ProgramGameLevel_LastModUser]') AND type = 'D')
BEGIN
ALTER TABLE [dbo].[ProgramGameLevel] DROP CONSTRAINT [DF_ProgramGameLevel_LastModUser]
END

GO

IF  EXISTS (SELECT * FROM dbo.sysobjects WHERE id = OBJECT_ID(N'[DF_ProgramGameLevel_AddedDate]') AND type = 'D')
BEGIN
ALTER TABLE [dbo].[ProgramGameLevel] DROP CONSTRAINT [DF_ProgramGameLevel_AddedDate]
END

GO

IF  EXISTS (SELECT * FROM dbo.sysobjects WHERE id = OBJECT_ID(N'[DF_ProgramGameLevel_AddedUser]') AND type = 'D')
BEGIN
ALTER TABLE [dbo].[ProgramGameLevel] DROP CONSTRAINT [DF_ProgramGameLevel_AddedUser]
END

GO

IF  EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID(N'[dbo].[FK_ProgramGamePointConversion_Programs]') AND parent_object_id = OBJECT_ID(N'[dbo].[ProgramGamePointConversion]'))
ALTER TABLE [dbo].[ProgramGamePointConversion] DROP CONSTRAINT [FK_ProgramGamePointConversion_Programs]
GO

IF  EXISTS (SELECT * FROM dbo.sysobjects WHERE id = OBJECT_ID(N'[DF_ProgramGamePointConversion_LastModDate]') AND type = 'D')
BEGIN
ALTER TABLE [dbo].[ProgramGamePointConversion] DROP CONSTRAINT [DF_ProgramGamePointConversion_LastModDate]
END

GO

IF  EXISTS (SELECT * FROM dbo.sysobjects WHERE id = OBJECT_ID(N'[DF_ProgramGamePointConversion_LastModUser]') AND type = 'D')
BEGIN
ALTER TABLE [dbo].[ProgramGamePointConversion] DROP CONSTRAINT [DF_ProgramGamePointConversion_LastModUser]
END

GO

IF  EXISTS (SELECT * FROM dbo.sysobjects WHERE id = OBJECT_ID(N'[DF_ProgramGamePointConversion_AddedDate]') AND type = 'D')
BEGIN
ALTER TABLE [dbo].[ProgramGamePointConversion] DROP CONSTRAINT [DF_ProgramGamePointConversion_AddedDate]
END

GO

IF  EXISTS (SELECT * FROM dbo.sysobjects WHERE id = OBJECT_ID(N'[DF_ProgramGamePointConversion_AddedUser]') AND type = 'D')
BEGIN
ALTER TABLE [dbo].[ProgramGamePointConversion] DROP CONSTRAINT [DF_ProgramGamePointConversion_AddedUser]
END

GO

IF  EXISTS (SELECT * FROM dbo.sysobjects WHERE id = OBJECT_ID(N'[DF_Programs_IsActive]') AND type = 'D')
BEGIN
ALTER TABLE [dbo].[Programs] DROP CONSTRAINT [DF_Programs_IsActive]
END

GO

IF  EXISTS (SELECT * FROM dbo.sysobjects WHERE id = OBJECT_ID(N'[DF_Programs_IsHidden]') AND type = 'D')
BEGIN
ALTER TABLE [dbo].[Programs] DROP CONSTRAINT [DF_Programs_IsHidden]
END

GO

IF  EXISTS (SELECT * FROM dbo.sysobjects WHERE id = OBJECT_ID(N'[DF_Programs_ParentalConsentFlag]') AND type = 'D')
BEGIN
ALTER TABLE [dbo].[Programs] DROP CONSTRAINT [DF_Programs_ParentalConsentFlag]
END

GO

IF  EXISTS (SELECT * FROM dbo.sysobjects WHERE id = OBJECT_ID(N'[DF_Programs_CompletionPoints]') AND type = 'D')
BEGIN
ALTER TABLE [dbo].[Programs] DROP CONSTRAINT [DF_Programs_CompletionPoints]
END

GO

IF  EXISTS (SELECT * FROM dbo.sysobjects WHERE id = OBJECT_ID(N'[DF_Programs_LastModUser]') AND type = 'D')
BEGIN
ALTER TABLE [dbo].[Programs] DROP CONSTRAINT [DF_Programs_LastModUser]
END

GO

IF  EXISTS (SELECT * FROM dbo.sysobjects WHERE id = OBJECT_ID(N'[DF_Programs_AddedDate]') AND type = 'D')
BEGIN
ALTER TABLE [dbo].[Programs] DROP CONSTRAINT [DF_Programs_AddedDate]
END

GO

IF  EXISTS (SELECT * FROM dbo.sysobjects WHERE id = OBJECT_ID(N'[DF_Programs_AddedUser]') AND type = 'D')
BEGIN
ALTER TABLE [dbo].[Programs] DROP CONSTRAINT [DF_Programs_AddedUser]
END

GO

IF  EXISTS (SELECT * FROM dbo.sysobjects WHERE id = OBJECT_ID(N'[DF_Programs_LastModDate]') AND type = 'D')
BEGIN
ALTER TABLE [dbo].[Programs] DROP CONSTRAINT [DF_Programs_LastModDate]
END

GO

IF  EXISTS (SELECT * FROM dbo.sysobjects WHERE id = OBJECT_ID(N'[DF_RegistrationSettings_Literacy1Label]') AND type = 'D')
BEGIN
ALTER TABLE [dbo].[RegistrationSettings] DROP CONSTRAINT [DF_RegistrationSettings_Literacy1Label]
END

GO

IF  EXISTS (SELECT * FROM dbo.sysobjects WHERE id = OBJECT_ID(N'[DF_RegistrationSettings_Literacy2Label]') AND type = 'D')
BEGIN
ALTER TABLE [dbo].[RegistrationSettings] DROP CONSTRAINT [DF_RegistrationSettings_Literacy2Label]
END

GO

IF  EXISTS (SELECT * FROM dbo.sysobjects WHERE id = OBJECT_ID(N'[DF_RegistrationSettings_LastModDate]') AND type = 'D')
BEGIN
ALTER TABLE [dbo].[RegistrationSettings] DROP CONSTRAINT [DF_RegistrationSettings_LastModDate]
END

GO

IF  EXISTS (SELECT * FROM dbo.sysobjects WHERE id = OBJECT_ID(N'[DF_RegistrationSettings_LastModUser]') AND type = 'D')
BEGIN
ALTER TABLE [dbo].[RegistrationSettings] DROP CONSTRAINT [DF_RegistrationSettings_LastModUser]
END

GO

IF  EXISTS (SELECT * FROM dbo.sysobjects WHERE id = OBJECT_ID(N'[DF_RegistrationSettings_AddedDate]') AND type = 'D')
BEGIN
ALTER TABLE [dbo].[RegistrationSettings] DROP CONSTRAINT [DF_RegistrationSettings_AddedDate]
END

GO

IF  EXISTS (SELECT * FROM dbo.sysobjects WHERE id = OBJECT_ID(N'[DF_RegistrationSettings_AddedUser]') AND type = 'D')
BEGIN
ALTER TABLE [dbo].[RegistrationSettings] DROP CONSTRAINT [DF_RegistrationSettings_AddedUser]
END

GO

IF  EXISTS (SELECT * FROM dbo.sysobjects WHERE id = OBJECT_ID(N'[DF_ReportTemplate_ProgId]') AND type = 'D')
BEGIN
ALTER TABLE [dbo].[ReportTemplate] DROP CONSTRAINT [DF_ReportTemplate_ProgId]
END

GO

IF  EXISTS (SELECT * FROM dbo.sysobjects WHERE id = OBJECT_ID(N'[DF_ReportTemplate_RegistrationDate1]') AND type = 'D')
BEGIN
ALTER TABLE [dbo].[ReportTemplate] DROP CONSTRAINT [DF_ReportTemplate_RegistrationDate1]
END

GO

IF  EXISTS (SELECT * FROM dbo.sysobjects WHERE id = OBJECT_ID(N'[DF_ReportTemplate_RegistrationDate]') AND type = 'D')
BEGIN
ALTER TABLE [dbo].[ReportTemplate] DROP CONSTRAINT [DF_ReportTemplate_RegistrationDate]
END

GO

IF  EXISTS (SELECT * FROM dbo.sysobjects WHERE id = OBJECT_ID(N'[DF_ReportTemplate_LastModDate]') AND type = 'D')
BEGIN
ALTER TABLE [dbo].[ReportTemplate] DROP CONSTRAINT [DF_ReportTemplate_LastModDate]
END

GO

IF  EXISTS (SELECT * FROM dbo.sysobjects WHERE id = OBJECT_ID(N'[DF_ReportTemplate_LastModUser]') AND type = 'D')
BEGIN
ALTER TABLE [dbo].[ReportTemplate] DROP CONSTRAINT [DF_ReportTemplate_LastModUser]
END

GO

IF  EXISTS (SELECT * FROM dbo.sysobjects WHERE id = OBJECT_ID(N'[DF_ReportTemplate_AddedDate]') AND type = 'D')
BEGIN
ALTER TABLE [dbo].[ReportTemplate] DROP CONSTRAINT [DF_ReportTemplate_AddedDate]
END

GO

IF  EXISTS (SELECT * FROM dbo.sysobjects WHERE id = OBJECT_ID(N'[DF_ReportTemplate_AddedUser]') AND type = 'D')
BEGIN
ALTER TABLE [dbo].[ReportTemplate] DROP CONSTRAINT [DF_ReportTemplate_AddedUser]
END

GO

IF  EXISTS (SELECT * FROM dbo.sysobjects WHERE id = OBJECT_ID(N'[DF_SentEmailLog_SentDateTime]') AND type = 'D')
BEGIN
ALTER TABLE [dbo].[SentEmailLog] DROP CONSTRAINT [DF_SentEmailLog_SentDateTime]
END

GO

IF  EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID(N'[dbo].[FK_GroupPermissions_SRPGroups]') AND parent_object_id = OBJECT_ID(N'[dbo].[SRPGroupPermissions]'))
ALTER TABLE [dbo].[SRPGroupPermissions] DROP CONSTRAINT [FK_GroupPermissions_SRPGroups]
GO

IF  EXISTS (SELECT * FROM dbo.sysobjects WHERE id = OBJECT_ID(N'[DF_SRPGroupPermissions_AddedDate]') AND type = 'D')
BEGIN
ALTER TABLE [dbo].[SRPGroupPermissions] DROP CONSTRAINT [DF_SRPGroupPermissions_AddedDate]
END

GO

IF  EXISTS (SELECT * FROM dbo.sysobjects WHERE id = OBJECT_ID(N'[DF_SRPGroupPermissions_AddedUser]') AND type = 'D')
BEGIN
ALTER TABLE [dbo].[SRPGroupPermissions] DROP CONSTRAINT [DF_SRPGroupPermissions_AddedUser]
END

GO

IF  EXISTS (SELECT * FROM dbo.sysobjects WHERE id = OBJECT_ID(N'[DF_SRPGroups_LastModDate]') AND type = 'D')
BEGIN
ALTER TABLE [dbo].[SRPGroups] DROP CONSTRAINT [DF_SRPGroups_LastModDate]
END

GO

IF  EXISTS (SELECT * FROM dbo.sysobjects WHERE id = OBJECT_ID(N'[DF_SRPGroups_LastModUser]') AND type = 'D')
BEGIN
ALTER TABLE [dbo].[SRPGroups] DROP CONSTRAINT [DF_SRPGroups_LastModUser]
END

GO

IF  EXISTS (SELECT * FROM dbo.sysobjects WHERE id = OBJECT_ID(N'[DF_SRPGroups_AddedDate]') AND type = 'D')
BEGIN
ALTER TABLE [dbo].[SRPGroups] DROP CONSTRAINT [DF_SRPGroups_AddedDate]
END

GO

IF  EXISTS (SELECT * FROM dbo.sysobjects WHERE id = OBJECT_ID(N'[DF_SRPGroups_AddedUser]') AND type = 'D')
BEGIN
ALTER TABLE [dbo].[SRPGroups] DROP CONSTRAINT [DF_SRPGroups_AddedUser]
END

GO

IF  EXISTS (SELECT * FROM dbo.sysobjects WHERE id = OBJECT_ID(N'[DF_SRPReport_ProgId]') AND type = 'D')
BEGIN
ALTER TABLE [dbo].[SRPReport] DROP CONSTRAINT [DF_SRPReport_ProgId]
END

GO

IF  EXISTS (SELECT * FROM dbo.sysobjects WHERE id = OBJECT_ID(N'[DF_SRPReport_RegistrationDateStart]') AND type = 'D')
BEGIN
ALTER TABLE [dbo].[SRPReport] DROP CONSTRAINT [DF_SRPReport_RegistrationDateStart]
END

GO

IF  EXISTS (SELECT * FROM dbo.sysobjects WHERE id = OBJECT_ID(N'[DF_SRPReport_RegistrationDateEnd]') AND type = 'D')
BEGIN
ALTER TABLE [dbo].[SRPReport] DROP CONSTRAINT [DF_SRPReport_RegistrationDateEnd]
END

GO

IF  EXISTS (SELECT * FROM dbo.sysobjects WHERE id = OBJECT_ID(N'[DF_SRPReport_LastModDate]') AND type = 'D')
BEGIN
ALTER TABLE [dbo].[SRPReport] DROP CONSTRAINT [DF_SRPReport_LastModDate]
END

GO

IF  EXISTS (SELECT * FROM dbo.sysobjects WHERE id = OBJECT_ID(N'[DF_SRPReport_LastModUser]') AND type = 'D')
BEGIN
ALTER TABLE [dbo].[SRPReport] DROP CONSTRAINT [DF_SRPReport_LastModUser]
END

GO

IF  EXISTS (SELECT * FROM dbo.sysobjects WHERE id = OBJECT_ID(N'[DF_SRPReport_AddedDate]') AND type = 'D')
BEGIN
ALTER TABLE [dbo].[SRPReport] DROP CONSTRAINT [DF_SRPReport_AddedDate]
END

GO

IF  EXISTS (SELECT * FROM dbo.sysobjects WHERE id = OBJECT_ID(N'[DF_SRPReport_AddedUser]') AND type = 'D')
BEGIN
ALTER TABLE [dbo].[SRPReport] DROP CONSTRAINT [DF_SRPReport_AddedUser]
END

GO

IF  EXISTS (SELECT * FROM dbo.sysobjects WHERE id = OBJECT_ID(N'[DF_SRPSettings_StorageType]') AND type = 'D')
BEGIN
ALTER TABLE [dbo].[SRPSettings] DROP CONSTRAINT [DF_SRPSettings_StorageType]
END

GO

IF  EXISTS (SELECT * FROM dbo.sysobjects WHERE id = OBJECT_ID(N'[DF_SRPSettings_EditType]') AND type = 'D')
BEGIN
ALTER TABLE [dbo].[SRPSettings] DROP CONSTRAINT [DF_SRPSettings_EditType]
END

GO

IF  EXISTS (SELECT * FROM dbo.sysobjects WHERE id = OBJECT_ID(N'[DF_SRPUser_LastModDate]') AND type = 'D')
BEGIN
ALTER TABLE [dbo].[SRPUser] DROP CONSTRAINT [DF_SRPUser_LastModDate]
END

GO

IF  EXISTS (SELECT * FROM dbo.sysobjects WHERE id = OBJECT_ID(N'[DF_SRPUser_LastModUser]') AND type = 'D')
BEGIN
ALTER TABLE [dbo].[SRPUser] DROP CONSTRAINT [DF_SRPUser_LastModUser]
END

GO

IF  EXISTS (SELECT * FROM dbo.sysobjects WHERE id = OBJECT_ID(N'[DF_SRPUser_AddedDate]') AND type = 'D')
BEGIN
ALTER TABLE [dbo].[SRPUser] DROP CONSTRAINT [DF_SRPUser_AddedDate]
END

GO

IF  EXISTS (SELECT * FROM dbo.sysobjects WHERE id = OBJECT_ID(N'[DF_SRPUser_AddedUser]') AND type = 'D')
BEGIN
ALTER TABLE [dbo].[SRPUser] DROP CONSTRAINT [DF_SRPUser_AddedUser]
END

GO

IF  EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID(N'[dbo].[FK_SRPUserGroups_SRPGroups]') AND parent_object_id = OBJECT_ID(N'[dbo].[SRPUserGroups]'))
ALTER TABLE [dbo].[SRPUserGroups] DROP CONSTRAINT [FK_SRPUserGroups_SRPGroups]
GO

IF  EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID(N'[dbo].[FK_SRPUserGroups_SRPUser]') AND parent_object_id = OBJECT_ID(N'[dbo].[SRPUserGroups]'))
ALTER TABLE [dbo].[SRPUserGroups] DROP CONSTRAINT [FK_SRPUserGroups_SRPUser]
GO

IF  EXISTS (SELECT * FROM dbo.sysobjects WHERE id = OBJECT_ID(N'[DF_SRPUserGroups_AddedDate]') AND type = 'D')
BEGIN
ALTER TABLE [dbo].[SRPUserGroups] DROP CONSTRAINT [DF_SRPUserGroups_AddedDate]
END

GO

IF  EXISTS (SELECT * FROM dbo.sysobjects WHERE id = OBJECT_ID(N'[DF_SRPUserGroups_AddedUser]') AND type = 'D')
BEGIN
ALTER TABLE [dbo].[SRPUserGroups] DROP CONSTRAINT [DF_SRPUserGroups_AddedUser]
END

GO

IF  EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID(N'[dbo].[FK_UserPermissions_SRPUser]') AND parent_object_id = OBJECT_ID(N'[dbo].[SRPUserPermissions]'))
ALTER TABLE [dbo].[SRPUserPermissions] DROP CONSTRAINT [FK_UserPermissions_SRPUser]
GO

IF  EXISTS (SELECT * FROM dbo.sysobjects WHERE id = OBJECT_ID(N'[DF_SRPUserPermissions_AddedDate]') AND type = 'D')
BEGIN
ALTER TABLE [dbo].[SRPUserPermissions] DROP CONSTRAINT [DF_SRPUserPermissions_AddedDate]
END

GO

IF  EXISTS (SELECT * FROM dbo.sysobjects WHERE id = OBJECT_ID(N'[DF_SRPUserPermissions_AddedUser]') AND type = 'D')
BEGIN
ALTER TABLE [dbo].[SRPUserPermissions] DROP CONSTRAINT [DF_SRPUserPermissions_AddedUser]
END

GO

IF  EXISTS (SELECT * FROM dbo.sysobjects WHERE id = OBJECT_ID(N'[DF_Tenant_isActiveFlag]') AND type = 'D')
BEGIN
ALTER TABLE [dbo].[Tenant] DROP CONSTRAINT [DF_Tenant_isActiveFlag]
END

GO

IF  EXISTS (SELECT * FROM dbo.sysobjects WHERE id = OBJECT_ID(N'[DF_Tenant_isMasterFlag]') AND type = 'D')
BEGIN
ALTER TABLE [dbo].[Tenant] DROP CONSTRAINT [DF_Tenant_isMasterFlag]
END

GO

IF  EXISTS (SELECT * FROM dbo.sysobjects WHERE id = OBJECT_ID(N'[DF_Tenant_showNotifications]') AND type = 'D')
BEGIN
ALTER TABLE [dbo].[Tenant] DROP CONSTRAINT [DF_Tenant_showNotifications]
END

GO

IF  EXISTS (SELECT * FROM dbo.sysobjects WHERE id = OBJECT_ID(N'[DF_Tenant_showOffers]') AND type = 'D')
BEGIN
ALTER TABLE [dbo].[Tenant] DROP CONSTRAINT [DF_Tenant_showOffers]
END

GO

IF  EXISTS (SELECT * FROM dbo.sysobjects WHERE id = OBJECT_ID(N'[DF_Tenant_showBadges]') AND type = 'D')
BEGIN
ALTER TABLE [dbo].[Tenant] DROP CONSTRAINT [DF_Tenant_showBadges]
END

GO

IF  EXISTS (SELECT * FROM dbo.sysobjects WHERE id = OBJECT_ID(N'[DF_Tenant_showEvents]') AND type = 'D')
BEGIN
ALTER TABLE [dbo].[Tenant] DROP CONSTRAINT [DF_Tenant_showEvents]
END

GO

IF  EXISTS (SELECT * FROM dbo.sysobjects WHERE id = OBJECT_ID(N'[DF_Tenant_NotificationsMenuText]') AND type = 'D')
BEGIN
ALTER TABLE [dbo].[Tenant] DROP CONSTRAINT [DF_Tenant_NotificationsMenuText]
END

GO

IF  EXISTS (SELECT * FROM dbo.sysobjects WHERE id = OBJECT_ID(N'[DF_Tenant_OffersMenuText]') AND type = 'D')
BEGIN
ALTER TABLE [dbo].[Tenant] DROP CONSTRAINT [DF_Tenant_OffersMenuText]
END

GO

IF  EXISTS (SELECT * FROM dbo.sysobjects WHERE id = OBJECT_ID(N'[DF_Tenant_BadgesMenuText]') AND type = 'D')
BEGIN
ALTER TABLE [dbo].[Tenant] DROP CONSTRAINT [DF_Tenant_BadgesMenuText]
END

GO

IF  EXISTS (SELECT * FROM dbo.sysobjects WHERE id = OBJECT_ID(N'[DF_Tenant_EventsMenuText]') AND type = 'D')
BEGIN
ALTER TABLE [dbo].[Tenant] DROP CONSTRAINT [DF_Tenant_EventsMenuText]
END

GO

IF  EXISTS (SELECT * FROM dbo.sysobjects WHERE id = OBJECT_ID(N'[DF_Tenant_LastModDate]') AND type = 'D')
BEGIN
ALTER TABLE [dbo].[Tenant] DROP CONSTRAINT [DF_Tenant_LastModDate]
END

GO

IF  EXISTS (SELECT * FROM dbo.sysobjects WHERE id = OBJECT_ID(N'[DF_Tenant_LastModUser]') AND type = 'D')
BEGIN
ALTER TABLE [dbo].[Tenant] DROP CONSTRAINT [DF_Tenant_LastModUser]
END

GO

IF  EXISTS (SELECT * FROM dbo.sysobjects WHERE id = OBJECT_ID(N'[DF_Tenant_AddedDate]') AND type = 'D')
BEGIN
ALTER TABLE [dbo].[Tenant] DROP CONSTRAINT [DF_Tenant_AddedDate]
END

GO

IF  EXISTS (SELECT * FROM dbo.sysobjects WHERE id = OBJECT_ID(N'[DF_Tenant_AddedUser]') AND type = 'D')
BEGIN
ALTER TABLE [dbo].[Tenant] DROP CONSTRAINT [DF_Tenant_AddedUser]
END

GO

IF  EXISTS (SELECT * FROM dbo.sysobjects WHERE id = OBJECT_ID(N'[DF_TenantInitData_DateCreated]') AND type = 'D')
BEGIN
ALTER TABLE [dbo].[TenantInitData] DROP CONSTRAINT [DF_TenantInitData_DateCreated]
END

GO


GO

/****** Object:  Table [dbo].[Avatar]    Script Date: 12/05/2014 13:32:06 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[Avatar]') AND type in (N'U'))
DROP TABLE [dbo].[Avatar]
GO

/****** Object:  Table [dbo].[Award]    Script Date: 12/05/2014 13:32:06 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[Award]') AND type in (N'U'))
DROP TABLE [dbo].[Award]
GO

/****** Object:  Table [dbo].[Badge]    Script Date: 12/05/2014 13:32:06 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[Badge]') AND type in (N'U'))
DROP TABLE [dbo].[Badge]
GO

/****** Object:  Table [dbo].[BadgeAgeGrp]    Script Date: 12/05/2014 13:32:06 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[BadgeAgeGrp]') AND type in (N'U'))
DROP TABLE [dbo].[BadgeAgeGrp]
GO

/****** Object:  Table [dbo].[BadgeBranch]    Script Date: 12/05/2014 13:32:06 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[BadgeBranch]') AND type in (N'U'))
DROP TABLE [dbo].[BadgeBranch]
GO

/****** Object:  Table [dbo].[BadgeCategory]    Script Date: 12/05/2014 13:32:06 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[BadgeCategory]') AND type in (N'U'))
DROP TABLE [dbo].[BadgeCategory]
GO

/****** Object:  Table [dbo].[BadgeLocation]    Script Date: 12/05/2014 13:32:06 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[BadgeLocation]') AND type in (N'U'))
DROP TABLE [dbo].[BadgeLocation]
GO

/****** Object:  Table [dbo].[BookList]    Script Date: 12/05/2014 13:32:06 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[BookList]') AND type in (N'U'))
DROP TABLE [dbo].[BookList]
GO

/****** Object:  Table [dbo].[BookListBooks]    Script Date: 12/05/2014 13:32:06 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[BookListBooks]') AND type in (N'U'))
DROP TABLE [dbo].[BookListBooks]
GO

/****** Object:  Table [dbo].[Code]    Script Date: 12/05/2014 13:32:06 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[Code]') AND type in (N'U'))
DROP TABLE [dbo].[Code]
GO

/****** Object:  Table [dbo].[CodeType]    Script Date: 12/05/2014 13:32:06 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[CodeType]') AND type in (N'U'))
DROP TABLE [dbo].[CodeType]
GO

/****** Object:  Table [dbo].[CustomEventFields]    Script Date: 12/05/2014 13:32:06 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[CustomEventFields]') AND type in (N'U'))
DROP TABLE [dbo].[CustomEventFields]
GO

/****** Object:  Table [dbo].[CustomRegistrationFields]    Script Date: 12/05/2014 13:32:06 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[CustomRegistrationFields]') AND type in (N'U'))
DROP TABLE [dbo].[CustomRegistrationFields]
GO

/****** Object:  Table [dbo].[Event]    Script Date: 12/05/2014 13:32:06 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[Event]') AND type in (N'U'))
DROP TABLE [dbo].[Event]
GO

/****** Object:  Table [dbo].[GamePlayStats]    Script Date: 12/05/2014 13:32:06 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[GamePlayStats]') AND type in (N'U'))
DROP TABLE [dbo].[GamePlayStats]
GO

/****** Object:  Table [dbo].[LibraryCrosswalk]    Script Date: 12/05/2014 13:32:06 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[LibraryCrosswalk]') AND type in (N'U'))
DROP TABLE [dbo].[LibraryCrosswalk]
GO

/****** Object:  Table [dbo].[MGChooseAdv]    Script Date: 12/05/2014 13:32:06 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[MGChooseAdv]') AND type in (N'U'))
DROP TABLE [dbo].[MGChooseAdv]
GO

/****** Object:  Table [dbo].[MGChooseAdvSlides]    Script Date: 12/05/2014 13:32:06 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[MGChooseAdvSlides]') AND type in (N'U'))
DROP TABLE [dbo].[MGChooseAdvSlides]
GO

/****** Object:  Table [dbo].[MGCodeBreaker]    Script Date: 12/05/2014 13:32:06 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[MGCodeBreaker]') AND type in (N'U'))
DROP TABLE [dbo].[MGCodeBreaker]
GO

/****** Object:  Table [dbo].[MGCodeBreakerKey]    Script Date: 12/05/2014 13:32:06 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[MGCodeBreakerKey]') AND type in (N'U'))
DROP TABLE [dbo].[MGCodeBreakerKey]
GO

/****** Object:  Table [dbo].[MGHiddenPic]    Script Date: 12/05/2014 13:32:06 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[MGHiddenPic]') AND type in (N'U'))
DROP TABLE [dbo].[MGHiddenPic]
GO

/****** Object:  Table [dbo].[MGHiddenPicBk]    Script Date: 12/05/2014 13:32:06 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[MGHiddenPicBk]') AND type in (N'U'))
DROP TABLE [dbo].[MGHiddenPicBk]
GO

/****** Object:  Table [dbo].[MGMatchingGame]    Script Date: 12/05/2014 13:32:06 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[MGMatchingGame]') AND type in (N'U'))
DROP TABLE [dbo].[MGMatchingGame]
GO

/****** Object:  Table [dbo].[MGMatchingGameTiles]    Script Date: 12/05/2014 13:32:06 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[MGMatchingGameTiles]') AND type in (N'U'))
DROP TABLE [dbo].[MGMatchingGameTiles]
GO

/****** Object:  Table [dbo].[MGMixAndMatch]    Script Date: 12/05/2014 13:32:06 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[MGMixAndMatch]') AND type in (N'U'))
DROP TABLE [dbo].[MGMixAndMatch]
GO

/****** Object:  Table [dbo].[MGMixAndMatchItems]    Script Date: 12/05/2014 13:32:06 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[MGMixAndMatchItems]') AND type in (N'U'))
DROP TABLE [dbo].[MGMixAndMatchItems]
GO

/****** Object:  Table [dbo].[MGOnlineBook]    Script Date: 12/05/2014 13:32:06 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[MGOnlineBook]') AND type in (N'U'))
DROP TABLE [dbo].[MGOnlineBook]
GO

/****** Object:  Table [dbo].[MGOnlineBookPages]    Script Date: 12/05/2014 13:32:06 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[MGOnlineBookPages]') AND type in (N'U'))
DROP TABLE [dbo].[MGOnlineBookPages]
GO

/****** Object:  Table [dbo].[MGWordMatch]    Script Date: 12/05/2014 13:32:06 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[MGWordMatch]') AND type in (N'U'))
DROP TABLE [dbo].[MGWordMatch]
GO

/****** Object:  Table [dbo].[MGWordMatchItems]    Script Date: 12/05/2014 13:32:06 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[MGWordMatchItems]') AND type in (N'U'))
DROP TABLE [dbo].[MGWordMatchItems]
GO

/****** Object:  Table [dbo].[Minigame]    Script Date: 12/05/2014 13:32:06 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[Minigame]') AND type in (N'U'))
DROP TABLE [dbo].[Minigame]
GO

/****** Object:  Table [dbo].[Notifications]    Script Date: 12/05/2014 13:32:06 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[Notifications]') AND type in (N'U'))
DROP TABLE [dbo].[Notifications]
GO

/****** Object:  Table [dbo].[Offer]    Script Date: 12/05/2014 13:32:06 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[Offer]') AND type in (N'U'))
DROP TABLE [dbo].[Offer]
GO

/****** Object:  Table [dbo].[Patron]    Script Date: 12/05/2014 13:32:06 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[Patron]') AND type in (N'U'))
DROP TABLE [dbo].[Patron]
GO

/****** Object:  Table [dbo].[PatronBadges]    Script Date: 12/05/2014 13:32:06 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[PatronBadges]') AND type in (N'U'))
DROP TABLE [dbo].[PatronBadges]
GO

/****** Object:  Table [dbo].[PatronBookLists]    Script Date: 12/05/2014 13:32:06 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[PatronBookLists]') AND type in (N'U'))
DROP TABLE [dbo].[PatronBookLists]
GO

/****** Object:  Table [dbo].[PatronPoints]    Script Date: 12/05/2014 13:32:06 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[PatronPoints]') AND type in (N'U'))
DROP TABLE [dbo].[PatronPoints]
GO

/****** Object:  Table [dbo].[PatronPrizes]    Script Date: 12/05/2014 13:32:06 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[PatronPrizes]') AND type in (N'U'))
DROP TABLE [dbo].[PatronPrizes]
GO

/****** Object:  Table [dbo].[PatronReadingLog]    Script Date: 12/05/2014 13:32:06 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[PatronReadingLog]') AND type in (N'U'))
DROP TABLE [dbo].[PatronReadingLog]
GO

/****** Object:  Table [dbo].[PatronReview]    Script Date: 12/05/2014 13:32:06 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[PatronReview]') AND type in (N'U'))
DROP TABLE [dbo].[PatronReview]
GO

/****** Object:  Table [dbo].[PatronRewardCodes]    Script Date: 12/05/2014 13:32:06 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[PatronRewardCodes]') AND type in (N'U'))
DROP TABLE [dbo].[PatronRewardCodes]
GO

/****** Object:  Table [dbo].[PrizeDrawing]    Script Date: 12/05/2014 13:32:06 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[PrizeDrawing]') AND type in (N'U'))
DROP TABLE [dbo].[PrizeDrawing]
GO

/****** Object:  Table [dbo].[PrizeDrawingWinners]    Script Date: 12/05/2014 13:32:06 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[PrizeDrawingWinners]') AND type in (N'U'))
DROP TABLE [dbo].[PrizeDrawingWinners]
GO

/****** Object:  Table [dbo].[PrizeTemplate]    Script Date: 12/05/2014 13:32:06 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[PrizeTemplate]') AND type in (N'U'))
DROP TABLE [dbo].[PrizeTemplate]
GO

/****** Object:  Table [dbo].[ProgramCodes]    Script Date: 12/05/2014 13:32:06 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[ProgramCodes]') AND type in (N'U'))
DROP TABLE [dbo].[ProgramCodes]
GO

/****** Object:  Table [dbo].[ProgramGame]    Script Date: 12/05/2014 13:32:06 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[ProgramGame]') AND type in (N'U'))
DROP TABLE [dbo].[ProgramGame]
GO

/****** Object:  Table [dbo].[ProgramGameLevel]    Script Date: 12/05/2014 13:32:06 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[ProgramGameLevel]') AND type in (N'U'))
DROP TABLE [dbo].[ProgramGameLevel]
GO

/****** Object:  Table [dbo].[ProgramGamePointConversion]    Script Date: 12/05/2014 13:32:06 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[ProgramGamePointConversion]') AND type in (N'U'))
DROP TABLE [dbo].[ProgramGamePointConversion]
GO

/****** Object:  Table [dbo].[Programs]    Script Date: 12/05/2014 13:32:06 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[Programs]') AND type in (N'U'))
DROP TABLE [dbo].[Programs]
GO

/****** Object:  Table [dbo].[RegistrationSettings]    Script Date: 12/05/2014 13:32:06 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[RegistrationSettings]') AND type in (N'U'))
DROP TABLE [dbo].[RegistrationSettings]
GO

/****** Object:  Table [dbo].[ReportTemplate]    Script Date: 12/05/2014 13:32:06 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[ReportTemplate]') AND type in (N'U'))
DROP TABLE [dbo].[ReportTemplate]
GO

/****** Object:  Table [dbo].[SchoolCrosswalk]    Script Date: 12/05/2014 13:32:06 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[SchoolCrosswalk]') AND type in (N'U'))
DROP TABLE [dbo].[SchoolCrosswalk]
GO

/****** Object:  Table [dbo].[SentEmailLog]    Script Date: 12/05/2014 13:32:06 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[SentEmailLog]') AND type in (N'U'))
DROP TABLE [dbo].[SentEmailLog]
GO

/****** Object:  Table [dbo].[SQChoices]    Script Date: 12/05/2014 13:32:06 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[SQChoices]') AND type in (N'U'))
DROP TABLE [dbo].[SQChoices]
GO

/****** Object:  Table [dbo].[SQMatrixLines]    Script Date: 12/05/2014 13:32:06 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[SQMatrixLines]') AND type in (N'U'))
DROP TABLE [dbo].[SQMatrixLines]
GO

/****** Object:  Table [dbo].[SRPGroupPermissions]    Script Date: 12/05/2014 13:32:06 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[SRPGroupPermissions]') AND type in (N'U'))
DROP TABLE [dbo].[SRPGroupPermissions]
GO

/****** Object:  Table [dbo].[SRPGroups]    Script Date: 12/05/2014 13:32:06 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[SRPGroups]') AND type in (N'U'))
DROP TABLE [dbo].[SRPGroups]
GO

/****** Object:  Table [dbo].[SRPPermissionsMaster]    Script Date: 12/05/2014 13:32:06 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[SRPPermissionsMaster]') AND type in (N'U'))
DROP TABLE [dbo].[SRPPermissionsMaster]
GO

/****** Object:  Table [dbo].[SRPReport]    Script Date: 12/05/2014 13:32:06 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[SRPReport]') AND type in (N'U'))
DROP TABLE [dbo].[SRPReport]
GO

/****** Object:  Table [dbo].[SRPSettings]    Script Date: 12/05/2014 13:32:06 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[SRPSettings]') AND type in (N'U'))
DROP TABLE [dbo].[SRPSettings]
GO

/****** Object:  Table [dbo].[SRPUser]    Script Date: 12/05/2014 13:32:06 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[SRPUser]') AND type in (N'U'))
DROP TABLE [dbo].[SRPUser]
GO

/****** Object:  Table [dbo].[SRPUserGroups]    Script Date: 12/05/2014 13:32:06 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[SRPUserGroups]') AND type in (N'U'))
DROP TABLE [dbo].[SRPUserGroups]
GO

/****** Object:  Table [dbo].[SRPUserLoginHistory]    Script Date: 12/05/2014 13:32:06 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[SRPUserLoginHistory]') AND type in (N'U'))
DROP TABLE [dbo].[SRPUserLoginHistory]
GO

/****** Object:  Table [dbo].[SRPUserPermissions]    Script Date: 12/05/2014 13:32:06 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[SRPUserPermissions]') AND type in (N'U'))
DROP TABLE [dbo].[SRPUserPermissions]
GO

/****** Object:  Table [dbo].[Survey]    Script Date: 12/05/2014 13:32:06 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[Survey]') AND type in (N'U'))
DROP TABLE [dbo].[Survey]
GO

/****** Object:  Table [dbo].[SurveyAnswers]    Script Date: 12/05/2014 13:32:06 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[SurveyAnswers]') AND type in (N'U'))
DROP TABLE [dbo].[SurveyAnswers]
GO

/****** Object:  Table [dbo].[SurveyQuestion]    Script Date: 12/05/2014 13:32:06 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[SurveyQuestion]') AND type in (N'U'))
DROP TABLE [dbo].[SurveyQuestion]
GO

/****** Object:  Table [dbo].[SurveyResults]    Script Date: 12/05/2014 13:32:06 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[SurveyResults]') AND type in (N'U'))
DROP TABLE [dbo].[SurveyResults]
GO

/****** Object:  Table [dbo].[Tenant]    Script Date: 12/05/2014 13:32:06 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[Tenant]') AND type in (N'U'))
DROP TABLE [dbo].[Tenant]
GO

/****** Object:  Table [dbo].[TenantInitData]    Script Date: 12/05/2014 13:32:06 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[TenantInitData]') AND type in (N'U'))
DROP TABLE [dbo].[TenantInitData]
GO


GO

/****** Object:  Table [dbo].[Avatar]    Script Date: 12/05/2014 13:32:07 ******/
CREATE TABLE [dbo].[Avatar](
[AID] [int] IDENTITY(1,1) NOT NULL,
[Name] [varchar](50) NULL,
[Gender] [varchar](1) NULL,
[LastModDate] [datetime] NULL,
[LastModUser] [varchar](50) NULL,
[AddedDate] [datetime] NULL,
[AddedUser] [varchar](50) NULL,
[TenID] [int] NULL,
[FldInt1] [int] NULL,
[FldInt2] [int] NULL,
[FldInt3] [int] NULL,
[FldBit1] [bit] NULL,
[FldBit2] [bit] NULL,
[FldBit3] [bit] NULL,
[FldText1] [text] NULL,
[FldText2] [text] NULL,
[FldText3] [text] NULL,
CONSTRAINT [PK_Avatar] PRIMARY KEY CLUSTERED
(
[AID] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
) ON [PRIMARY] TEXTIMAGE_ON [PRIMARY]

GO

CREATE TABLE [dbo].[Award](
[AID] [int] IDENTITY(1,1) NOT NULL,
[AwardName] [varchar](80) NULL,
[BadgeID] [int] NULL,
[NumPoints] [int] NULL,
[BranchID] [int] NULL,
[ProgramID] [int] NULL,
[District] [varchar](50) NULL,
[SchoolName] [varchar](50) NULL,
[BadgeList] [varchar](500) NULL,
[LastModDate] [datetime] NULL,
[LastModUser] [varchar](50) NULL,
[AddedDate] [datetime] NULL,
[AddedUser] [varchar](50) NULL,
[TenID] [int] NULL,
[FldInt1] [int] NULL,
[FldInt2] [int] NULL,
[FldInt3] [int] NULL,
[FldBit1] [bit] NULL,
[FldBit2] [bit] NULL,
[FldBit3] [bit] NULL,
[FldText1] [text] NULL,
[FldText2] [text] NULL,
[FldText3] [text] NULL,
CONSTRAINT [PK_Award] PRIMARY KEY CLUSTERED
(
[AID] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
) ON [PRIMARY] TEXTIMAGE_ON [PRIMARY]

GO


GO


GO

/****** Object:  Table [dbo].[Badge]    Script Date: 12/05/2014 13:32:07 ******/

GO


GO


GO

CREATE TABLE [dbo].[Badge](
[BID] [int] IDENTITY(1000,1) NOT NULL,
[AdminName] [varchar](50) NULL,
[UserName] [varchar](50) NULL,
[GenNotificationFlag] [bit] NULL,
[NotificationSubject] [varchar](150) NULL,
[NotificationBody] [text] NULL,
[CustomEarnedMessage] [text] NULL,
[IncludesPhysicalPrizeFlag] [bit] NULL,
[PhysicalPrizeName] [varchar](50) NULL,
[AssignProgramPrizeCode] [bit] NULL,
[PCNotificationSubject] [varchar](150) NULL,
[PCNotificationBody] [text] NULL,
[LastModDate] [datetime] NULL,
[LastModUser] [varchar](50) NULL,
[AddedDate] [datetime] NULL,
[AddedUser] [varchar](50) NULL,
[TenID] [int] NULL,
[FldInt1] [int] NULL,
[FldInt2] [int] NULL,
[FldInt3] [int] NULL,
[FldBit1] [bit] NULL,
[FldBit2] [bit] NULL,
[FldBit3] [bit] NULL,
[FldText1] [text] NULL,
[FldText2] [text] NULL,
[FldText3] [text] NULL,
CONSTRAINT [PK_Badge] PRIMARY KEY CLUSTERED
(
[BID] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
) ON [PRIMARY] TEXTIMAGE_ON [PRIMARY]

GO


GO


GO

/****** Object:  Table [dbo].[BadgeAgeGrp]    Script Date: 12/05/2014 13:32:07 ******/

GO


GO

CREATE TABLE [dbo].[BadgeAgeGrp](
[BID] [int] NOT NULL,
[CID] [int] NOT NULL,
CONSTRAINT [PK_BadgeAgeGrp] PRIMARY KEY CLUSTERED
(
[BID] ASC,
[CID] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
) ON [PRIMARY]

GO


GO

/****** Object:  Table [dbo].[BadgeBranch]    Script Date: 12/05/2014 13:32:07 ******/

GO


GO

CREATE TABLE [dbo].[BadgeBranch](
[BID] [int] NOT NULL,
[CID] [int] NOT NULL,
CONSTRAINT [PK_BadgeBranch] PRIMARY KEY CLUSTERED
(
[BID] ASC,
[CID] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
) ON [PRIMARY]

GO


GO

/****** Object:  Table [dbo].[BadgeCategory]    Script Date: 12/05/2014 13:32:07 ******/

GO


GO

CREATE TABLE [dbo].[BadgeCategory](
[BID] [int] NOT NULL,
[CID] [int] NOT NULL,
CONSTRAINT [PK_BadgeCategory] PRIMARY KEY CLUSTERED
(
[BID] ASC,
[CID] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
) ON [PRIMARY]

GO


GO

/****** Object:  Table [dbo].[BadgeLocation]    Script Date: 12/05/2014 13:32:07 ******/

GO


GO

CREATE TABLE [dbo].[BadgeLocation](
[BID] [int] NOT NULL,
[CID] [int] NOT NULL,
CONSTRAINT [PK_BadgeLocation] PRIMARY KEY CLUSTERED
(
[BID] ASC,
[CID] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
) ON [PRIMARY]

GO


GO

/****** Object:  Table [dbo].[BookList]    Script Date: 12/05/2014 13:32:07 ******/

GO


GO


GO

CREATE TABLE [dbo].[BookList](
[BLID] [int] IDENTITY(1,1) NOT NULL,
[AdminName] [varchar](50) NULL,
[ListName] [varchar](50) NULL,
[AdminDescription] [text] NULL,
[Description] [text] NULL,
[LiteracyLevel1] [int] NULL,
[LiteracyLevel2] [int] NULL,
[ProgID] [int] NULL,
[LibraryID] [int] NULL,
[AwardBadgeID] [int] NULL,
[AwardPoints] [int] NULL,
[LastModDate] [datetime] NULL,
[LastModUser] [varchar](50) NULL,
[AddedDate] [datetime] NULL,
[AddedUser] [varchar](50) NULL,
[TenID] [int] NULL,
[FldInt1] [int] NULL,
[FldInt2] [int] NULL,
[FldInt3] [int] NULL,
[FldBit1] [bit] NULL,
[FldBit2] [bit] NULL,
[FldBit3] [bit] NULL,
[FldText1] [text] NULL,
[FldText2] [text] NULL,
[FldText3] [text] NULL,
[NumBooksToComplete] [int] NULL,
CONSTRAINT [PK_BookList] PRIMARY KEY CLUSTERED
(
[BLID] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
) ON [PRIMARY] TEXTIMAGE_ON [PRIMARY]

GO


GO


GO

/****** Object:  Table [dbo].[BookListBooks]    Script Date: 12/05/2014 13:32:07 ******/

GO


GO


GO

CREATE TABLE [dbo].[BookListBooks](
[BLBID] [int] IDENTITY(1,1) NOT NULL,
[BLID] [int] NULL,
[Author] [varchar](50) NULL,
[Title] [varchar](150) NULL,
[ISBN] [varchar](50) NULL,
[URL] [varchar](150) NULL,
[LastModDate] [datetime] NULL,
[LastModUser] [varchar](50) NULL,
[AddedDate] [datetime] NULL,
[AddedUser] [varchar](50) NULL,
[TenID] [int] NULL,
[FldInt1] [int] NULL,
[FldInt2] [int] NULL,
[FldInt3] [int] NULL,
[FldBit1] [bit] NULL,
[FldBit2] [bit] NULL,
[FldBit3] [bit] NULL,
[FldText1] [text] NULL,
[FldText2] [text] NULL,
[FldText3] [text] NULL,
CONSTRAINT [PK_BookListBooks] PRIMARY KEY CLUSTERED
(
[BLBID] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
) ON [PRIMARY] TEXTIMAGE_ON [PRIMARY]

GO


GO


GO

/****** Object:  Table [dbo].[Code]    Script Date: 12/05/2014 13:32:07 ******/

GO


GO


GO

CREATE TABLE [dbo].[Code](
[CID] [int] IDENTITY(1,1) NOT NULL,
[CTID] [int] NULL,
[Code] [varchar](25) NULL,
[Description] [varchar](80) NULL,
[TenID] [int] NULL,
[FldInt1] [int] NULL,
[FldInt2] [int] NULL,
[FldInt3] [int] NULL,
[FldBit1] [bit] NULL,
[FldBit2] [bit] NULL,
[FldBit3] [bit] NULL,
[FldText1] [text] NULL,
[FldText2] [text] NULL,
[FldText3] [text] NULL,
CONSTRAINT [PK_Code] PRIMARY KEY CLUSTERED
(
[CID] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
) ON [PRIMARY] TEXTIMAGE_ON [PRIMARY]

GO


GO


GO

/****** Object:  Table [dbo].[CodeType]    Script Date: 12/05/2014 13:32:07 ******/

GO


GO


GO

CREATE TABLE [dbo].[CodeType](
[CTID] [int] IDENTITY(1,1) NOT NULL,
[isSystem] [bit] NULL,
[CodeTypeName] [varchar](50) NULL,
[Description] [text] NULL,
[TenID] [int] NULL,
[FldInt1] [int] NULL,
[FldInt2] [int] NULL,
[FldInt3] [int] NULL,
[FldBit1] [bit] NULL,
[FldBit2] [bit] NULL,
[FldBit3] [bit] NULL,
[FldText1] [text] NULL,
[FldText2] [text] NULL,
[FldText3] [text] NULL,
CONSTRAINT [PK_CodeType] PRIMARY KEY CLUSTERED
(
[CTID] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
) ON [PRIMARY] TEXTIMAGE_ON [PRIMARY]

GO


GO


GO

/****** Object:  Table [dbo].[CustomEventFields]    Script Date: 12/05/2014 13:32:07 ******/

GO


GO


GO

CREATE TABLE [dbo].[CustomEventFields](
[CID] [int] IDENTITY(1,1) NOT NULL,
[Use1] [bit] NULL,
[Label1] [varchar](50) NULL,
[DDValues1] [varchar](50) NULL,
[Use2] [bit] NULL,
[Use3] [bit] NULL,
[Label2] [varchar](50) NULL,
[Label3] [varchar](50) NULL,
[DDValues2] [varchar](50) NULL,
[DDValues3] [varchar](50) NULL,
[LastModDate] [datetime] NULL,
[LastModUser] [varchar](50) NULL,
[AddedDate] [datetime] NULL,
[AddedUser] [varchar](50) NULL,
[TenID] [int] NOT NULL,
[FldInt1] [int] NULL,
[FldInt2] [int] NULL,
[FldInt3] [int] NULL,
[FldBit1] [bit] NULL,
[FldBit2] [bit] NULL,
[FldBit3] [bit] NULL,
[FldText1] [text] NULL,
[FldText2] [text] NULL,
[FldText3] [text] NULL,
CONSTRAINT [PK_CustomEventFields] PRIMARY KEY CLUSTERED
(
[TenID] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
) ON [PRIMARY] TEXTIMAGE_ON [PRIMARY]

GO


GO


GO

/****** Object:  Table [dbo].[CustomRegistrationFields]    Script Date: 12/05/2014 13:32:07 ******/

GO


GO


GO

CREATE TABLE [dbo].[CustomRegistrationFields](
[CID] [int] IDENTITY(1,1) NOT NULL,
[Use1] [bit] NULL,
[Label1] [varchar](50) NULL,
[DDValues1] [varchar](50) NULL,
[Use2] [bit] NULL,
[Use3] [bit] NULL,
[Use4] [bit] NULL,
[Use5] [bit] NULL,
[Label2] [varchar](50) NULL,
[Label3] [varchar](50) NULL,
[Label4] [varchar](50) NULL,
[Label5] [varchar](50) NULL,
[DDValues2] [varchar](50) NULL,
[DDValues3] [varchar](50) NULL,
[DDValues4] [varchar](50) NULL,
[DDValues5] [varchar](50) NULL,
[LastModDate] [datetime] NULL,
[LastModUser] [varchar](50) NULL,
[AddedDate] [datetime] NULL,
[AddedUser] [varchar](50) NULL,
[TenID] [int] NULL,
[FldInt1] [int] NULL,
[FldInt2] [int] NULL,
[FldInt3] [int] NULL,
[FldBit1] [bit] NULL,
[FldBit2] [bit] NULL,
[FldBit3] [bit] NULL,
[FldText1] [text] NULL,
[FldText2] [text] NULL,
[FldText3] [text] NULL,
CONSTRAINT [PK_CustomRegistrationFields] PRIMARY KEY CLUSTERED
(
[CID] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
) ON [PRIMARY] TEXTIMAGE_ON [PRIMARY]

GO


GO


GO

/****** Object:  Table [dbo].[Event]    Script Date: 12/05/2014 13:32:07 ******/

GO


GO


GO

CREATE TABLE [dbo].[Event](
[EID] [int] IDENTITY(1,1) NOT NULL,
[EventTitle] [varchar](150) NULL,
[EventDate] [datetime] NULL,
[EventTime] [varchar](15) NULL,
[HTML] [text] NULL,
[SecretCode] [varchar](50) NULL,
[NumberPoints] [int] NULL,
[BadgeID] [int] NULL,
[BranchID] [int] NULL,
[Custom1] [varchar](50) NULL,
[Custom2] [varchar](50) NULL,
[Custom3] [varchar](50) NULL,
[LastModDate] [datetime] NULL,
[LastModUser] [varchar](50) NULL,
[AddedDate] [datetime] NULL,
[AddedUser] [varchar](50) NULL,
[TenID] [int] NULL,
[FldInt1] [int] NULL,
[FldInt2] [int] NULL,
[FldInt3] [int] NULL,
[FldBit1] [bit] NULL,
[FldBit2] [bit] NULL,
[FldBit3] [bit] NULL,
[FldText1] [text] NULL,
[FldText2] [text] NULL,
[FldText3] [text] NULL,
[EndDate] [datetime] NULL,
[EndTime] [varchar](50) NULL,
[ShortDescription] [text] NULL,
CONSTRAINT [PK_Event] PRIMARY KEY CLUSTERED
(
[EID] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
) ON [PRIMARY] TEXTIMAGE_ON [PRIMARY]

GO


GO


GO

/****** Object:  Table [dbo].[GamePlayStats]    Script Date: 12/05/2014 13:32:07 ******/

GO


GO


GO

CREATE TABLE [dbo].[GamePlayStats](
[GPSID] [int] IDENTITY(1,1) NOT NULL,
[PID] [int] NULL,
[MGID] [int] NULL,
[MGType] [int] NULL,
[Started] [datetime] NULL,
[Difficulty] [varchar](50) NULL,
[CompletedPlay] [bit] NULL,
[Completed] [datetime] NULL,
CONSTRAINT [PK_GamePlayStats] PRIMARY KEY CLUSTERED
(
[GPSID] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
) ON [PRIMARY]

GO


GO


GO

/****** Object:  Table [dbo].[LibraryCrosswalk]    Script Date: 12/05/2014 13:32:07 ******/

GO


GO


GO

CREATE TABLE [dbo].[LibraryCrosswalk](
[ID] [int] IDENTITY(1,1) NOT NULL,
[BranchID] [int] NULL,
[DistrictID] [int] NULL,
[City] [varchar](50) NULL,
[TenID] [int] NULL,
[FldInt1] [int] NULL,
[FldInt2] [int] NULL,
[FldInt3] [int] NULL,
[FldBit1] [bit] NULL,
[FldBit2] [bit] NULL,
[FldBit3] [bit] NULL,
[FldText1] [text] NULL,
[FldText2] [text] NULL,
[FldText3] [text] NULL,
CONSTRAINT [PK_LibraryCrosswalk] PRIMARY KEY CLUSTERED
(
[ID] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
) ON [PRIMARY] TEXTIMAGE_ON [PRIMARY]

GO


GO


GO

/****** Object:  Table [dbo].[MGChooseAdv]    Script Date: 12/05/2014 13:32:07 ******/

GO


GO


GO

CREATE TABLE [dbo].[MGChooseAdv](
[CAID] [int] IDENTITY(1,1) NOT NULL,
[MGID] [int] NULL,
[EnableMediumDifficulty] [bit] NULL,
[EnableHardDifficulty] [bit] NULL,
[LastModDate] [datetime] NULL,
[LastModUser] [varchar](50) NULL,
[AddedDate] [datetime] NULL,
[AddedUser] [varchar](50) NULL,
CONSTRAINT [PK_MGChooseAdv] PRIMARY KEY CLUSTERED
(
[CAID] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
) ON [PRIMARY]

GO


GO


GO

/****** Object:  Table [dbo].[MGChooseAdvSlides]    Script Date: 12/05/2014 13:32:07 ******/

GO


GO


GO

CREATE TABLE [dbo].[MGChooseAdvSlides](
[CASID] [int] IDENTITY(1,1) NOT NULL,
[CAID] [int] NOT NULL,
[MGID] [int] NULL,
[Difficulty] [int] NULL,
[StepNumber] [int] NULL,
[SlideText] [text] NULL,
[FirstImageGoToStep] [int] NULL,
[SecondImageGoToStep] [int] NULL,
[LastModDate] [datetime] NULL,
[LastModUser] [varchar](50) NULL,
[AddedDate] [datetime] NULL,
[AddedUser] [varchar](50) NULL,
CONSTRAINT [PK_MGChooseAdvSlides] PRIMARY KEY CLUSTERED
(
[CASID] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
) ON [PRIMARY] TEXTIMAGE_ON [PRIMARY]

GO


GO


GO

/****** Object:  Table [dbo].[MGCodeBreaker]    Script Date: 12/05/2014 13:32:07 ******/

GO


GO


GO

CREATE TABLE [dbo].[MGCodeBreaker](
[CBID] [int] IDENTITY(1,1) NOT NULL,
[MGID] [int] NULL,
[EasyString] [varchar](250) NULL,
[EnableMediumDifficulty] [bit] NULL,
[EnableHardDifficulty] [bit] NULL,
[MediumString] [varchar](250) NULL,
[HardString] [varchar](250) NULL,
[LastModDate] [datetime] NULL,
[LastModUser] [varchar](50) NULL,
[AddedDate] [datetime] NULL,
[AddedUser] [varchar](50) NULL,
CONSTRAINT [PK_MGCodeBreaker] PRIMARY KEY CLUSTERED
(
[CBID] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
) ON [PRIMARY]

GO


GO


GO

/****** Object:  Table [dbo].[MGCodeBreakerKey]    Script Date: 12/05/2014 13:32:07 ******/

GO


GO

CREATE TABLE [dbo].[MGCodeBreakerKey](
[CBKID] [int] IDENTITY(1,1) NOT NULL,
[CBID] [int] NOT NULL,
[MGID] [int] NULL,
CONSTRAINT [PK_MGCodeBreakerKey] PRIMARY KEY CLUSTERED
(
[CBKID] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
) ON [PRIMARY]

GO


GO

/****** Object:  Table [dbo].[MGHiddenPic]    Script Date: 12/05/2014 13:32:07 ******/

GO


GO


GO

CREATE TABLE [dbo].[MGHiddenPic](
[HPID] [int] IDENTITY(1,1) NOT NULL,
[MGID] [int] NULL,
[EnableMediumDifficulty] [bit] NULL,
[EnableHardDifficulty] [bit] NULL,
[EasyDictionary] [text] NULL,
[MediumDictionary] [text] NULL,
[HardDictionary] [text] NULL,
[LastModDate] [datetime] NULL,
[LastModUser] [varchar](50) NULL,
[AddedDate] [datetime] NULL,
[AddedUser] [varchar](50) NULL,
CONSTRAINT [PK_MGHiddenPic] PRIMARY KEY CLUSTERED
(
[HPID] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
) ON [PRIMARY] TEXTIMAGE_ON [PRIMARY]

GO


GO


GO

/****** Object:  Table [dbo].[MGHiddenPicBk]    Script Date: 12/05/2014 13:32:07 ******/

GO


GO


GO

CREATE TABLE [dbo].[MGHiddenPicBk](
[HPBID] [int] IDENTITY(1,1) NOT NULL,
[HPID] [int] NOT NULL,
[MGID] [int] NULL,
[LastModDate] [datetime] NULL,
[LastModUser] [varchar](50) NULL,
[AddedDate] [datetime] NULL,
[AddedUser] [varchar](50) NULL,
CONSTRAINT [PK_MGHiddenPicBk] PRIMARY KEY CLUSTERED
(
[HPBID] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
) ON [PRIMARY]

GO


GO


GO

/****** Object:  Table [dbo].[MGMatchingGame]    Script Date: 12/05/2014 13:32:07 ******/

GO


GO


GO

CREATE TABLE [dbo].[MGMatchingGame](
[MAGID] [int] IDENTITY(1,1) NOT NULL,
[MGID] [int] NULL,
[CorrectRoundsToWinCount] [int] NULL,
[EasyGameSize] [int] NULL,
[MediumGameSize] [int] NULL,
[HardGameSize] [int] NULL,
[EnableMediumDifficulty] [bit] NULL,
[EnableHardDifficulty] [bit] NULL,
[LastModDate] [datetime] NULL,
[LastModUser] [varchar](50) NULL,
[AddedDate] [datetime] NULL,
[AddedUser] [varchar](50) NULL,
CONSTRAINT [PK_MGMatchingGame] PRIMARY KEY CLUSTERED
(
[MAGID] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
) ON [PRIMARY]

GO


GO


GO

/****** Object:  Table [dbo].[MGMatchingGameTiles]    Script Date: 12/05/2014 13:32:07 ******/

GO


GO


GO

CREATE TABLE [dbo].[MGMatchingGameTiles](
[MAGTID] [int] IDENTITY(1,1) NOT NULL,
[MAGID] [int] NOT NULL,
[MGID] [int] NULL,
[Tile1UseMedium] [bit] NULL,
[Tile1UseHard] [bit] NULL,
[Tile2UseMedium] [bit] NULL,
[Tile2UseHard] [bit] NULL,
[Tile3UseMedium] [bit] NULL,
[Tile3UseHard] [bit] NULL,
[LastModDate] [datetime] NULL,
[LastModUser] [varchar](50) NULL,
[AddedDate] [datetime] NULL,
[AddedUser] [varchar](50) NULL,
CONSTRAINT [PK_MGMatchingGameTiles] PRIMARY KEY CLUSTERED
(
[MAGTID] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
) ON [PRIMARY]

GO


GO


GO

/****** Object:  Table [dbo].[MGMixAndMatch]    Script Date: 12/05/2014 13:32:07 ******/

GO


GO


GO

CREATE TABLE [dbo].[MGMixAndMatch](
[MMID] [int] IDENTITY(1,1) NOT NULL,
[MGID] [int] NULL,
[CorrectRoundsToWinCount] [int] NULL,
[EnableMediumDifficulty] [bit] NULL,
[EnableHardDifficulty] [bit] NULL,
[LastModDate] [datetime] NULL,
[LastModUser] [varchar](50) NULL,
[AddedDate] [datetime] NULL,
[AddedUser] [varchar](50) NULL,
CONSTRAINT [PK_MGMixAndMatch] PRIMARY KEY CLUSTERED
(
[MMID] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
) ON [PRIMARY]

GO


GO


GO

/****** Object:  Table [dbo].[MGMixAndMatchItems]    Script Date: 12/05/2014 13:32:07 ******/

GO


GO


GO

CREATE TABLE [dbo].[MGMixAndMatchItems](
[MMIID] [int] IDENTITY(1,1) NOT NULL,
[MMID] [int] NOT NULL,
[MGID] [int] NULL,
[ItemImage] [varchar](150) NULL,
[EasyLabel] [varchar](150) NULL,
[MediumLabel] [varchar](150) NULL,
[HardLabel] [varchar](150) NULL,
[AudioEasy] [varchar](150) NULL,
[AudioMedium] [varchar](150) NULL,
[AudioHard] [varchar](150) NULL,
[LastModDate] [datetime] NULL,
[LastModUser] [varchar](50) NULL,
[AddedDate] [datetime] NULL,
[AddedUser] [varchar](50) NULL,
CONSTRAINT [PK_MGMixAndMatchItems] PRIMARY KEY CLUSTERED
(
[MMIID] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
) ON [PRIMARY]

GO


GO


GO

/****** Object:  Table [dbo].[MGOnlineBook]    Script Date: 12/05/2014 13:32:07 ******/

GO


GO


GO

CREATE TABLE [dbo].[MGOnlineBook](
[OBID] [int] IDENTITY(1,1) NOT NULL,
[MGID] [int] NULL,
[EnableMediumDifficulty] [bit] NULL,
[EnableHardDifficulty] [bit] NULL,
[LastModDate] [datetime] NULL,
[LastModUser] [varchar](50) NULL,
[AddedDate] [datetime] NULL,
[AddedUser] [varchar](50) NULL,
CONSTRAINT [PK_MGOnlineBook] PRIMARY KEY CLUSTERED
(
[OBID] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
) ON [PRIMARY]

GO


GO


GO

/****** Object:  Table [dbo].[MGOnlineBookPages]    Script Date: 12/05/2014 13:32:07 ******/

GO


GO


GO

CREATE TABLE [dbo].[MGOnlineBookPages](
[OBPGID] [int] IDENTITY(1,1) NOT NULL,
[OBID] [int] NULL,
[MGID] [int] NULL,
[PageNumber] [int] NULL,
[TextEasy] [text] NULL,
[TextMedium] [text] NULL,
[TextHard] [text] NULL,
[AudioEasy] [varchar](150) NULL,
[AudioMedium] [varchar](150) NULL,
[AudioHard] [varchar](150) NULL,
[LastModDate] [datetime] NULL,
[LastModUser] [varchar](50) NULL,
[AddedDate] [datetime] NULL,
[AddedUser] [varchar](50) NULL,
CONSTRAINT [PK_MGOnlineBookPages] PRIMARY KEY CLUSTERED
(
[OBPGID] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
) ON [PRIMARY] TEXTIMAGE_ON [PRIMARY]

GO


GO


GO

/****** Object:  Table [dbo].[MGWordMatch]    Script Date: 12/05/2014 13:32:07 ******/

GO


GO


GO

CREATE TABLE [dbo].[MGWordMatch](
[WMID] [int] IDENTITY(1,1) NOT NULL,
[MGID] [int] NULL,
[CorrectRoundsToWinCount] [int] NULL,
[NumOptionsToChooseFrom] [int] NULL,
[EnableMediumDifficulty] [bit] NULL,
[EnableHardDifficulty] [bit] NULL,
[LastModDate] [datetime] NULL,
[LastModUser] [varchar](50) NULL,
[AddedDate] [datetime] NULL,
[AddedUser] [varchar](50) NULL,
CONSTRAINT [PK_WGMixAndMatch] PRIMARY KEY CLUSTERED
(
[WMID] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
) ON [PRIMARY]

GO


GO


GO

/****** Object:  Table [dbo].[MGWordMatchItems]    Script Date: 12/05/2014 13:32:07 ******/

GO


GO


GO

CREATE TABLE [dbo].[MGWordMatchItems](
[WMIID] [int] IDENTITY(1,1) NOT NULL,
[WMID] [int] NOT NULL,
[MGID] [int] NULL,
[ItemImage] [varchar](150) NULL,
[EasyLabel] [varchar](150) NULL,
[MediumLabel] [varchar](150) NULL,
[HardLabel] [varchar](150) NULL,
[AudioEasy] [varchar](150) NULL,
[AudioMedium] [varchar](150) NULL,
[AudioHard] [varchar](150) NULL,
[LastModDate] [datetime] NULL,
[LastModUser] [varchar](50) NULL,
[AddedDate] [datetime] NULL,
[AddedUser] [varchar](50) NULL,
CONSTRAINT [PK_MGWordMatchItems] PRIMARY KEY CLUSTERED
(
[WMIID] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
) ON [PRIMARY]

GO


GO


GO

/****** Object:  Table [dbo].[Minigame]    Script Date: 12/05/2014 13:32:07 ******/

GO


GO


GO

CREATE TABLE [dbo].[Minigame](
[MGID] [int] IDENTITY(1,1) NOT NULL,
[MiniGameType] [int] NULL,
[MiniGameTypeName] [varchar](50) NULL,
[AdminName] [varchar](50) NULL,
[GameName] [varchar](50) NULL,
[isActive] [bit] NULL,
[NumberPoints] [int] NULL,
[AwardedBadgeID] [int] NULL,
[Acknowledgements] [text] NULL,
[LastModDate] [datetime] NULL,
[LastModUser] [varchar](50) NULL,
[AddedDate] [datetime] NULL,
[AddedUser] [varchar](50) NULL,
[TenID] [int] NULL,
[FldInt1] [int] NULL,
[FldInt2] [int] NULL,
[FldInt3] [int] NULL,
[FldBit1] [bit] NULL,
[FldBit2] [bit] NULL,
[FldBit3] [bit] NULL,
[FldText1] [text] NULL,
[FldText2] [text] NULL,
[FldText3] [text] NULL,
CONSTRAINT [PK_Minigame] PRIMARY KEY CLUSTERED
(
[MGID] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
) ON [PRIMARY] TEXTIMAGE_ON [PRIMARY]

GO


GO


GO

/****** Object:  Table [dbo].[Notifications]    Script Date: 12/05/2014 13:32:07 ******/

GO


GO


GO

CREATE TABLE [dbo].[Notifications](
[NID] [int] IDENTITY(1,1) NOT NULL,
[PID_To] [int] NULL,
[PID_From] [int] NULL,
[isQuestion] [bit] NULL,
[Subject] [varchar](150) NULL,
[Body] [text] NULL,
[AddedDate] [datetime] NULL,
[AddedUser] [varchar](50) NULL,
[LastModDate] [datetime] NULL,
[LastModUser] [varchar](50) NULL,
[TenID] [int] NULL,
[FldInt1] [int] NULL,
[FldInt2] [int] NULL,
[FldInt3] [int] NULL,
[FldBit1] [bit] NULL,
[FldBit2] [bit] NULL,
[FldBit3] [bit] NULL,
[FldText1] [text] NULL,
[FldText2] [text] NULL,
[FldText3] [text] NULL,
[isUnread] [bit] NULL,
CONSTRAINT [PK_Notifications] PRIMARY KEY CLUSTERED
(
[NID] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
) ON [PRIMARY] TEXTIMAGE_ON [PRIMARY]

GO


GO


GO

/****** Object:  Table [dbo].[Offer]    Script Date: 12/05/2014 13:32:07 ******/

GO


GO


GO

CREATE TABLE [dbo].[Offer](
[OID] [int] IDENTITY(100000,1) NOT NULL,
[isEnabled] [bit] NULL,
[AdminName] [varchar](50) NULL,
[Title] [varchar](150) NULL,
[ExternalRedirectFlag] [bit] NULL,
[RedirectURL] [varchar](150) NULL,
[MaxImpressions] [int] NULL,
[TotalImpressions] [int] NULL,
[SerialPrefix] [varchar](50) NULL,
[ZipCode] [varchar](5) NULL,
[AgeStart] [int] NULL,
[AgeEnd] [int] NULL,
[ProgramId] [int] NULL,
[BranchId] [int] NULL,
[LastModDate] [datetime] NULL,
[LastModUser] [varchar](50) NULL,
[AddedDate] [datetime] NULL,
[AddedUser] [varchar](50) NULL,
[TenID] [int] NULL,
[FldInt1] [int] NULL,
[FldInt2] [int] NULL,
[FldInt3] [int] NULL,
[FldBit1] [bit] NULL,
[FldBit2] [bit] NULL,
[FldBit3] [bit] NULL,
[FldText1] [text] NULL,
[FldText2] [text] NULL,
[FldText3] [text] NULL,
CONSTRAINT [PK_Offer] PRIMARY KEY CLUSTERED
(
[OID] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
) ON [PRIMARY] TEXTIMAGE_ON [PRIMARY]

GO


GO


GO

/****** Object:  Table [dbo].[Patron]    Script Date: 12/05/2014 13:32:07 ******/

GO


GO


GO

CREATE TABLE [dbo].[Patron](
[PID] [int] IDENTITY(100000,1) NOT NULL,
[IsMasterAccount] [bit] NULL,
[MasterAcctPID] [int] NULL,
[Username] [varchar](50) NULL,
[Password] [varchar](50) NULL,
[DOB] [datetime] NULL,
[Age] [int] NULL,
[SchoolGrade] [varchar](5) NULL,
[ProgID] [int] NULL,
[FirstName] [varchar](50) NULL,
[MiddleName] [varchar](50) NULL,
[LastName] [varchar](50) NULL,
[Gender] [varchar](1) NULL,
[EmailAddress] [varchar](150) NULL,
[PhoneNumber] [varchar](20) NULL,
[StreetAddress1] [varchar](80) NULL,
[StreetAddress2] [varchar](80) NULL,
[City] [varchar](20) NULL,
[State] [varchar](2) NULL,
[ZipCode] [varchar](10) NULL,
[Country] [varchar](50) NULL,
[County] [varchar](50) NULL,
[ParentGuardianFirstName] [varchar](50) NULL,
[ParentGuardianLastName] [varchar](50) NULL,
[ParentGuardianMiddleName] [varchar](50) NULL,
[PrimaryLibrary] [int] NULL,
[LibraryCard] [varchar](20) NULL,
[SchoolName] [varchar](50) NULL,
[District] [varchar](50) NULL,
[Teacher] [varchar](20) NULL,
[GroupTeamName] [varchar](20) NULL,
[SchoolType] [int] NULL,
[LiteracyLevel1] [int] NULL,
[LiteracyLevel2] [int] NULL,
[ParentPermFlag] [bit] NULL,
[Over18Flag] [bit] NULL,
[ShareFlag] [bit] NULL,
[TermsOfUseflag] [bit] NULL,
[Custom1] [varchar](50) NULL,
[Custom2] [varchar](50) NULL,
[Custom3] [varchar](50) NULL,
[Custom4] [varchar](50) NULL,
[Custom5] [varchar](50) NULL,
[AvatarID] [int] NULL,
[RegistrationDate] [datetime] NULL,
[SDistrict] [int] NULL,
[TenID] [int] NULL,
[FldInt1] [int] NULL,
[FldInt2] [int] NULL,
[FldInt3] [int] NULL,
[FldBit1] [bit] NULL,
[FldBit2] [bit] NULL,
[FldBit3] [bit] NULL,
[FldText1] [text] NULL,
[FldText2] [text] NULL,
[FldText3] [text] NULL,
[Score1] [int] NULL,
[Score2] [int] NULL,
[Score1Pct] [decimal](18, 2) NULL,
[Score2Pct] [decimal](18, 2) NULL,
[Score1Date] [datetime] NULL,
[Score2Date] [datetime] NULL,
CONSTRAINT [PK_Patron] PRIMARY KEY CLUSTERED
(
[PID] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
) ON [PRIMARY] TEXTIMAGE_ON [PRIMARY]

GO


GO


GO

/****** Object:  Table [dbo].[PatronBadges]    Script Date: 12/05/2014 13:32:07 ******/

GO


GO

CREATE TABLE [dbo].[PatronBadges](
[PBID] [int] IDENTITY(1,1) NOT NULL,
[PID] [int] NULL,
[BadgeID] [int] NULL,
[DateEarned] [datetime] NULL,
CONSTRAINT [PK_PatronBadges] PRIMARY KEY CLUSTERED
(
[PBID] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
) ON [PRIMARY]

GO


GO

/****** Object:  Table [dbo].[PatronBookLists]    Script Date: 12/05/2014 13:32:07 ******/

GO


GO

CREATE TABLE [dbo].[PatronBookLists](
[PBLBID] [int] IDENTITY(1,1) NOT NULL,
[PID] [int] NULL,
[BLBID] [int] NOT NULL,
[BLID] [int] NULL,
[HasReadFlag] [bit] NULL,
[LastModDate] [datetime] NULL,
CONSTRAINT [PK_PatronBookLists] PRIMARY KEY CLUSTERED
(
[PBLBID] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
) ON [PRIMARY]

GO


GO

/****** Object:  Table [dbo].[PatronPoints]    Script Date: 12/05/2014 13:32:07 ******/

GO


GO


GO

CREATE TABLE [dbo].[PatronPoints](
[PPID] [int] IDENTITY(1,1) NOT NULL,
[PID] [int] NULL,
[NumPoints] [int] NULL,
[AwardDate] [datetime] NULL,
[AwardReason] [varchar](50) NULL,
[AwardReasonCd] [int] NULL,
[BadgeAwardedFlag] [bit] NULL,
[BadgeID] [int] NULL,
[PBID] [int] NULL,
[isReading] [bit] NULL,
[LogID] [int] NULL,
[isEvent] [bit] NULL,
[EventID] [int] NULL,
[EventCode] [varchar](50) NULL,
[isBookList] [bit] NULL,
[BookListID] [int] NULL,
[isGame] [bit] NULL,
[isGameLevelActivity] [bit] NULL,
[GameID] [int] NULL,
[GameLevel] [int] NULL,
[GameLevelID] [int] NULL,
[GameLevelActivityID] [int] NULL,
CONSTRAINT [PK_PatronPoints] PRIMARY KEY CLUSTERED
(
[PPID] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
) ON [PRIMARY]

GO


GO


GO

/****** Object:  Table [dbo].[PatronPrizes]    Script Date: 12/05/2014 13:32:07 ******/

GO


GO


GO

CREATE TABLE [dbo].[PatronPrizes](
[PPID] [int] IDENTITY(1,1) NOT NULL,
[PID] [int] NULL,
[PrizeSource] [int] NULL,
[BadgeID] [int] NULL,
[DrawingID] [int] NULL,
[PrizeName] [varchar](50) NULL,
[RedeemedFlag] [bit] NULL,
[LastModDate] [datetime] NULL,
[LastModUser] [varchar](50) NULL,
[AddedDate] [datetime] NULL,
[AddedUser] [varchar](50) NULL,
CONSTRAINT [PK_PatronPrizes] PRIMARY KEY CLUSTERED
(
[PPID] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
) ON [PRIMARY]

GO


GO


GO

/****** Object:  Table [dbo].[PatronReadingLog]    Script Date: 12/05/2014 13:32:07 ******/

GO


GO


GO

CREATE TABLE [dbo].[PatronReadingLog](
[PRLID] [int] IDENTITY(1,1) NOT NULL,
[PID] [int] NULL,
[ReadingType] [int] NULL,
[ReadingTypeLabel] [varchar](50) NULL,
[ReadingAmount] [int] NULL,
[ReadingPoints] [int] NULL,
[LoggingDate] [varchar](50) NULL,
[Author] [varchar](50) NULL,
[Title] [varchar](150) NULL,
[HasReview] [bit] NULL,
[ReviewID] [int] NULL,
CONSTRAINT [PK_PatronReadingLog] PRIMARY KEY CLUSTERED
(
[PRLID] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
) ON [PRIMARY]

GO


GO


GO

/****** Object:  Table [dbo].[PatronReview]    Script Date: 12/05/2014 13:32:07 ******/

GO


GO


GO

CREATE TABLE [dbo].[PatronReview](
[PRID] [int] IDENTITY(1,1) NOT NULL,
[PID] [int] NULL,
[PRLID] [int] NULL,
[Author] [varchar](50) NULL,
[Title] [varchar](150) NULL,
[Review] [text] NULL,
[isApproved] [bit] NULL,
[ReviewDate] [datetime] NULL,
[ApprovalDate] [datetime] NULL,
[ApprovedBy] [varchar](50) NULL,
CONSTRAINT [PK_PatronReview] PRIMARY KEY CLUSTERED
(
[PRID] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
) ON [PRIMARY] TEXTIMAGE_ON [PRIMARY]

GO


GO


GO

/****** Object:  Table [dbo].[PatronRewardCodes]    Script Date: 12/05/2014 13:32:07 ******/

GO


GO


GO

CREATE TABLE [dbo].[PatronRewardCodes](
[PRCID] [int] IDENTITY(1,1) NOT NULL,
[PID] [int] NULL,
[BadgeID] [int] NULL,
[ProgID] [int] NULL,
[RewardCode] [varchar](100) NULL,
[LastModDate] [datetime] NULL,
[LastModUser] [varchar](50) NULL,
[AddedDate] [datetime] NULL,
[AddedUser] [varchar](50) NULL,
CONSTRAINT [PK_PatronRewardCodes] PRIMARY KEY CLUSTERED
(
[PRCID] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
) ON [PRIMARY]

GO


GO


GO

/****** Object:  Table [dbo].[PrizeDrawing]    Script Date: 12/05/2014 13:32:07 ******/

GO


GO


GO

CREATE TABLE [dbo].[PrizeDrawing](
[PDID] [int] IDENTITY(1,1) NOT NULL,
[PrizeName] [varchar](250) NULL,
[TID] [int] NULL,
[DrawingDateTime] [datetime] NULL,
[NumWinners] [int] NULL,
[LastModDate] [datetime] NULL,
[LastModUser] [varchar](50) NULL,
[AddedDate] [datetime] NULL,
[AddedUser] [varchar](50) NULL,
[TenID] [int] NULL,
[FldInt1] [int] NULL,
[FldInt2] [int] NULL,
[FldInt3] [int] NULL,
[FldBit1] [bit] NULL,
[FldBit2] [bit] NULL,
[FldBit3] [bit] NULL,
[FldText1] [text] NULL,
[FldText2] [text] NULL,
[FldText3] [text] NULL,
CONSTRAINT [PK_PrizeDrawing] PRIMARY KEY CLUSTERED
(
[PDID] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
) ON [PRIMARY] TEXTIMAGE_ON [PRIMARY]

GO


GO


GO

/****** Object:  Table [dbo].[PrizeDrawingWinners]    Script Date: 12/05/2014 13:32:07 ******/

GO


GO


GO

CREATE TABLE [dbo].[PrizeDrawingWinners](
[PDWID] [int] IDENTITY(1,1) NOT NULL,
[PDID] [int] NULL,
[PatronID] [int] NULL,
[NotificationID] [int] NULL,
[PrizePickedUpFlag] [bit] NULL,
[LastModDate] [datetime] NULL,
[LastModUser] [varchar](50) NULL,
[AddedDate] [datetime] NULL,
[AddedUser] [varchar](50) NULL,
CONSTRAINT [PK_PrizeDrawingWinners] PRIMARY KEY CLUSTERED
(
[PDWID] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
) ON [PRIMARY]

GO


GO


GO

/****** Object:  Table [dbo].[PrizeTemplate]    Script Date: 12/05/2014 13:32:07 ******/

GO


GO


GO

CREATE TABLE [dbo].[PrizeTemplate](
[TID] [int] IDENTITY(1,1) NOT NULL,
[TName] [varchar](150) NULL,
[NumPrizes] [int] NULL,
[IncPrevWinnersFlag] [bit] NULL,
[SendNotificationFlag] [bit] NULL,
[NotificationSubject] [varchar](250) NULL,
[NotificationMessage] [text] NULL,
[ProgID] [int] NULL,
[Gender] [varchar](1) NULL,
[SchoolName] [varchar](50) NULL,
[PrimaryLibrary] [int] NULL,
[MinPoints] [int] NULL,
[MaxPoints] [int] NULL,
[LogDateStart] [datetime] NULL,
[LogDateEnd] [datetime] NULL,
[MinReviews] [int] NULL,
[MaxReviews] [int] NULL,
[ReviewDateStart] [datetime] NULL,
[ReviewDateEnd] [datetime] NULL,
[LastModDate] [datetime] NULL,
[LastModUser] [varchar](50) NULL,
[AddedDate] [datetime] NULL,
[AddedUser] [varchar](50) NULL,
[TenID] [int] NULL,
[FldInt1] [int] NULL,
[FldInt2] [int] NULL,
[FldInt3] [int] NULL,
[FldBit1] [bit] NULL,
[FldBit2] [bit] NULL,
[FldBit3] [bit] NULL,
[FldText1] [text] NULL,
[FldText2] [text] NULL,
[FldText3] [text] NULL,
CONSTRAINT [PK_PrizeTemplate] PRIMARY KEY CLUSTERED
(
[TID] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
) ON [PRIMARY] TEXTIMAGE_ON [PRIMARY]

GO


GO


GO

/****** Object:  Table [dbo].[ProgramCodes]    Script Date: 12/05/2014 13:32:07 ******/

GO


GO


GO

CREATE TABLE [dbo].[ProgramCodes](
[PCID] [int] IDENTITY(1,1) NOT NULL,
[PID] [int] NULL,
[CodeNumber] [int] NULL,
[CodeValue] [uniqueidentifier] NULL,
[isUsed] [bit] NULL,
[DateCreated] [datetime] NULL,
[DateUsed] [datetime] NULL,
[PatronId] [int] NULL,
[ShortCode] [varchar](20) NULL,
CONSTRAINT [PK_ProgramCodes] PRIMARY KEY CLUSTERED
(
[PCID] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
) ON [PRIMARY]

GO


GO


GO

/****** Object:  Table [dbo].[ProgramGame]    Script Date: 12/05/2014 13:32:07 ******/

GO


GO


GO

CREATE TABLE [dbo].[ProgramGame](
[PGID] [int] IDENTITY(1,1) NOT NULL,
[GameName] [varchar](50) NULL,
[MapImage] [varchar](50) NULL,
[BonusMapImage] [varchar](50) NULL,
[BoardWidth] [int] NULL,
[BoardHeight] [int] NULL,
[BonusLevelPointMultiplier] [money] NULL,
[LevelCompleteImage] [varchar](50) NULL,
[LastModUser] [varchar](50) NULL,
[AddedDate] [datetime] NULL,
[AddedUser] [varchar](50) NULL,
[LastModDate] [datetime] NULL,
[TenID] [int] NULL,
[FldInt1] [int] NULL,
[FldInt2] [int] NULL,
[FldInt3] [int] NULL,
[FldBit1] [bit] NULL,
[FldBit2] [bit] NULL,
[FldBit3] [bit] NULL,
[FldText1] [text] NULL,
[FldText2] [text] NULL,
[FldText3] [text] NULL,
[Minigame1ID] [int] NULL,
[Minigame2ID] [int] NULL,
CONSTRAINT [PK_ProgramGame] PRIMARY KEY CLUSTERED
(
[PGID] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
) ON [PRIMARY] TEXTIMAGE_ON [PRIMARY]

GO


GO


GO

/****** Object:  Table [dbo].[ProgramGameLevel]    Script Date: 12/05/2014 13:32:07 ******/

GO


GO


GO

CREATE TABLE [dbo].[ProgramGameLevel](
[PGLID] [int] IDENTITY(1,1) NOT NULL,
[PGID] [int] NULL,
[LevelNumber] [int] NULL,
[LocationX] [int] NULL,
[LocationY] [int] NULL,
[LocationXBonus] [int] NULL,
[LocationYBonus] [int] NULL,
[PointNumber] [int] NULL,
[Minigame1ID] [int] NULL,
[Minigame2ID] [int] NULL,
[AwardBadgeID] [int] NULL,
[Minigame1IDBonus] [int] NULL,
[Minigame2IDBonus] [int] NULL,
[AwardBadgeIDBonus] [int] NULL,
[LastModDate] [datetime] NULL,
[LastModUser] [varchar](50) NULL,
[AddedDate] [datetime] NULL,
[AddedUser] [varchar](50) NULL,
CONSTRAINT [PK_ProgramGameLevel] PRIMARY KEY CLUSTERED
(
[PGLID] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
) ON [PRIMARY]

GO


GO


GO

/****** Object:  Table [dbo].[ProgramGamePointConversion]    Script Date: 12/05/2014 13:32:07 ******/

GO


GO


GO

CREATE TABLE [dbo].[ProgramGamePointConversion](
[PGCID] [int] IDENTITY(1,1) NOT NULL,
[PGID] [int] NULL,
[ActivityTypeId] [int] NULL,
[ActivityCount] [int] NULL,
[PointCount] [int] NULL,
[LastModDate] [datetime] NULL,
[LastModUser] [varchar](50) NULL,
[AddedDate] [datetime] NULL,
[AddedUser] [varchar](50) NULL,
CONSTRAINT [PK_ProgramGamePointConversion] PRIMARY KEY CLUSTERED
(
[PGCID] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
) ON [PRIMARY]

GO


GO


GO

/****** Object:  Table [dbo].[Programs]    Script Date: 12/05/2014 13:32:07 ******/

GO


GO


GO

CREATE TABLE [dbo].[Programs](
[PID] [int] IDENTITY(1,1) NOT NULL,
[AdminName] [varchar](50) NULL,
[Title] [varchar](50) NULL,
[TabName] [varchar](20) NULL,
[POrder] [int] NULL,
[IsActive] [bit] NULL,
[IsHidden] [bit] NULL,
[StartDate] [datetime] NULL,
[EndDate] [datetime] NULL,
[MaxAge] [int] NULL,
[MaxGrade] [int] NULL,
[LoggingStart] [datetime] NULL,
[LoggingEnd] [datetime] NULL,
[ParentalConsentFlag] [bit] NULL,
[ParentalConsentText] [text] NULL,
[PatronReviewFlag] [bit] NULL,
[LogoutURL] [varchar](150) NULL,
[ProgramGameID] [int] NULL,
[HTML1] [text] NULL,
[HTML2] [text] NULL,
[HTML3] [text] NULL,
[HTML4] [text] NULL,
[HTML5] [text] NULL,
[HTML6] [text] NULL,
[BannerImage] [varchar](150) NULL,
[RegistrationBadgeID] [int] NULL,
[CompletionPoints] [int] NULL,
[LastModUser] [varchar](50) NULL,
[AddedDate] [datetime] NULL,
[AddedUser] [varchar](50) NULL,
[LastModDate] [datetime] NULL,
[TenID] [int] NULL,
[FldInt1] [int] NULL,
[FldInt2] [int] NULL,
[FldInt3] [int] NULL,
[FldBit1] [bit] NULL,
[FldBit2] [bit] NULL,
[FldBit3] [bit] NULL,
[FldText1] [text] NULL,
[FldText2] [text] NULL,
[FldText3] [text] NULL,
[PreTestID] [int] NULL,
[PostTestID] [int] NULL,
[PreTestMandatory] [bit] NULL,
[PretestEndDate] [datetime] NULL,
[PostTestStartDate] [datetime] NULL,
CONSTRAINT [PK_Programs] PRIMARY KEY CLUSTERED
(
[PID] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
) ON [PRIMARY] TEXTIMAGE_ON [PRIMARY]

GO


GO


GO

/****** Object:  Table [dbo].[RegistrationSettings]    Script Date: 12/05/2014 13:32:07 ******/

GO


GO


GO

CREATE TABLE [dbo].[RegistrationSettings](
[RID] [int] IDENTITY(1,1) NOT NULL,
[Literacy1Label] [varchar](50) NULL,
[Literacy2Label] [varchar](50) NULL,
[DOB_Prompt] [bit] NULL,
[Age_Prompt] [bit] NULL,
[SchoolGrade_Prompt] [bit] NULL,
[FirstName_Prompt] [bit] NULL,
[MiddleName_Prompt] [bit] NULL,
[LastName_Prompt] [bit] NULL,
[Gender_Prompt] [bit] NULL,
[EmailAddress_Prompt] [bit] NULL,
[PhoneNumber_Prompt] [bit] NULL,
[StreetAddress1_Prompt] [bit] NULL,
[StreetAddress2_Prompt] [bit] NULL,
[City_Prompt] [bit] NULL,
[State_Prompt] [bit] NULL,
[ZipCode_Prompt] [bit] NULL,
[Country_Prompt] [bit] NULL,
[County_Prompt] [bit] NULL,
[ParentGuardianFirstName_Prompt] [bit] NULL,
[ParentGuardianLastName_Prompt] [bit] NULL,
[ParentGuardianMiddleName_Prompt] [bit] NULL,
[PrimaryLibrary_Prompt] [bit] NULL,
[LibraryCard_Prompt] [bit] NULL,
[SchoolName_Prompt] [bit] NULL,
[District_Prompt] [bit] NULL,
[Teacher_Prompt] [bit] NULL,
[GroupTeamName_Prompt] [bit] NULL,
[SchoolType_Prompt] [bit] NULL,
[LiteracyLevel1_Prompt] [bit] NULL,
[LiteracyLevel2_Prompt] [bit] NULL,
[ParentPermFlag_Prompt] [bit] NULL,
[Over18Flag_Prompt] [bit] NULL,
[ShareFlag_Prompt] [bit] NULL,
[TermsOfUseflag_Prompt] [bit] NULL,
[Custom1_Prompt] [bit] NULL,
[Custom2_Prompt] [bit] NULL,
[Custom3_Prompt] [bit] NULL,
[Custom4_Prompt] [bit] NULL,
[Custom5_Prompt] [bit] NULL,
[DOB_Req] [bit] NULL,
[Age_Req] [bit] NULL,
[SchoolGrade_Req] [bit] NULL,
[FirstName_Req] [bit] NULL,
[MiddleName_Req] [bit] NULL,
[LastName_Req] [bit] NULL,
[Gender_Req] [bit] NULL,
[EmailAddress_Req] [bit] NULL,
[PhoneNumber_Req] [bit] NULL,
[StreetAddress1_Req] [bit] NULL,
[StreetAddress2_Req] [bit] NULL,
[City_Req] [bit] NULL,
[State_Req] [bit] NULL,
[ZipCode_Req] [bit] NULL,
[Country_Req] [bit] NULL,
[County_Req] [bit] NULL,
[ParentGuardianFirstName_Req] [bit] NULL,
[ParentGuardianLastName_Req] [bit] NULL,
[ParentGuardianMiddleName_Req] [bit] NULL,
[PrimaryLibrary_Req] [bit] NULL,
[LibraryCard_Req] [bit] NULL,
[SchoolName_Req] [bit] NULL,
[District_Req] [bit] NULL,
[Teacher_Req] [bit] NULL,
[GroupTeamName_Req] [bit] NULL,
[SchoolType_Req] [bit] NULL,
[LiteracyLevel1_Req] [bit] NULL,
[LiteracyLevel2_Req] [bit] NULL,
[ParentPermFlag_Req] [bit] NULL,
[Over18Flag_Req] [bit] NULL,
[ShareFlag_Req] [bit] NULL,
[TermsOfUseflag_Req] [bit] NULL,
[Custom1_Req] [bit] NULL,
[Custom2_Req] [bit] NULL,
[Custom3_Req] [bit] NULL,
[Custom4_Req] [bit] NULL,
[Custom5_Req] [bit] NULL,
[DOB_Show] [bit] NULL,
[Age_Show] [bit] NULL,
[SchoolGrade_Show] [bit] NULL,
[FirstName_Show] [bit] NULL,
[MiddleName_Show] [bit] NULL,
[LastName_Show] [bit] NULL,
[Gender_Show] [bit] NULL,
[EmailAddress_Show] [bit] NULL,
[PhoneNumber_Show] [bit] NULL,
[StreetAddress1_Show] [bit] NULL,
[StreetAddress2_Show] [bit] NULL,
[City_Show] [bit] NULL,
[State_Show] [bit] NULL,
[ZipCode_Show] [bit] NULL,
[Country_Show] [bit] NULL,
[County_Show] [bit] NULL,
[ParentGuardianFirstName_Show] [bit] NULL,
[ParentGuardianLastName_Show] [bit] NULL,
[ParentGuardianMiddleName_Show] [bit] NULL,
[PrimaryLibrary_Show] [bit] NULL,
[LibraryCard_Show] [bit] NULL,
[SchoolName_Show] [bit] NULL,
[District_Show] [bit] NULL,
[Teacher_Show] [bit] NULL,
[GroupTeamName_Show] [bit] NULL,
[SchoolType_Show] [bit] NULL,
[LiteracyLevel1_Show] [bit] NULL,
[LiteracyLevel2_Show] [bit] NULL,
[ParentPermFlag_Show] [bit] NULL,
[Over18Flag_Show] [bit] NULL,
[ShareFlag_Show] [bit] NULL,
[TermsOfUseflag_Show] [bit] NULL,
[Custom1_Show] [bit] NULL,
[Custom2_Show] [bit] NULL,
[Custom3_Show] [bit] NULL,
[Custom4_Show] [bit] NULL,
[Custom5_Show] [bit] NULL,
[DOB_Edit] [bit] NULL,
[Age_Edit] [bit] NULL,
[SchoolGrade_Edit] [bit] NULL,
[FirstName_Edit] [bit] NULL,
[MiddleName_Edit] [bit] NULL,
[LastName_Edit] [bit] NULL,
[Gender_Edit] [bit] NULL,
[EmailAddress_Edit] [bit] NULL,
[PhoneNumber_Edit] [bit] NULL,
[StreetAddress1_Edit] [bit] NULL,
[StreetAddress2_Edit] [bit] NULL,
[City_Edit] [bit] NULL,
[State_Edit] [bit] NULL,
[ZipCode_Edit] [bit] NULL,
[Country_Edit] [bit] NULL,
[County_Edit] [bit] NULL,
[ParentGuardianFirstName_Edit] [bit] NULL,
[ParentGuardianLastName_Edit] [bit] NULL,
[ParentGuardianMiddleName_Edit] [bit] NULL,
[PrimaryLibrary_Edit] [bit] NULL,
[LibraryCard_Edit] [bit] NULL,
[SchoolName_Edit] [bit] NULL,
[District_Edit] [bit] NULL,
[Teacher_Edit] [bit] NULL,
[GroupTeamName_Edit] [bit] NULL,
[SchoolType_Edit] [bit] NULL,
[LiteracyLevel1_Edit] [bit] NULL,
[LiteracyLevel2_Edit] [bit] NULL,
[ParentPermFlag_Edit] [bit] NULL,
[Over18Flag_Edit] [bit] NULL,
[ShareFlag_Edit] [bit] NULL,
[TermsOfUseflag_Edit] [bit] NULL,
[Custom1_Edit] [bit] NULL,
[Custom2_Edit] [bit] NULL,
[Custom3_Edit] [bit] NULL,
[Custom4_Edit] [bit] NULL,
[Custom5_Edit] [bit] NULL,
[LastModDate] [datetime] NULL,
[LastModUser] [varchar](50) NULL,
[AddedDate] [datetime] NULL,
[AddedUser] [varchar](50) NULL,
[SDistrict_Prompt] [bit] NULL,
[SDistrict_Req] [bit] NULL,
[SDistrict_Show] [bit] NULL,
[SDistrict_Edit] [bit] NULL,
[TenID] [int] NULL,
[FldInt1] [int] NULL,
[FldInt2] [int] NULL,
[FldInt3] [int] NULL,
[FldBit1] [bit] NULL,
[FldBit2] [bit] NULL,
[FldBit3] [bit] NULL,
[FldText1] [text] NULL,
[FldText2] [text] NULL,
[FldText3] [text] NULL,
CONSTRAINT [PK_RegistrationSettings] PRIMARY KEY CLUSTERED
(
[RID] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
) ON [PRIMARY] TEXTIMAGE_ON [PRIMARY]

GO


GO


GO

/****** Object:  Table [dbo].[ReportTemplate]    Script Date: 12/05/2014 13:32:07 ******/

GO


GO


GO

CREATE TABLE [dbo].[ReportTemplate](
[RTID] [int] IDENTITY(1,1) NOT NULL,
[ProgId] [int] NULL,
[ReportName] [varchar](150) NULL,
[DisplayFilters] [bit] NULL,
[DOBFrom] [datetime] NULL,
[DOBTo] [datetime] NULL,
[AgeFrom] [int] NULL,
[AgeTo] [int] NULL,
[SchoolGrade] [varchar](5) NULL,
[FirstName] [varchar](50) NULL,
[LastName] [varchar](50) NULL,
[Gender] [varchar](1) NULL,
[EmailAddress] [varchar](150) NULL,
[PhoneNumber] [varchar](20) NULL,
[City] [varchar](20) NULL,
[State] [varchar](2) NULL,
[ZipCode] [varchar](10) NULL,
[County] [varchar](50) NULL,
[PrimaryLibrary] [int] NULL,
[SchoolName] [varchar](50) NULL,
[District] [varchar](50) NULL,
[Teacher] [varchar](20) NULL,
[GroupTeamName] [varchar](20) NULL,
[SchoolType] [int] NULL,
[LiteracyLevel1] [int] NULL,
[LiteracyLevel2] [int] NULL,
[Custom1] [varchar](50) NULL,
[Custom2] [varchar](50) NULL,
[Custom3] [varchar](50) NULL,
[Custom4] [varchar](50) NULL,
[Custom5] [varchar](50) NULL,
[RegistrationDateStart] [datetime] NULL,
[RegistrationDateEnd] [datetime] NULL,
[PointsMin] [int] NULL,
[PointsMax] [int] NULL,
[PointsStart] [datetime] NULL,
[PointsEnd] [datetime] NULL,
[EventCode] [varchar](50) NULL,
[EarnedBadge] [int] NULL,
[PhysicalPrizeEarned] [varchar](50) NULL,
[PhysicalPrizeRedeemed] [bit] NULL,
[PhysicalPrizeStartDate] [datetime] NULL,
[PhysicalPrizeEndDate] [datetime] NULL,
[ReviewsMin] [int] NULL,
[ReviewsMax] [int] NULL,
[ReviewTitle] [varchar](150) NULL,
[ReviewAuthor] [varchar](100) NULL,
[ReviewStartDate] [datetime] NULL,
[ReviewEndDate] [datetime] NULL,
[RandomDrawingName] [varchar](50) NULL,
[RandomDrawingNum] [int] NULL,
[RandomDrawingStartDate] [datetime] NULL,
[RandomDrawingEndDate] [datetime] NULL,
[HasBeenDrawn] [bit] NULL,
[HasRedeemend] [bit] NULL,
[PIDInc] [bit] NULL,
[UsernameInc] [bit] NULL,
[DOBInc] [bit] NULL,
[AgeInc] [bit] NULL,
[SchoolGradeInc] [bit] NULL,
[FirstNameInc] [bit] NULL,
[LastNameInc] [bit] NULL,
[GenderInc] [bit] NULL,
[EmailAddressInc] [bit] NULL,
[PhoneNumberInc] [bit] NULL,
[CityInc] [bit] NULL,
[StateInc] [bit] NULL,
[ZipCodeInc] [bit] NULL,
[CountyInc] [bit] NULL,
[PrimaryLibraryInc] [bit] NULL,
[SchoolNameInc] [bit] NULL,
[DistrictInc] [bit] NULL,
[TeacherInc] [bit] NULL,
[GroupTeamNameInc] [bit] NULL,
[SchoolTypeInc] [bit] NULL,
[LiteracyLevel1Inc] [bit] NULL,
[LiteracyLevel2Inc] [bit] NULL,
[Custom1Inc] [bit] NULL,
[Custom2Inc] [bit] NULL,
[Custom3Inc] [bit] NULL,
[Custom4Inc] [bit] NULL,
[Custom5Inc] [bit] NULL,
[RegistrationDateInc] [bit] NULL,
[PointsInc] [bit] NULL,
[EarnedBadgeInc] [bit] NULL,
[PhysicalPrizeNameInc] [bit] NOT NULL,
[PhysicalPrizeDateInc] [bit] NULL,
[NumReviewsInc] [bit] NULL,
[ReviewAuthorInc] [bit] NULL,
[ReviewTitleInc] [bit] NULL,
[ReviewDateInc] [bit] NULL,
[RandomDrawingNameInc] [bit] NULL,
[RandomDrawingNumInc] [bit] NULL,
[RandomDrawingDateInc] [bit] NULL,
[HasBeenDrawnInc] [bit] NULL,
[HasRedeemendInc] [bit] NULL,
[LastModDate] [datetime] NULL,
[LastModUser] [varchar](50) NULL,
[AddedDate] [datetime] NULL,
[AddedUser] [varchar](50) NULL,
[SDistrict] [varchar](50) NULL,
[SDistrictInc] [bit] NULL,
[TenID] [int] NULL,
[FldInt1] [int] NULL,
[FldInt2] [int] NULL,
[FldInt3] [int] NULL,
[FldBit1] [bit] NULL,
[FldBit2] [bit] NULL,
[FldBit3] [bit] NULL,
[FldText1] [text] NULL,
[FldText2] [text] NULL,
[FldText3] [text] NULL,
[Score1From] [int] NULL,
[Score1To] [int] NULL,
[Score1PctFrom] [int] NULL,
[Score1PctTo] [int] NULL,
[Score2From] [int] NULL,
[Score2To] [int] NULL,
[Score2PctFrom] [int] NULL,
[Score2PctTo] [int] NULL,
[Score1Inc] [bit] NULL,
[Score2Inc] [bit] NULL,
[Score1PctInc] [bit] NULL,
[Score2PctInc] [bit] NULL,
CONSTRAINT [PK_ReportTemplate] PRIMARY KEY CLUSTERED
(
[RTID] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
) ON [PRIMARY] TEXTIMAGE_ON [PRIMARY]

GO


GO


GO

/****** Object:  Table [dbo].[SchoolCrosswalk]    Script Date: 12/05/2014 13:32:07 ******/

GO


GO


GO

CREATE TABLE [dbo].[SchoolCrosswalk](
[ID] [int] IDENTITY(1,1) NOT NULL,
[SchoolID] [int] NULL,
[SchTypeID] [int] NULL,
[DistrictID] [int] NULL,
[City] [varchar](50) NULL,
[MinGrade] [int] NULL,
[MaxGrade] [int] NULL,
[MinAge] [int] NULL,
[MaxAge] [int] NULL,
[TenID] [int] NULL,
[FldInt1] [int] NULL,
[FldInt2] [int] NULL,
[FldInt3] [int] NULL,
[FldBit1] [bit] NULL,
[FldBit2] [bit] NULL,
[FldBit3] [bit] NULL,
[FldText1] [text] NULL,
[FldText2] [text] NULL,
[FldText3] [text] NULL,
CONSTRAINT [PK_SchoolCrosswalk] PRIMARY KEY CLUSTERED
(
[ID] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
) ON [PRIMARY] TEXTIMAGE_ON [PRIMARY]

GO


GO


GO

/****** Object:  Table [dbo].[SentEmailLog]    Script Date: 12/05/2014 13:32:07 ******/

GO


GO


GO

CREATE TABLE [dbo].[SentEmailLog](
[EID] [int] IDENTITY(1,1) NOT NULL,
[SentDateTime] [datetime] NULL,
[SentFrom] [varchar](150) NULL,
[SentTo] [varchar](150) NULL,
[Subject] [varchar](150) NULL,
[Body] [text] NULL,
CONSTRAINT [PK_SentEmailLog] PRIMARY KEY CLUSTERED
(
[EID] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
) ON [PRIMARY] TEXTIMAGE_ON [PRIMARY]

GO


GO


GO

/****** Object:  Table [dbo].[SQChoices]    Script Date: 12/05/2014 13:32:07 ******/

GO


GO


GO

CREATE TABLE [dbo].[SQChoices](
[SQCID] [int] IDENTITY(1,1) NOT NULL,
[QID] [int] NULL,
[ChoiceOrder] [int] NULL,
[ChoiceText] [varchar](50) NULL,
[Score] [int] NULL,
[JumpToQuestion] [int] NULL,
[AskClarification] [bit] NULL,
[ClarificationRequired] [bit] NULL,
[FldInt1] [int] NULL,
[FldInt2] [int] NULL,
[FldInt3] [int] NULL,
[FldBit1] [bit] NULL,
[FldBit2] [bit] NULL,
[FldBit3] [bit] NULL,
[FldText1] [text] NULL,
[FldText2] [text] NULL,
[FldText3] [text] NULL,
CONSTRAINT [PK_SQChoices] PRIMARY KEY CLUSTERED
(
[SQCID] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
) ON [PRIMARY] TEXTIMAGE_ON [PRIMARY]

GO


GO


GO

/****** Object:  Table [dbo].[SQMatrixLines]    Script Date: 12/05/2014 13:32:07 ******/

GO


GO


GO

CREATE TABLE [dbo].[SQMatrixLines](
[SQMLID] [int] IDENTITY(1,1) NOT NULL,
[QID] [int] NULL,
[LineOrder] [int] NULL,
[LineText] [varchar](500) NULL,
[FldInt1] [int] NULL,
[FldInt2] [int] NULL,
[FldInt3] [int] NULL,
[FldBit1] [bit] NULL,
[FldBit2] [bit] NULL,
[FldBit3] [bit] NULL,
[FldText1] [text] NULL,
[FldText2] [text] NULL,
[FldText3] [text] NULL,
CONSTRAINT [PK_SQMatrixLines] PRIMARY KEY CLUSTERED
(
[SQMLID] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
) ON [PRIMARY] TEXTIMAGE_ON [PRIMARY]

GO


GO


GO

/****** Object:  Table [dbo].[SRPGroupPermissions]    Script Date: 12/05/2014 13:32:07 ******/

GO


GO


GO

CREATE TABLE [dbo].[SRPGroupPermissions](
[GID] [int] NOT NULL,
[PermissionID] [int] NOT NULL,
[AddedDate] [datetime] NULL,
[AddedUser] [varchar](50) NULL,
CONSTRAINT [PK_GroupPermissions] PRIMARY KEY CLUSTERED
(
[GID] ASC,
[PermissionID] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
) ON [PRIMARY]

GO


GO


GO

/****** Object:  Table [dbo].[SRPGroups]    Script Date: 12/05/2014 13:32:07 ******/

GO


GO


GO

CREATE TABLE [dbo].[SRPGroups](
[GID] [int] IDENTITY(1000,1) NOT NULL,
[GroupName] [varchar](50) NULL,
[GroupDescription] [varchar](255) NULL,
[LastModDate] [datetime] NULL,
[LastModUser] [varchar](50) NULL,
[AddedDate] [datetime] NULL,
[AddedUser] [varchar](50) NULL,
[TenID] [int] NULL,
[FldInt1] [int] NULL,
[FldInt2] [int] NULL,
[FldInt3] [int] NULL,
[FldBit1] [bit] NULL,
[FldBit2] [bit] NULL,
[FldBit3] [bit] NULL,
[FldText1] [text] NULL,
[FldText2] [text] NULL,
[FldText3] [text] NULL,
CONSTRAINT [PK_SRPGroups] PRIMARY KEY CLUSTERED
(
[GID] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
) ON [PRIMARY] TEXTIMAGE_ON [PRIMARY]

GO


GO


GO

/****** Object:  Table [dbo].[SRPPermissionsMaster]    Script Date: 12/05/2014 13:32:07 ******/

GO


GO


GO

CREATE TABLE [dbo].[SRPPermissionsMaster](
[PermissionID] [int] NOT NULL,
[PermissionName] [varchar](50) NULL,
[PermissionDesc] [varchar](2000) NULL,
[MODID] [int] NULL,
CONSTRAINT [PK_SRPPermissionsMaster] PRIMARY KEY CLUSTERED
(
[PermissionID] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
) ON [PRIMARY]

GO


GO


GO

/****** Object:  Table [dbo].[SRPReport]    Script Date: 12/05/2014 13:32:07 ******/

GO


GO


GO

CREATE TABLE [dbo].[SRPReport](
[RID] [int] IDENTITY(1,1) NOT NULL,
[RTID] [int] NOT NULL,
[ProgId] [int] NULL,
[ReportName] [varchar](150) NULL,
[DisplayFilters] [bit] NULL,
[ReportFormat] [int] NULL,
[DOBFrom] [datetime] NULL,
[DOBTo] [datetime] NULL,
[AgeFrom] [int] NULL,
[AgeTo] [int] NULL,
[SchoolGrade] [varchar](5) NULL,
[FirstName] [varchar](50) NULL,
[LastName] [varchar](50) NULL,
[Gender] [varchar](1) NULL,
[EmailAddress] [varchar](150) NULL,
[PhoneNumber] [varchar](20) NULL,
[City] [varchar](20) NULL,
[State] [varchar](2) NULL,
[ZipCode] [varchar](10) NULL,
[County] [varchar](50) NULL,
[PrimaryLibrary] [int] NULL,
[SchoolName] [varchar](50) NULL,
[District] [varchar](50) NULL,
[Teacher] [varchar](20) NULL,
[GroupTeamName] [varchar](20) NULL,
[SchoolType] [int] NULL,
[LiteracyLevel1] [int] NULL,
[LiteracyLevel2] [int] NULL,
[Custom1] [varchar](50) NULL,
[Custom2] [varchar](50) NULL,
[Custom3] [varchar](50) NULL,
[Custom4] [varchar](50) NULL,
[Custom5] [varchar](50) NULL,
[RegistrationDateStart] [datetime] NULL,
[RegistrationDateEnd] [datetime] NULL,
[PointsMin] [int] NULL,
[PointsMax] [int] NULL,
[PointsStart] [datetime] NULL,
[PointsEnd] [datetime] NULL,
[EventCode] [varchar](50) NULL,
[EarnedBadge] [int] NULL,
[PhysicalPrizeEarned] [varchar](50) NULL,
[PhysicalPrizeRedeemed] [bit] NULL,
[PhysicalPrizeStartDate] [datetime] NULL,
[PhysicalPrizeEndDate] [datetime] NULL,
[ReviewsMin] [int] NULL,
[ReviewsMax] [int] NULL,
[ReviewTitle] [varchar](150) NULL,
[ReviewAuthor] [varchar](100) NULL,
[ReviewStartDate] [datetime] NULL,
[ReviewEndDate] [datetime] NULL,
[RandomDrawingName] [varchar](50) NULL,
[RandomDrawingNum] [int] NULL,
[RandomDrawingStartDate] [datetime] NULL,
[RandomDrawingEndDate] [datetime] NULL,
[HasBeenDrawn] [bit] NULL,
[HasRedeemend] [bit] NULL,
[PIDInc] [bit] NULL,
[UsernameInc] [bit] NULL,
[DOBInc] [bit] NULL,
[AgeInc] [bit] NULL,
[SchoolGradeInc] [bit] NULL,
[FirstNameInc] [bit] NULL,
[LastNameInc] [bit] NULL,
[GenderInc] [bit] NULL,
[EmailAddressInc] [bit] NULL,
[PhoneNumberInc] [bit] NULL,
[CityInc] [bit] NULL,
[StateInc] [bit] NULL,
[ZipCodeInc] [bit] NULL,
[CountyInc] [bit] NULL,
[PrimaryLibraryInc] [bit] NULL,
[SchoolNameInc] [bit] NULL,
[DistrictInc] [bit] NULL,
[TeacherInc] [bit] NULL,
[GroupTeamNameInc] [bit] NULL,
[SchoolTypeInc] [bit] NULL,
[LiteracyLevel1Inc] [bit] NULL,
[LiteracyLevel2Inc] [bit] NULL,
[Custom1Inc] [bit] NULL,
[Custom2Inc] [bit] NULL,
[Custom3Inc] [bit] NULL,
[Custom4Inc] [bit] NULL,
[Custom5Inc] [bit] NULL,
[RegistrationDateInc] [bit] NULL,
[PointsInc] [bit] NULL,
[EarnedBadgeInc] [bit] NULL,
[PhysicalPrizeNameInc] [bit] NOT NULL,
[PhysicalPrizeDateInc] [bit] NULL,
[NumReviewsInc] [bit] NULL,
[ReviewAuthorInc] [bit] NULL,
[ReviewTitleInc] [bit] NULL,
[ReviewDateInc] [bit] NULL,
[RandomDrawingNameInc] [bit] NULL,
[RandomDrawingNumInc] [bit] NULL,
[RandomDrawingDateInc] [bit] NULL,
[HasBeenDrawnInc] [bit] NULL,
[HasRedeemendInc] [bit] NULL,
[LastModDate] [datetime] NULL,
[LastModUser] [varchar](50) NULL,
[AddedDate] [datetime] NULL,
[AddedUser] [varchar](50) NULL,
[SDistrict] [varchar](50) NULL,
[SDistrictInc] [bit] NULL,
[TenID] [int] NULL,
[FldInt1] [int] NULL,
[FldInt2] [int] NULL,
[FldInt3] [int] NULL,
[FldBit1] [bit] NULL,
[FldBit2] [bit] NULL,
[FldBit3] [bit] NULL,
[FldText1] [text] NULL,
[FldText2] [text] NULL,
[FldText3] [text] NULL,
[Score1From] [int] NULL,
[Score1To] [int] NULL,
[Score1PctFrom] [int] NULL,
[Score1PctTo] [int] NULL,
[Score2From] [int] NULL,
[Score2To] [int] NULL,
[Score2PctFrom] [int] NULL,
[Score2PctTo] [int] NULL,
[Score1Inc] [bit] NULL,
[Score2Inc] [bit] NULL,
[Score1PctInc] [bit] NULL,
[Score2PctInc] [bit] NULL,
CONSTRAINT [PK_SRPReport] PRIMARY KEY CLUSTERED
(
[RID] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
) ON [PRIMARY] TEXTIMAGE_ON [PRIMARY]

GO


GO


GO

/****** Object:  Table [dbo].[SRPSettings]    Script Date: 12/05/2014 13:32:07 ******/

GO


GO


GO

CREATE TABLE [dbo].[SRPSettings](
[SID] [int] IDENTITY(1000,1) NOT NULL,
[Name] [varchar](50) NULL,
[Value] [text] NULL,
[StorageType] [varchar](50) NULL,
[EditType] [varchar](50) NULL,
[ModID] [int] NULL,
[Label] [varchar](50) NULL,
[Description] [varchar](500) NULL,
[ValueList] [varchar](5000) NULL,
[DefaultValue] [text] NULL,
[TenID] [int] NULL,
[FldInt1] [int] NULL,
[FldInt2] [int] NULL,
[FldInt3] [int] NULL,
[FldBit1] [bit] NULL,
[FldBit2] [bit] NULL,
[FldBit3] [bit] NULL,
[FldText1] [text] NULL,
[FldText2] [text] NULL,
[FldText3] [text] NULL,
CONSTRAINT [PK_SRPSettings] PRIMARY KEY CLUSTERED
(
[SID] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
) ON [PRIMARY] TEXTIMAGE_ON [PRIMARY]

GO


GO


GO

/****** Object:  Table [dbo].[SRPUser]    Script Date: 12/05/2014 13:32:07 ******/

GO


GO


GO

CREATE TABLE [dbo].[SRPUser](
[UID] [int] IDENTITY(1000,1) NOT NULL,
[Username] [varchar](50) NULL,
[Password] [varchar](50) NULL,
[FirstName] [varchar](50) NULL,
[LastName] [varchar](50) NULL,
[EmailAddress] [varchar](128) NULL,
[Division] [varchar](50) NULL,
[Department] [varchar](50) NULL,
[Title] [varchar](50) NULL,
[IsActive] [bit] NULL,
[MustResetPassword] [bit] NULL,
[IsDeleted] [bit] NULL,
[LastPasswordReset] [datetime] NULL,
[DeletedDate] [datetime] NULL,
[LastModDate] [datetime] NULL,
[LastModUser] [varchar](50) NULL,
[AddedDate] [datetime] NULL,
[AddedUser] [varchar](50) NULL,
[TenID] [int] NULL,
[FldInt1] [int] NULL,
[FldInt2] [int] NULL,
[FldInt3] [int] NULL,
[FldBit1] [bit] NULL,
[FldBit2] [bit] NULL,
[FldBit3] [bit] NULL,
[FldText1] [text] NULL,
[FldText2] [text] NULL,
[FldText3] [text] NULL,
CONSTRAINT [PK_SRPUser] PRIMARY KEY CLUSTERED
(
[UID] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
) ON [PRIMARY] TEXTIMAGE_ON [PRIMARY]

GO


GO


GO

/****** Object:  Table [dbo].[SRPUserGroups]    Script Date: 12/05/2014 13:32:07 ******/

GO


GO


GO

CREATE TABLE [dbo].[SRPUserGroups](
[UID] [int] NOT NULL,
[GID] [int] NOT NULL,
[AddedDate] [datetime] NULL,
[AddedUser] [varchar](50) NULL,
CONSTRAINT [PK_SRPUserGroups] PRIMARY KEY CLUSTERED
(
[UID] ASC,
[GID] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
) ON [PRIMARY]

GO


GO


GO

/****** Object:  Table [dbo].[SRPUserLoginHistory]    Script Date: 12/05/2014 13:32:07 ******/

GO


GO


GO

CREATE TABLE [dbo].[SRPUserLoginHistory](
[UIDLH] [int] IDENTITY(1000,1) NOT NULL,
[UID] [nchar](10) NULL,
[SessionsID] [varchar](128) NULL,
[StartDateTime] [datetime] NULL,
[IP] [varchar](50) NULL,
[MachineName] [varchar](50) NULL,
[Browser] [varchar](50) NULL,
[EndDateTime] [datetime] NULL,
CONSTRAINT [PK_SRPUserLoginHistory] PRIMARY KEY CLUSTERED
(
[UIDLH] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
) ON [PRIMARY]

GO


GO


GO

/****** Object:  Table [dbo].[SRPUserPermissions]    Script Date: 12/05/2014 13:32:07 ******/

GO


GO


GO

CREATE TABLE [dbo].[SRPUserPermissions](
[UID] [int] NOT NULL,
[PermissionID] [int] NOT NULL,
[AddedDate] [datetime] NULL,
[AddedUser] [varchar](50) NULL,
CONSTRAINT [PK_SRPUserPermissions] PRIMARY KEY CLUSTERED
(
[UID] ASC,
[PermissionID] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
) ON [PRIMARY]

GO


GO


GO

/****** Object:  Table [dbo].[Survey]    Script Date: 12/05/2014 13:32:07 ******/

GO


GO


GO

CREATE TABLE [dbo].[Survey](
[SID] [int] IDENTITY(1,1) NOT NULL,
[Name] [varchar](50) NULL,
[LongName] [varchar](150) NULL,
[Description] [text] NULL,
[Preamble] [text] NULL,
[Status] [int] NULL,
[TakenCount] [int] NULL,
[PatronCount] [int] NULL,
[CanBeScored] [bit] NULL,
[TenID] [int] NULL,
[FldInt1] [int] NULL,
[FldInt2] [int] NULL,
[FldInt3] [int] NULL,
[FldBit1] [bit] NULL,
[FldBit2] [bit] NULL,
[FldBit3] [bit] NULL,
[FldText1] [text] NULL,
[FldText2] [text] NULL,
[FldText3] [text] NULL,
CONSTRAINT [PK_Survey] PRIMARY KEY CLUSTERED
(
[SID] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
) ON [PRIMARY] TEXTIMAGE_ON [PRIMARY]

GO


GO


GO

/****** Object:  Table [dbo].[SurveyAnswers]    Script Date: 12/05/2014 13:32:07 ******/

GO


GO


GO

CREATE TABLE [dbo].[SurveyAnswers](
[SAID] [int] IDENTITY(1,1) NOT NULL,
[SRID] [int] NOT NULL,
[TenID] [int] NULL,
[PID] [int] NULL,
[SID] [int] NULL,
[QID] [int] NULL,
[SQMLID] [int] NULL,
[DateAnswered] [datetime] NULL,
[QType] [int] NULL,
[FreeFormAnswer] [text] NULL,
[ClarificationText] [text] NULL,
[ChoiceAnswerIDs] [varchar](2000) NULL,
[ChoiceAnswerText] [text] NULL,
[FldInt1] [int] NULL,
[FldInt2] [int] NULL,
[FldInt3] [int] NULL,
[FldBit1] [bit] NULL,
[FldBit2] [bit] NULL,
[FldBit3] [bit] NULL,
[FldText1] [text] NULL,
[FldText2] [text] NULL,
[FldText3] [text] NULL,
CONSTRAINT [PK_SurveyAnswers] PRIMARY KEY CLUSTERED
(
[SAID] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
) ON [PRIMARY] TEXTIMAGE_ON [PRIMARY]

GO


GO


GO

/****** Object:  Table [dbo].[SurveyQuestion]    Script Date: 12/05/2014 13:32:07 ******/

GO


GO


GO

CREATE TABLE [dbo].[SurveyQuestion](
[QID] [int] IDENTITY(1,1) NOT NULL,
[SID] [int] NULL,
[QNumber] [int] NULL,
[QType] [int] NULL,
[QName] [varchar](150) NULL,
[QText] [text] NULL,
[DisplayControl] [int] NULL,
[DisplayDirection] [int] NULL,
[IsRequired] [bit] NULL,
[FldInt1] [int] NULL,
[FldInt2] [int] NULL,
[FldInt3] [int] NULL,
[FldBit1] [bit] NULL,
[FldBit2] [bit] NULL,
[FldBit3] [bit] NULL,
[FldText1] [text] NULL,
[FldText2] [text] NULL,
[FldText3] [text] NULL,
CONSTRAINT [PK_SurveyQuestion] PRIMARY KEY CLUSTERED
(
[QID] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
) ON [PRIMARY] TEXTIMAGE_ON [PRIMARY]

GO


GO


GO

/****** Object:  Table [dbo].[SurveyResults]    Script Date: 12/05/2014 13:32:07 ******/

GO


GO


GO

CREATE TABLE [dbo].[SurveyResults](
[SRID] [int] IDENTITY(1,1) NOT NULL,
[TenID] [int] NULL,
[PID] [int] NULL,
[SID] [int] NULL,
[StartDate] [datetime] NULL,
[EndDate] [datetime] NULL,
[IsComplete] [bit] NULL,
[IsScorable] [bit] NULL,
[LastAnswered] [int] NULL,
[Score] [int] NULL,
[ScorePct] [decimal](5, 2) NULL,
[Source] [varchar](50) NULL,
[SourceID] [int] NULL,
[FldInt1] [int] NULL,
[FldInt2] [int] NULL,
[FldInt3] [int] NULL,
[FldBit1] [bit] NULL,
[FldBit2] [bit] NULL,
[FldBit3] [bit] NULL,
[FldText1] [text] NULL,
[FldText2] [text] NULL,
[FldText3] [text] NULL,
CONSTRAINT [PK_SurveyResults_1] PRIMARY KEY CLUSTERED
(
[SRID] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
) ON [PRIMARY] TEXTIMAGE_ON [PRIMARY]

GO


GO


GO

/****** Object:  Table [dbo].[Tenant]    Script Date: 12/05/2014 13:32:07 ******/

GO


GO


GO

CREATE TABLE [dbo].[Tenant](
[TenID] [int] IDENTITY(1,1) NOT NULL,
[Name] [varchar](150) NULL,
[LandingName] [varchar](50) NULL,
[AdminName] [varchar](50) NULL,
[isActiveFlag] [bit] NULL,
[isMasterFlag] [bit] NULL,
[Description] [text] NULL,
[DomainName] [varchar](50) NULL,
[showNotifications] [bit] NULL,
[showOffers] [bit] NULL,
[showBadges] [bit] NULL,
[showEvents] [bit] NULL,
[NotificationsMenuText] [varchar](50) NULL,
[OffersMenuText] [varchar](50) NULL,
[BadgesMenuText] [varchar](50) NULL,
[EventsMenuText] [varchar](50) NULL,
[LastModDate] [datetime] NULL,
[LastModUser] [varchar](50) NULL,
[AddedDate] [datetime] NULL,
[AddedUser] [varchar](50) NULL,
[FldInt1] [int] NULL,
[FldInt2] [int] NULL,
[FldInt3] [int] NULL,
[FldBit1] [bit] NULL,
[FldBit2] [bit] NULL,
[FldBit3] [bit] NULL,
[FldText1] [text] NULL,
[FldText2] [text] NULL,
[FldText3] [text] NULL,
CONSTRAINT [PK_Tenant] PRIMARY KEY CLUSTERED
(
[TenID] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
) ON [PRIMARY] TEXTIMAGE_ON [PRIMARY]

GO


GO


GO

/****** Object:  Table [dbo].[TenantInitData]    Script Date: 12/05/2014 13:32:07 ******/

GO


GO


GO

CREATE TABLE [dbo].[TenantInitData](
[InitID] [int] IDENTITY(1,1) NOT NULL,
[IntitType] [varchar](50) NULL,
[DestTID] [int] NULL,
[SrcPK] [int] NULL,
[DateCreated] [datetime] NULL,
[DstPK] [int] NULL,
CONSTRAINT [PK_TenantInitData] PRIMARY KEY CLUSTERED
(
[InitID] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
) ON [PRIMARY]

GO


GO

ALTER TABLE [dbo].[Avatar] ADD  CONSTRAINT [DF_Avatar_LastModDate]  DEFAULT (getdate()) FOR [LastModDate]
GO

ALTER TABLE [dbo].[Avatar] ADD  CONSTRAINT [DF_Avatar_LastModUser]  DEFAULT ('N/A') FOR [LastModUser]
GO

ALTER TABLE [dbo].[Avatar] ADD  CONSTRAINT [DF_Avatar_AddedDate]  DEFAULT (getdate()) FOR [AddedDate]
GO

ALTER TABLE [dbo].[Avatar] ADD  CONSTRAINT [DF_Avatar_AddedUser]  DEFAULT ('N/A') FOR [AddedUser]
GO

ALTER TABLE [dbo].[Award] ADD  CONSTRAINT [DF_Award_BadgeID]  DEFAULT ((0)) FOR [BadgeID]
GO

ALTER TABLE [dbo].[Award] ADD  CONSTRAINT [DF_Award_NumPoints]  DEFAULT ((0)) FOR [NumPoints]
GO

ALTER TABLE [dbo].[Award] ADD  CONSTRAINT [DF_Award_BranchID]  DEFAULT ((0)) FOR [BranchID]
GO

ALTER TABLE [dbo].[Award] ADD  CONSTRAINT [DF_Award_ProgramID]  DEFAULT ((0)) FOR [ProgramID]
GO

ALTER TABLE [dbo].[Award] ADD  CONSTRAINT [DF_Award_District]  DEFAULT ('') FOR [District]
GO

ALTER TABLE [dbo].[Award] ADD  CONSTRAINT [DF_Award_SchoolName]  DEFAULT ('') FOR [SchoolName]
GO

ALTER TABLE [dbo].[Award] ADD  CONSTRAINT [DF_Award_BadgeList]  DEFAULT ('') FOR [BadgeList]
GO

ALTER TABLE [dbo].[Award] ADD  CONSTRAINT [DF_Award_LastModDate]  DEFAULT (getdate()) FOR [LastModDate]
GO

ALTER TABLE [dbo].[Award] ADD  CONSTRAINT [DF_Award_LastModUser]  DEFAULT ('N/A') FOR [LastModUser]
GO

ALTER TABLE [dbo].[Award] ADD  CONSTRAINT [DF_Award_AddedDate]  DEFAULT (getdate()) FOR [AddedDate]
GO

ALTER TABLE [dbo].[Award] ADD  CONSTRAINT [DF_Award_AddedUser]  DEFAULT ('N/A') FOR [AddedUser]
GO

ALTER TABLE [dbo].[Badge] ADD  CONSTRAINT [DF_Badge_AssignProgramPrizeCode]  DEFAULT ((0)) FOR [AssignProgramPrizeCode]
GO

ALTER TABLE [dbo].[Badge] ADD  CONSTRAINT [DF_Badge_LastModDate]  DEFAULT (getdate()) FOR [LastModDate]
GO

ALTER TABLE [dbo].[Badge] ADD  CONSTRAINT [DF_Badge_LastModUser]  DEFAULT ('N/A') FOR [LastModUser]
GO

ALTER TABLE [dbo].[Badge] ADD  CONSTRAINT [DF_Badge_AddedDate]  DEFAULT (getdate()) FOR [AddedDate]
GO

ALTER TABLE [dbo].[Badge] ADD  CONSTRAINT [DF_Badge_AddedUser]  DEFAULT ('N/A') FOR [AddedUser]
GO

ALTER TABLE [dbo].[BookList] ADD  CONSTRAINT [DF_BookList_LastModDate]  DEFAULT (getdate()) FOR [LastModDate]
GO

ALTER TABLE [dbo].[BookList] ADD  CONSTRAINT [DF_BookList_LastModUser]  DEFAULT ('N/A') FOR [LastModUser]
GO

ALTER TABLE [dbo].[BookList] ADD  CONSTRAINT [DF_BookList_AddedDate]  DEFAULT (getdate()) FOR [AddedDate]
GO

ALTER TABLE [dbo].[BookList] ADD  CONSTRAINT [DF_BookList_AddedUser]  DEFAULT ('N/A') FOR [AddedUser]
GO

ALTER TABLE [dbo].[BookListBooks]  WITH CHECK ADD  CONSTRAINT [FK_BookListBooks_BookList] FOREIGN KEY([BLID])
REFERENCES [dbo].[BookList] ([BLID])
GO

ALTER TABLE [dbo].[BookListBooks] CHECK CONSTRAINT [FK_BookListBooks_BookList]
GO

ALTER TABLE [dbo].[BookListBooks] ADD  CONSTRAINT [DF_BookListBooks_LastModDate]  DEFAULT (getdate()) FOR [LastModDate]
GO

ALTER TABLE [dbo].[BookListBooks] ADD  CONSTRAINT [DF_BookListBooks_LastModUser]  DEFAULT ('N/A') FOR [LastModUser]
GO

ALTER TABLE [dbo].[BookListBooks] ADD  CONSTRAINT [DF_BookListBooks_AddedDate]  DEFAULT (getdate()) FOR [AddedDate]
GO

ALTER TABLE [dbo].[BookListBooks] ADD  CONSTRAINT [DF_BookListBooks_AddedUser]  DEFAULT ('N/A') FOR [AddedUser]
GO

ALTER TABLE [dbo].[Code]  WITH CHECK ADD  CONSTRAINT [FK_Code_CodeType] FOREIGN KEY([CTID])
REFERENCES [dbo].[CodeType] ([CTID])
GO

ALTER TABLE [dbo].[Code] CHECK CONSTRAINT [FK_Code_CodeType]
GO

ALTER TABLE [dbo].[CodeType] ADD  CONSTRAINT [DF_CodeType_isSystem]  DEFAULT ((0)) FOR [isSystem]
GO

ALTER TABLE [dbo].[CustomEventFields] ADD  CONSTRAINT [DF_CustomEventFields_Use1]  DEFAULT ((0)) FOR [Use1]
GO

ALTER TABLE [dbo].[CustomEventFields] ADD  CONSTRAINT [DF_CustomEventFields_Use2]  DEFAULT ((0)) FOR [Use2]
GO

ALTER TABLE [dbo].[CustomEventFields] ADD  CONSTRAINT [DF_CustomEventFields_Use3]  DEFAULT ((0)) FOR [Use3]
GO

ALTER TABLE [dbo].[CustomEventFields] ADD  CONSTRAINT [DF_CustomEventFields_LastModDate]  DEFAULT (getdate()) FOR [LastModDate]
GO

ALTER TABLE [dbo].[CustomEventFields] ADD  CONSTRAINT [DF_CustomEventFields_LastModUser]  DEFAULT ('N/A') FOR [LastModUser]
GO

ALTER TABLE [dbo].[CustomEventFields] ADD  CONSTRAINT [DF_CustomEventFields_AddedDate]  DEFAULT (getdate()) FOR [AddedDate]
GO

ALTER TABLE [dbo].[CustomEventFields] ADD  CONSTRAINT [DF_CustomEventFields_AddedUser]  DEFAULT ('N/A') FOR [AddedUser]
GO

ALTER TABLE [dbo].[CustomRegistrationFields] ADD  CONSTRAINT [DF_CustomRegistrationFields_Use1]  DEFAULT ((0)) FOR [Use1]
GO

ALTER TABLE [dbo].[CustomRegistrationFields] ADD  CONSTRAINT [DF_CustomRegistrationFields_Use2]  DEFAULT ((0)) FOR [Use2]
GO

ALTER TABLE [dbo].[CustomRegistrationFields] ADD  CONSTRAINT [DF_CustomRegistrationFields_Use3]  DEFAULT ((0)) FOR [Use3]
GO

ALTER TABLE [dbo].[CustomRegistrationFields] ADD  CONSTRAINT [DF_CustomRegistrationFields_Use4]  DEFAULT ((0)) FOR [Use4]
GO

ALTER TABLE [dbo].[CustomRegistrationFields] ADD  CONSTRAINT [DF_CustomRegistrationFields_Use5]  DEFAULT ((0)) FOR [Use5]
GO

ALTER TABLE [dbo].[CustomRegistrationFields] ADD  CONSTRAINT [DF_CustomRegistrationFields_LastModDate]  DEFAULT (getdate()) FOR [LastModDate]
GO

ALTER TABLE [dbo].[CustomRegistrationFields] ADD  CONSTRAINT [DF_CustomRegistrationFields_LastModUser]  DEFAULT ('N/A') FOR [LastModUser]
GO

ALTER TABLE [dbo].[CustomRegistrationFields] ADD  CONSTRAINT [DF_CustomRegistrationFields_AddedDate]  DEFAULT (getdate()) FOR [AddedDate]
GO

ALTER TABLE [dbo].[CustomRegistrationFields] ADD  CONSTRAINT [DF_CustomRegistrationFields_AddedUser]  DEFAULT ('N/A') FOR [AddedUser]
GO

ALTER TABLE [dbo].[Event] ADD  CONSTRAINT [DF_Event_LastModDate]  DEFAULT (getdate()) FOR [LastModDate]
GO

ALTER TABLE [dbo].[Event] ADD  CONSTRAINT [DF_Event_LastModUser]  DEFAULT ('N/A') FOR [LastModUser]
GO

ALTER TABLE [dbo].[Event] ADD  CONSTRAINT [DF_Event_AddedDate]  DEFAULT (getdate()) FOR [AddedDate]
GO

ALTER TABLE [dbo].[Event] ADD  CONSTRAINT [DF_Event_AddedUser]  DEFAULT ('N/A') FOR [AddedUser]
GO

ALTER TABLE [dbo].[GamePlayStats] ADD  CONSTRAINT [DF_GamePlayStats_Started]  DEFAULT (getdate()) FOR [Started]
GO

ALTER TABLE [dbo].[GamePlayStats] ADD  CONSTRAINT [DF_GamePlayStats_CompletedPlay]  DEFAULT ((0)) FOR [CompletedPlay]
GO

ALTER TABLE [dbo].[MGChooseAdv]  WITH CHECK ADD  CONSTRAINT [FK_MGChooseAdv_Minigame] FOREIGN KEY([MGID])
REFERENCES [dbo].[Minigame] ([MGID])
GO

ALTER TABLE [dbo].[MGChooseAdv] CHECK CONSTRAINT [FK_MGChooseAdv_Minigame]
GO

ALTER TABLE [dbo].[MGChooseAdv] ADD  CONSTRAINT [DF_MGChooseAdv_LastModDate]  DEFAULT (getdate()) FOR [LastModDate]
GO

ALTER TABLE [dbo].[MGChooseAdv] ADD  CONSTRAINT [DF_MGChooseAdv_LastModUser]  DEFAULT ('N/A') FOR [LastModUser]
GO

ALTER TABLE [dbo].[MGChooseAdv] ADD  CONSTRAINT [DF_MGChooseAdv_AddedDate]  DEFAULT (getdate()) FOR [AddedDate]
GO

ALTER TABLE [dbo].[MGChooseAdv] ADD  CONSTRAINT [DF_MGChooseAdv_AddedUser]  DEFAULT ('N/A') FOR [AddedUser]
GO

ALTER TABLE [dbo].[MGChooseAdvSlides]  WITH CHECK ADD  CONSTRAINT [FK_MGChooseAdvSlides_MGChooseAdv] FOREIGN KEY([CAID])
REFERENCES [dbo].[MGChooseAdv] ([CAID])
GO

ALTER TABLE [dbo].[MGChooseAdvSlides] CHECK CONSTRAINT [FK_MGChooseAdvSlides_MGChooseAdv]
GO

ALTER TABLE [dbo].[MGChooseAdvSlides] ADD  CONSTRAINT [DF_MGChooseAdvSlides_Difficulty]  DEFAULT ((1)) FOR [Difficulty]
GO

ALTER TABLE [dbo].[MGChooseAdvSlides] ADD  CONSTRAINT [DF_MGChooseAdvSlides_StepNumber]  DEFAULT ((-1)) FOR [StepNumber]
GO

ALTER TABLE [dbo].[MGChooseAdvSlides] ADD  CONSTRAINT [DF_MGChooseAdvSlides_LastModDate]  DEFAULT (getdate()) FOR [LastModDate]
GO

ALTER TABLE [dbo].[MGChooseAdvSlides] ADD  CONSTRAINT [DF_MGChooseAdvSlides_LastModUser]  DEFAULT ('N/A') FOR [LastModUser]
GO

ALTER TABLE [dbo].[MGChooseAdvSlides] ADD  CONSTRAINT [DF_MGChooseAdvSlides_AddedDate]  DEFAULT (getdate()) FOR [AddedDate]
GO

ALTER TABLE [dbo].[MGChooseAdvSlides] ADD  CONSTRAINT [DF_MGChooseAdvSlides_AddedUser]  DEFAULT ('N/A') FOR [AddedUser]
GO

ALTER TABLE [dbo].[MGCodeBreaker]  WITH CHECK ADD  CONSTRAINT [FK_MGCodeBreaker_Minigame] FOREIGN KEY([MGID])
REFERENCES [dbo].[Minigame] ([MGID])
GO

ALTER TABLE [dbo].[MGCodeBreaker] CHECK CONSTRAINT [FK_MGCodeBreaker_Minigame]
GO

ALTER TABLE [dbo].[MGCodeBreaker] ADD  CONSTRAINT [DF_MGCodeBreaker_LastModDate]  DEFAULT (getdate()) FOR [LastModDate]
GO

ALTER TABLE [dbo].[MGCodeBreaker] ADD  CONSTRAINT [DF_MGCodeBreaker_LastModUser]  DEFAULT ('N/A') FOR [LastModUser]
GO

ALTER TABLE [dbo].[MGCodeBreaker] ADD  CONSTRAINT [DF_MGCodeBreaker_AddedDate]  DEFAULT (getdate()) FOR [AddedDate]
GO

ALTER TABLE [dbo].[MGCodeBreaker] ADD  CONSTRAINT [DF_MGCodeBreaker_AddedUser]  DEFAULT ('N/A') FOR [AddedUser]
GO

ALTER TABLE [dbo].[MGCodeBreakerKey]  WITH CHECK ADD  CONSTRAINT [FK_MGCodeBreakerKey_MGCodeBreaker] FOREIGN KEY([CBID])
REFERENCES [dbo].[MGCodeBreaker] ([CBID])
GO

ALTER TABLE [dbo].[MGCodeBreakerKey] CHECK CONSTRAINT [FK_MGCodeBreakerKey_MGCodeBreaker]
GO

ALTER TABLE [dbo].[MGHiddenPic]  WITH CHECK ADD  CONSTRAINT [FK_MGHiddenPic_Minigame] FOREIGN KEY([MGID])
REFERENCES [dbo].[Minigame] ([MGID])
GO

ALTER TABLE [dbo].[MGHiddenPic] CHECK CONSTRAINT [FK_MGHiddenPic_Minigame]
GO

ALTER TABLE [dbo].[MGHiddenPic] ADD  CONSTRAINT [DF_MGHiddenPic_LastModDate]  DEFAULT (getdate()) FOR [LastModDate]
GO

ALTER TABLE [dbo].[MGHiddenPic] ADD  CONSTRAINT [DF_MGHiddenPic_LastModUser]  DEFAULT ('N/A') FOR [LastModUser]
GO

ALTER TABLE [dbo].[MGHiddenPic] ADD  CONSTRAINT [DF_MGHiddenPic_AddedDate]  DEFAULT (getdate()) FOR [AddedDate]
GO

ALTER TABLE [dbo].[MGHiddenPic] ADD  CONSTRAINT [DF_MGHiddenPic_AddedUser]  DEFAULT ('N/A') FOR [AddedUser]
GO

ALTER TABLE [dbo].[MGHiddenPicBk]  WITH CHECK ADD  CONSTRAINT [FK_MGHiddenPicBk_MGHiddenPic1] FOREIGN KEY([HPID])
REFERENCES [dbo].[MGHiddenPic] ([HPID])
GO

ALTER TABLE [dbo].[MGHiddenPicBk] CHECK CONSTRAINT [FK_MGHiddenPicBk_MGHiddenPic1]
GO

ALTER TABLE [dbo].[MGHiddenPicBk] ADD  CONSTRAINT [DF_MGHiddenPicBk_LastModDate]  DEFAULT (getdate()) FOR [LastModDate]
GO

ALTER TABLE [dbo].[MGHiddenPicBk] ADD  CONSTRAINT [DF_MGHiddenPicBk_LastModUser]  DEFAULT ('N/A') FOR [LastModUser]
GO

ALTER TABLE [dbo].[MGHiddenPicBk] ADD  CONSTRAINT [DF_MGHiddenPicBk_AddedDate]  DEFAULT (getdate()) FOR [AddedDate]
GO

ALTER TABLE [dbo].[MGHiddenPicBk] ADD  CONSTRAINT [DF_MGHiddenPicBk_AddedUser]  DEFAULT ('N/A') FOR [AddedUser]
GO

ALTER TABLE [dbo].[MGMatchingGame]  WITH CHECK ADD  CONSTRAINT [FK_MGMatchingGame_Minigame] FOREIGN KEY([MGID])
REFERENCES [dbo].[Minigame] ([MGID])
GO

ALTER TABLE [dbo].[MGMatchingGame] CHECK CONSTRAINT [FK_MGMatchingGame_Minigame]
GO

ALTER TABLE [dbo].[MGMatchingGame] ADD  CONSTRAINT [DF_MGMatchingGame_EasyGameSize]  DEFAULT ((2)) FOR [EasyGameSize]
GO

ALTER TABLE [dbo].[MGMatchingGame] ADD  CONSTRAINT [DF_MGMatchingGame_MediumGameSize]  DEFAULT ((4)) FOR [MediumGameSize]
GO

ALTER TABLE [dbo].[MGMatchingGame] ADD  CONSTRAINT [DF_MGMatchingGame_HardGameSize]  DEFAULT ((6)) FOR [HardGameSize]
GO

ALTER TABLE [dbo].[MGMatchingGame] ADD  CONSTRAINT [DF_MGMatchingGame_LastModDate]  DEFAULT (getdate()) FOR [LastModDate]
GO

ALTER TABLE [dbo].[MGMatchingGame] ADD  CONSTRAINT [DF_MGMatchingGame_LastModUser]  DEFAULT ('N/A') FOR [LastModUser]
GO

ALTER TABLE [dbo].[MGMatchingGame] ADD  CONSTRAINT [DF_MGMatchingGame_AddedDate]  DEFAULT (getdate()) FOR [AddedDate]
GO

ALTER TABLE [dbo].[MGMatchingGame] ADD  CONSTRAINT [DF_MGMatchingGame_AddedUser]  DEFAULT ('N/A') FOR [AddedUser]
GO

ALTER TABLE [dbo].[MGMatchingGameTiles]  WITH CHECK ADD  CONSTRAINT [FK_MGMatchingGameTiles_MGMatchingGame] FOREIGN KEY([MAGID])
REFERENCES [dbo].[MGMatchingGame] ([MAGID])
GO

ALTER TABLE [dbo].[MGMatchingGameTiles] CHECK CONSTRAINT [FK_MGMatchingGameTiles_MGMatchingGame]
GO

ALTER TABLE [dbo].[MGMatchingGameTiles] ADD  CONSTRAINT [DF_MGMatchingGameTiles_LastModDate]  DEFAULT (getdate()) FOR [LastModDate]
GO

ALTER TABLE [dbo].[MGMatchingGameTiles] ADD  CONSTRAINT [DF_MGMatchingGameTiles_LastModUser]  DEFAULT ('N/A') FOR [LastModUser]
GO

ALTER TABLE [dbo].[MGMatchingGameTiles] ADD  CONSTRAINT [DF_MGMatchingGameTiles_AddedDate]  DEFAULT (getdate()) FOR [AddedDate]
GO

ALTER TABLE [dbo].[MGMatchingGameTiles] ADD  CONSTRAINT [DF_MGMatchingGameTiles_AddedUser]  DEFAULT ('N/A') FOR [AddedUser]
GO

ALTER TABLE [dbo].[MGMixAndMatch]  WITH CHECK ADD  CONSTRAINT [FK_MGMixAndMatch_Minigame] FOREIGN KEY([MGID])
REFERENCES [dbo].[Minigame] ([MGID])
GO

ALTER TABLE [dbo].[MGMixAndMatch] CHECK CONSTRAINT [FK_MGMixAndMatch_Minigame]
GO

ALTER TABLE [dbo].[MGMixAndMatch] ADD  CONSTRAINT [DF_MGMixAndMatch_LastModDate]  DEFAULT (getdate()) FOR [LastModDate]
GO

ALTER TABLE [dbo].[MGMixAndMatch] ADD  CONSTRAINT [DF_MGMixAndMatch_LastModUser]  DEFAULT ('N/A') FOR [LastModUser]
GO

ALTER TABLE [dbo].[MGMixAndMatch] ADD  CONSTRAINT [DF_MGMixAndMatch_AddedDate]  DEFAULT (getdate()) FOR [AddedDate]
GO

ALTER TABLE [dbo].[MGMixAndMatch] ADD  CONSTRAINT [DF_MGMixAndMatch_AddedUser]  DEFAULT ('N/A') FOR [AddedUser]
GO

ALTER TABLE [dbo].[MGMixAndMatchItems]  WITH CHECK ADD  CONSTRAINT [FK_MGMixAndMatchItems_MGMixAndMatch] FOREIGN KEY([MMID])
REFERENCES [dbo].[MGMixAndMatch] ([MMID])
GO

ALTER TABLE [dbo].[MGMixAndMatchItems] CHECK CONSTRAINT [FK_MGMixAndMatchItems_MGMixAndMatch]
GO

ALTER TABLE [dbo].[MGMixAndMatchItems] ADD  CONSTRAINT [DF_MGMixAndMatchItems_LastModDate]  DEFAULT (getdate()) FOR [LastModDate]
GO

ALTER TABLE [dbo].[MGMixAndMatchItems] ADD  CONSTRAINT [DF_MGMixAndMatchItems_LastModUser]  DEFAULT ('N/A') FOR [LastModUser]
GO

ALTER TABLE [dbo].[MGMixAndMatchItems] ADD  CONSTRAINT [DF_MGMixAndMatchItems_AddedDate]  DEFAULT (getdate()) FOR [AddedDate]
GO

ALTER TABLE [dbo].[MGMixAndMatchItems] ADD  CONSTRAINT [DF_MGMixAndMatchItems_AddedUser]  DEFAULT ('N/A') FOR [AddedUser]
GO

ALTER TABLE [dbo].[MGOnlineBook]  WITH CHECK ADD  CONSTRAINT [FK_MGOnlineBook_Minigame] FOREIGN KEY([MGID])
REFERENCES [dbo].[Minigame] ([MGID])
GO

ALTER TABLE [dbo].[MGOnlineBook] CHECK CONSTRAINT [FK_MGOnlineBook_Minigame]
GO

ALTER TABLE [dbo].[MGOnlineBook] ADD  CONSTRAINT [DF_MGOnlineBook_LastModDate]  DEFAULT (getdate()) FOR [LastModDate]
GO

ALTER TABLE [dbo].[MGOnlineBook] ADD  CONSTRAINT [DF_MGOnlineBook_LastModUser]  DEFAULT ('N/A') FOR [LastModUser]
GO

ALTER TABLE [dbo].[MGOnlineBook] ADD  CONSTRAINT [DF_MGOnlineBook_AddedDate]  DEFAULT (getdate()) FOR [AddedDate]
GO

ALTER TABLE [dbo].[MGOnlineBook] ADD  CONSTRAINT [DF_MGOnlineBook_AddedUser]  DEFAULT ('N/A') FOR [AddedUser]
GO

ALTER TABLE [dbo].[MGOnlineBookPages]  WITH CHECK ADD  CONSTRAINT [FK_MGOnlineBookPages_MGOnlineBook] FOREIGN KEY([OBID])
REFERENCES [dbo].[MGOnlineBook] ([OBID])
GO

ALTER TABLE [dbo].[MGOnlineBookPages] CHECK CONSTRAINT [FK_MGOnlineBookPages_MGOnlineBook]
GO

ALTER TABLE [dbo].[MGOnlineBookPages] ADD  CONSTRAINT [DF_MGOnlineBookPages_LastModDate]  DEFAULT (getdate()) FOR [LastModDate]
GO

ALTER TABLE [dbo].[MGOnlineBookPages] ADD  CONSTRAINT [DF_MGOnlineBookPages_LastModUser]  DEFAULT ('N/A') FOR [LastModUser]
GO

ALTER TABLE [dbo].[MGOnlineBookPages] ADD  CONSTRAINT [DF_MGOnlineBookPages_AddedDate]  DEFAULT (getdate()) FOR [AddedDate]
GO

ALTER TABLE [dbo].[MGOnlineBookPages] ADD  CONSTRAINT [DF_MGOnlineBookPages_AddedUser]  DEFAULT ('N/A') FOR [AddedUser]
GO

ALTER TABLE [dbo].[MGWordMatch]  WITH CHECK ADD  CONSTRAINT [FK_MGWordMatch_Minigame] FOREIGN KEY([MGID])
REFERENCES [dbo].[Minigame] ([MGID])
GO

ALTER TABLE [dbo].[MGWordMatch] CHECK CONSTRAINT [FK_MGWordMatch_Minigame]
GO

ALTER TABLE [dbo].[MGWordMatch] ADD  CONSTRAINT [DF_MGWordMatch_LastModDate]  DEFAULT (getdate()) FOR [LastModDate]
GO

ALTER TABLE [dbo].[MGWordMatch] ADD  CONSTRAINT [DF_MGWordMatch_LastModUser]  DEFAULT ('N/A') FOR [LastModUser]
GO

ALTER TABLE [dbo].[MGWordMatch] ADD  CONSTRAINT [DF_MGWordMatch_AddedDate]  DEFAULT (getdate()) FOR [AddedDate]
GO

ALTER TABLE [dbo].[MGWordMatch] ADD  CONSTRAINT [DF_MGWordMatch_AddedUser]  DEFAULT ('N/A') FOR [AddedUser]
GO

ALTER TABLE [dbo].[MGWordMatchItems]  WITH CHECK ADD  CONSTRAINT [FK_MGWordMatchItems_MGWordMatch] FOREIGN KEY([WMID])
REFERENCES [dbo].[MGWordMatch] ([WMID])
GO

ALTER TABLE [dbo].[MGWordMatchItems] CHECK CONSTRAINT [FK_MGWordMatchItems_MGWordMatch]
GO

ALTER TABLE [dbo].[MGWordMatchItems] ADD  CONSTRAINT [DF_MGWordMatchItems_LastModDate]  DEFAULT (getdate()) FOR [LastModDate]
GO

ALTER TABLE [dbo].[MGWordMatchItems] ADD  CONSTRAINT [DF_MGWordMatchItems_LastModUser]  DEFAULT ('N/A') FOR [LastModUser]
GO

ALTER TABLE [dbo].[MGWordMatchItems] ADD  CONSTRAINT [DF_MGWordMatchItems_AddedDate]  DEFAULT (getdate()) FOR [AddedDate]
GO

ALTER TABLE [dbo].[MGWordMatchItems] ADD  CONSTRAINT [DF_MGWordMatchItems_AddedUser]  DEFAULT ('N/A') FOR [AddedUser]
GO

ALTER TABLE [dbo].[Minigame] ADD  CONSTRAINT [DF_Minigame_LastModDate]  DEFAULT (getdate()) FOR [LastModDate]
GO

ALTER TABLE [dbo].[Minigame] ADD  CONSTRAINT [DF_Minigame_LastModUser]  DEFAULT ('N/A') FOR [LastModUser]
GO

ALTER TABLE [dbo].[Minigame] ADD  CONSTRAINT [DF_Minigame_AddedDate]  DEFAULT (getdate()) FOR [AddedDate]
GO

ALTER TABLE [dbo].[Minigame] ADD  CONSTRAINT [DF_Minigame_AddedUser]  DEFAULT ('N/A') FOR [AddedUser]
GO

ALTER TABLE [dbo].[Notifications] ADD  CONSTRAINT [DF_Notifications_PID_To]  DEFAULT ((0)) FOR [PID_To]
GO

ALTER TABLE [dbo].[Notifications] ADD  CONSTRAINT [DF_Notifications_PID_From]  DEFAULT ((0)) FOR [PID_From]
GO

ALTER TABLE [dbo].[Notifications] ADD  CONSTRAINT [DF_Notifications_isQuestion]  DEFAULT ((0)) FOR [isQuestion]
GO

ALTER TABLE [dbo].[Notifications] ADD  CONSTRAINT [DF_Notifications_Subject]  DEFAULT ('') FOR [Subject]
GO

ALTER TABLE [dbo].[Notifications] ADD  CONSTRAINT [DF_Notifications_AddedDate]  DEFAULT (getdate()) FOR [AddedDate]
GO

ALTER TABLE [dbo].[Notifications] ADD  CONSTRAINT [DF_Notifications_AddedUser]  DEFAULT ('N/A') FOR [AddedUser]
GO

ALTER TABLE [dbo].[Notifications] ADD  CONSTRAINT [DF_Notifications_LastModDate]  DEFAULT (getdate()) FOR [LastModDate]
GO

ALTER TABLE [dbo].[Notifications] ADD  CONSTRAINT [DF_Notifications_LastModUser]  DEFAULT ('N/A') FOR [LastModUser]
GO

ALTER TABLE [dbo].[Notifications] ADD  CONSTRAINT [DF_Notifications_isUnread]  DEFAULT ((1)) FOR [isUnread]
GO

ALTER TABLE [dbo].[Offer] ADD  CONSTRAINT [DF_Offer_RedirectURL]  DEFAULT ('') FOR [RedirectURL]
GO

ALTER TABLE [dbo].[Offer] ADD  CONSTRAINT [DF_Offer_MaxImpressions]  DEFAULT ((0)) FOR [MaxImpressions]
GO

ALTER TABLE [dbo].[Offer] ADD  CONSTRAINT [DF_Offer_TotalImpressions]  DEFAULT ((0)) FOR [TotalImpressions]
GO

ALTER TABLE [dbo].[Offer] ADD  CONSTRAINT [DF_Offer_ZipCode]  DEFAULT ('') FOR [ZipCode]
GO

ALTER TABLE [dbo].[Offer] ADD  CONSTRAINT [DF_Offer_AgeStart]  DEFAULT ((0)) FOR [AgeStart]
GO

ALTER TABLE [dbo].[Offer] ADD  CONSTRAINT [DF_Offer_AgeEnd]  DEFAULT ((0)) FOR [AgeEnd]
GO

ALTER TABLE [dbo].[Offer] ADD  CONSTRAINT [DF_Offer_ProgramId]  DEFAULT ((0)) FOR [ProgramId]
GO

ALTER TABLE [dbo].[Offer] ADD  CONSTRAINT [DF_Offer_BranchId]  DEFAULT ((0)) FOR [BranchId]
GO

ALTER TABLE [dbo].[Offer] ADD  CONSTRAINT [DF_Offer_LastModDate]  DEFAULT (getdate()) FOR [LastModDate]
GO

ALTER TABLE [dbo].[Offer] ADD  CONSTRAINT [DF_Offer_LastModUser]  DEFAULT ('N/A') FOR [LastModUser]
GO

ALTER TABLE [dbo].[Offer] ADD  CONSTRAINT [DF_Offer_AddedDate]  DEFAULT (getdate()) FOR [AddedDate]
GO

ALTER TABLE [dbo].[Offer] ADD  CONSTRAINT [DF_Offer_AddedUser]  DEFAULT ('N/A') FOR [AddedUser]
GO

ALTER TABLE [dbo].[Patron] ADD  CONSTRAINT [DF_Patron_IsMasterAccount]  DEFAULT ((0)) FOR [IsMasterAccount]
GO

ALTER TABLE [dbo].[Patron] ADD  CONSTRAINT [DF_Patron_RegistrationDate]  DEFAULT (getdate()) FOR [RegistrationDate]
GO

ALTER TABLE [dbo].[Patron] ADD  CONSTRAINT [DF_Patron_Score1]  DEFAULT ((0)) FOR [Score1]
GO

ALTER TABLE [dbo].[Patron] ADD  CONSTRAINT [DF_Patron_Score2]  DEFAULT ((0)) FOR [Score2]
GO

ALTER TABLE [dbo].[Patron] ADD  CONSTRAINT [DF_Patron_Score1Pct]  DEFAULT ((0)) FOR [Score1Pct]
GO

ALTER TABLE [dbo].[Patron] ADD  CONSTRAINT [DF_Patron_Score2Pct]  DEFAULT ((0)) FOR [Score2Pct]
GO

ALTER TABLE [dbo].[PatronBookLists] ADD  CONSTRAINT [DF_PatronBookLists_LastModDate]  DEFAULT (getdate()) FOR [LastModDate]
GO

ALTER TABLE [dbo].[PatronPrizes] ADD  CONSTRAINT [DF_PatronPrizes_LastModDate]  DEFAULT (getdate()) FOR [LastModDate]
GO

ALTER TABLE [dbo].[PatronPrizes] ADD  CONSTRAINT [DF_PatronPrizes_LastModUser]  DEFAULT ('N/A') FOR [LastModUser]
GO

ALTER TABLE [dbo].[PatronPrizes] ADD  CONSTRAINT [DF_PatronPrizes_AddedDate]  DEFAULT (getdate()) FOR [AddedDate]
GO

ALTER TABLE [dbo].[PatronPrizes] ADD  CONSTRAINT [DF_PatronPrizes_AddedUser]  DEFAULT ('N/A') FOR [AddedUser]
GO

ALTER TABLE [dbo].[PatronRewardCodes] ADD  CONSTRAINT [DF_PatronRewardCodes_LastModDate]  DEFAULT (getdate()) FOR [LastModDate]
GO

ALTER TABLE [dbo].[PatronRewardCodes] ADD  CONSTRAINT [DF_PatronRewardCodes_LastModUser]  DEFAULT ('N/A') FOR [LastModUser]
GO

ALTER TABLE [dbo].[PatronRewardCodes] ADD  CONSTRAINT [DF_PatronRewardCodes_AddedDate]  DEFAULT (getdate()) FOR [AddedDate]
GO

ALTER TABLE [dbo].[PatronRewardCodes] ADD  CONSTRAINT [DF_PatronRewardCodes_AddedUser]  DEFAULT ('N/A') FOR [AddedUser]
GO

ALTER TABLE [dbo].[PrizeDrawing] ADD  CONSTRAINT [DF_PrizeDrawing_LastModDate]  DEFAULT (getdate()) FOR [LastModDate]
GO

ALTER TABLE [dbo].[PrizeDrawing] ADD  CONSTRAINT [DF_PrizeDrawing_LastModUser]  DEFAULT ('N/A') FOR [LastModUser]
GO

ALTER TABLE [dbo].[PrizeDrawing] ADD  CONSTRAINT [DF_PrizeDrawing_AddedDate]  DEFAULT (getdate()) FOR [AddedDate]
GO

ALTER TABLE [dbo].[PrizeDrawing] ADD  CONSTRAINT [DF_PrizeDrawing_AddedUser]  DEFAULT ('N/A') FOR [AddedUser]
GO

ALTER TABLE [dbo].[PrizeDrawingWinners] ADD  CONSTRAINT [DF_PrizeDrawingWinners_LastModDate]  DEFAULT (getdate()) FOR [LastModDate]
GO

ALTER TABLE [dbo].[PrizeDrawingWinners] ADD  CONSTRAINT [DF_PrizeDrawingWinners_LastModUser]  DEFAULT ('N/A') FOR [LastModUser]
GO

ALTER TABLE [dbo].[PrizeDrawingWinners] ADD  CONSTRAINT [DF_PrizeDrawingWinners_AddedDate]  DEFAULT (getdate()) FOR [AddedDate]
GO

ALTER TABLE [dbo].[PrizeDrawingWinners] ADD  CONSTRAINT [DF_PrizeDrawingWinners_AddedUser]  DEFAULT ('N/A') FOR [AddedUser]
GO

ALTER TABLE [dbo].[PrizeTemplate] ADD  CONSTRAINT [DF_PrizeTemplate_NumPrizes]  DEFAULT ((1)) FOR [NumPrizes]
GO

ALTER TABLE [dbo].[PrizeTemplate] ADD  CONSTRAINT [DF_PrizeTemplate_LastModDate]  DEFAULT (getdate()) FOR [LastModDate]
GO

ALTER TABLE [dbo].[PrizeTemplate] ADD  CONSTRAINT [DF_PrizeTemplate_LastModUser]  DEFAULT ('N/A') FOR [LastModUser]
GO

ALTER TABLE [dbo].[PrizeTemplate] ADD  CONSTRAINT [DF_PrizeTemplate_AddedDate]  DEFAULT (getdate()) FOR [AddedDate]
GO

ALTER TABLE [dbo].[PrizeTemplate] ADD  CONSTRAINT [DF_PrizeTemplate_AddedUser]  DEFAULT ('N/A') FOR [AddedUser]
GO

ALTER TABLE [dbo].[ProgramCodes]  WITH CHECK ADD  CONSTRAINT [FK_ProgramCodes_Programs] FOREIGN KEY([PID])
REFERENCES [dbo].[Programs] ([PID])
GO

ALTER TABLE [dbo].[ProgramCodes] CHECK CONSTRAINT [FK_ProgramCodes_Programs]
GO

ALTER TABLE [dbo].[ProgramCodes] ADD  CONSTRAINT [DF_ProgramCodes_isUsed]  DEFAULT ((0)) FOR [isUsed]
GO

ALTER TABLE [dbo].[ProgramCodes] ADD  CONSTRAINT [DF_ProgramCodes_DateCreated]  DEFAULT (getdate()) FOR [DateCreated]
GO

ALTER TABLE [dbo].[ProgramGame] ADD  CONSTRAINT [DF_ProgramGame_LastModUser]  DEFAULT ('N/A') FOR [LastModUser]
GO

ALTER TABLE [dbo].[ProgramGame] ADD  CONSTRAINT [DF_ProgramGame_AddedDate]  DEFAULT (getdate()) FOR [AddedDate]
GO

ALTER TABLE [dbo].[ProgramGame] ADD  CONSTRAINT [DF_ProgramGame_AddedUser]  DEFAULT ('N/A') FOR [AddedUser]
GO

ALTER TABLE [dbo].[ProgramGame] ADD  CONSTRAINT [DF_ProgramGame_LastModDate]  DEFAULT (getdate()) FOR [LastModDate]
GO

ALTER TABLE [dbo].[ProgramGame] ADD  CONSTRAINT [DF_ProgramGame_Minigame1ID]  DEFAULT ((0)) FOR [Minigame1ID]
GO

ALTER TABLE [dbo].[ProgramGame] ADD  CONSTRAINT [DF_ProgramGame_Minigame2ID]  DEFAULT ((0)) FOR [Minigame2ID]
GO

ALTER TABLE [dbo].[ProgramGameLevel]  WITH CHECK ADD  CONSTRAINT [FK_ProgramGameLevel_ProgramGame] FOREIGN KEY([PGID])
REFERENCES [dbo].[ProgramGame] ([PGID])
GO

ALTER TABLE [dbo].[ProgramGameLevel] CHECK CONSTRAINT [FK_ProgramGameLevel_ProgramGame]
GO

ALTER TABLE [dbo].[ProgramGameLevel] ADD  CONSTRAINT [DF_ProgramGameLevel_LastModDate]  DEFAULT (getdate()) FOR [LastModDate]
GO

ALTER TABLE [dbo].[ProgramGameLevel] ADD  CONSTRAINT [DF_ProgramGameLevel_LastModUser]  DEFAULT ('N/A') FOR [LastModUser]
GO

ALTER TABLE [dbo].[ProgramGameLevel] ADD  CONSTRAINT [DF_ProgramGameLevel_AddedDate]  DEFAULT (getdate()) FOR [AddedDate]
GO

ALTER TABLE [dbo].[ProgramGameLevel] ADD  CONSTRAINT [DF_ProgramGameLevel_AddedUser]  DEFAULT ('N/A') FOR [AddedUser]
GO

ALTER TABLE [dbo].[ProgramGamePointConversion]  WITH CHECK ADD  CONSTRAINT [FK_ProgramGamePointConversion_Programs] FOREIGN KEY([PGID])
REFERENCES [dbo].[Programs] ([PID])
GO

ALTER TABLE [dbo].[ProgramGamePointConversion] CHECK CONSTRAINT [FK_ProgramGamePointConversion_Programs]
GO

ALTER TABLE [dbo].[ProgramGamePointConversion] ADD  CONSTRAINT [DF_ProgramGamePointConversion_LastModDate]  DEFAULT (getdate()) FOR [LastModDate]
GO

ALTER TABLE [dbo].[ProgramGamePointConversion] ADD  CONSTRAINT [DF_ProgramGamePointConversion_LastModUser]  DEFAULT ('N/A') FOR [LastModUser]
GO

ALTER TABLE [dbo].[ProgramGamePointConversion] ADD  CONSTRAINT [DF_ProgramGamePointConversion_AddedDate]  DEFAULT (getdate()) FOR [AddedDate]
GO

ALTER TABLE [dbo].[ProgramGamePointConversion] ADD  CONSTRAINT [DF_ProgramGamePointConversion_AddedUser]  DEFAULT ('N/A') FOR [AddedUser]
GO

ALTER TABLE [dbo].[Programs] ADD  CONSTRAINT [DF_Programs_IsActive]  DEFAULT ((0)) FOR [IsActive]
GO

ALTER TABLE [dbo].[Programs] ADD  CONSTRAINT [DF_Programs_IsHidden]  DEFAULT ((0)) FOR [IsHidden]
GO

ALTER TABLE [dbo].[Programs] ADD  CONSTRAINT [DF_Programs_ParentalConsentFlag]  DEFAULT ((0)) FOR [ParentalConsentFlag]
GO

ALTER TABLE [dbo].[Programs] ADD  CONSTRAINT [DF_Programs_CompletionPoints]  DEFAULT ((0)) FOR [CompletionPoints]
GO

ALTER TABLE [dbo].[Programs] ADD  CONSTRAINT [DF_Programs_LastModUser]  DEFAULT ('N/A') FOR [LastModUser]
GO

ALTER TABLE [dbo].[Programs] ADD  CONSTRAINT [DF_Programs_AddedDate]  DEFAULT (getdate()) FOR [AddedDate]
GO

ALTER TABLE [dbo].[Programs] ADD  CONSTRAINT [DF_Programs_AddedUser]  DEFAULT ('N/A') FOR [AddedUser]
GO

ALTER TABLE [dbo].[Programs] ADD  CONSTRAINT [DF_Programs_LastModDate]  DEFAULT (getdate()) FOR [LastModDate]
GO

ALTER TABLE [dbo].[RegistrationSettings] ADD  CONSTRAINT [DF_RegistrationSettings_Literacy1Label]  DEFAULT ('AR Level') FOR [Literacy1Label]
GO

ALTER TABLE [dbo].[RegistrationSettings] ADD  CONSTRAINT [DF_RegistrationSettings_Literacy2Label]  DEFAULT ('Lexile Level') FOR [Literacy2Label]
GO

ALTER TABLE [dbo].[RegistrationSettings] ADD  CONSTRAINT [DF_RegistrationSettings_LastModDate]  DEFAULT (getdate()) FOR [LastModDate]
GO

ALTER TABLE [dbo].[RegistrationSettings] ADD  CONSTRAINT [DF_RegistrationSettings_LastModUser]  DEFAULT ('N/A') FOR [LastModUser]
GO

ALTER TABLE [dbo].[RegistrationSettings] ADD  CONSTRAINT [DF_RegistrationSettings_AddedDate]  DEFAULT (getdate()) FOR [AddedDate]
GO

ALTER TABLE [dbo].[RegistrationSettings] ADD  CONSTRAINT [DF_RegistrationSettings_AddedUser]  DEFAULT ('N/A') FOR [AddedUser]
GO

ALTER TABLE [dbo].[ReportTemplate] ADD  CONSTRAINT [DF_ReportTemplate_ProgId]  DEFAULT ((0)) FOR [ProgId]
GO

ALTER TABLE [dbo].[ReportTemplate] ADD  CONSTRAINT [DF_ReportTemplate_RegistrationDate1]  DEFAULT (getdate()) FOR [RegistrationDateStart]
GO

ALTER TABLE [dbo].[ReportTemplate] ADD  CONSTRAINT [DF_ReportTemplate_RegistrationDate]  DEFAULT (getdate()) FOR [RegistrationDateEnd]
GO

ALTER TABLE [dbo].[ReportTemplate] ADD  CONSTRAINT [DF_ReportTemplate_LastModDate]  DEFAULT (getdate()) FOR [LastModDate]
GO

ALTER TABLE [dbo].[ReportTemplate] ADD  CONSTRAINT [DF_ReportTemplate_LastModUser]  DEFAULT ('N/A') FOR [LastModUser]
GO

ALTER TABLE [dbo].[ReportTemplate] ADD  CONSTRAINT [DF_ReportTemplate_AddedDate]  DEFAULT (getdate()) FOR [AddedDate]
GO

ALTER TABLE [dbo].[ReportTemplate] ADD  CONSTRAINT [DF_ReportTemplate_AddedUser]  DEFAULT ('N/A') FOR [AddedUser]
GO

ALTER TABLE [dbo].[SentEmailLog] ADD  CONSTRAINT [DF_SentEmailLog_SentDateTime]  DEFAULT (getdate()) FOR [SentDateTime]
GO

ALTER TABLE [dbo].[SRPGroupPermissions]  WITH CHECK ADD  CONSTRAINT [FK_GroupPermissions_SRPGroups] FOREIGN KEY([GID])
REFERENCES [dbo].[SRPGroups] ([GID])
GO

ALTER TABLE [dbo].[SRPGroupPermissions] CHECK CONSTRAINT [FK_GroupPermissions_SRPGroups]
GO

ALTER TABLE [dbo].[SRPGroupPermissions] ADD  CONSTRAINT [DF_SRPGroupPermissions_AddedDate]  DEFAULT (getdate()) FOR [AddedDate]
GO

ALTER TABLE [dbo].[SRPGroupPermissions] ADD  CONSTRAINT [DF_SRPGroupPermissions_AddedUser]  DEFAULT ('N/A') FOR [AddedUser]
GO

ALTER TABLE [dbo].[SRPGroups] ADD  CONSTRAINT [DF_SRPGroups_LastModDate]  DEFAULT (getdate()) FOR [LastModDate]
GO

ALTER TABLE [dbo].[SRPGroups] ADD  CONSTRAINT [DF_SRPGroups_LastModUser]  DEFAULT ('N/A') FOR [LastModUser]
GO

ALTER TABLE [dbo].[SRPGroups] ADD  CONSTRAINT [DF_SRPGroups_AddedDate]  DEFAULT (getdate()) FOR [AddedDate]
GO

ALTER TABLE [dbo].[SRPGroups] ADD  CONSTRAINT [DF_SRPGroups_AddedUser]  DEFAULT ('N/A') FOR [AddedUser]
GO

ALTER TABLE [dbo].[SRPReport] ADD  CONSTRAINT [DF_SRPReport_ProgId]  DEFAULT ((0)) FOR [ProgId]
GO

ALTER TABLE [dbo].[SRPReport] ADD  CONSTRAINT [DF_SRPReport_RegistrationDateStart]  DEFAULT (getdate()) FOR [RegistrationDateStart]
GO

ALTER TABLE [dbo].[SRPReport] ADD  CONSTRAINT [DF_SRPReport_RegistrationDateEnd]  DEFAULT (getdate()) FOR [RegistrationDateEnd]
GO

ALTER TABLE [dbo].[SRPReport] ADD  CONSTRAINT [DF_SRPReport_LastModDate]  DEFAULT (getdate()) FOR [LastModDate]
GO

ALTER TABLE [dbo].[SRPReport] ADD  CONSTRAINT [DF_SRPReport_LastModUser]  DEFAULT ('N/A') FOR [LastModUser]
GO

ALTER TABLE [dbo].[SRPReport] ADD  CONSTRAINT [DF_SRPReport_AddedDate]  DEFAULT (getdate()) FOR [AddedDate]
GO

ALTER TABLE [dbo].[SRPReport] ADD  CONSTRAINT [DF_SRPReport_AddedUser]  DEFAULT ('N/A') FOR [AddedUser]
GO

ALTER TABLE [dbo].[SRPSettings] ADD  CONSTRAINT [DF_SRPSettings_StorageType]  DEFAULT ('Text') FOR [StorageType]
GO

ALTER TABLE [dbo].[SRPSettings] ADD  CONSTRAINT [DF_SRPSettings_EditType]  DEFAULT ('TextBox') FOR [EditType]
GO

ALTER TABLE [dbo].[SRPUser] ADD  CONSTRAINT [DF_SRPUser_LastModDate]  DEFAULT (getdate()) FOR [LastModDate]
GO

ALTER TABLE [dbo].[SRPUser] ADD  CONSTRAINT [DF_SRPUser_LastModUser]  DEFAULT ('N/A') FOR [LastModUser]
GO

ALTER TABLE [dbo].[SRPUser] ADD  CONSTRAINT [DF_SRPUser_AddedDate]  DEFAULT (getdate()) FOR [AddedDate]
GO

ALTER TABLE [dbo].[SRPUser] ADD  CONSTRAINT [DF_SRPUser_AddedUser]  DEFAULT ('N/A') FOR [AddedUser]
GO

ALTER TABLE [dbo].[SRPUserGroups]  WITH CHECK ADD  CONSTRAINT [FK_SRPUserGroups_SRPGroups] FOREIGN KEY([GID])
REFERENCES [dbo].[SRPGroups] ([GID])
GO

ALTER TABLE [dbo].[SRPUserGroups] CHECK CONSTRAINT [FK_SRPUserGroups_SRPGroups]
GO

ALTER TABLE [dbo].[SRPUserGroups]  WITH CHECK ADD  CONSTRAINT [FK_SRPUserGroups_SRPUser] FOREIGN KEY([UID])
REFERENCES [dbo].[SRPUser] ([UID])
GO

ALTER TABLE [dbo].[SRPUserGroups] CHECK CONSTRAINT [FK_SRPUserGroups_SRPUser]
GO

ALTER TABLE [dbo].[SRPUserGroups] ADD  CONSTRAINT [DF_SRPUserGroups_AddedDate]  DEFAULT (getdate()) FOR [AddedDate]
GO

ALTER TABLE [dbo].[SRPUserGroups] ADD  CONSTRAINT [DF_SRPUserGroups_AddedUser]  DEFAULT ('N/A') FOR [AddedUser]
GO

ALTER TABLE [dbo].[SRPUserPermissions]  WITH CHECK ADD  CONSTRAINT [FK_UserPermissions_SRPUser] FOREIGN KEY([UID])
REFERENCES [dbo].[SRPUser] ([UID])
GO

ALTER TABLE [dbo].[SRPUserPermissions] CHECK CONSTRAINT [FK_UserPermissions_SRPUser]
GO

ALTER TABLE [dbo].[SRPUserPermissions] ADD  CONSTRAINT [DF_SRPUserPermissions_AddedDate]  DEFAULT (getdate()) FOR [AddedDate]
GO

ALTER TABLE [dbo].[SRPUserPermissions] ADD  CONSTRAINT [DF_SRPUserPermissions_AddedUser]  DEFAULT ('N/A') FOR [AddedUser]
GO

ALTER TABLE [dbo].[Tenant] ADD  CONSTRAINT [DF_Tenant_isActiveFlag]  DEFAULT ((0)) FOR [isActiveFlag]
GO

ALTER TABLE [dbo].[Tenant] ADD  CONSTRAINT [DF_Tenant_isMasterFlag]  DEFAULT ((0)) FOR [isMasterFlag]
GO

ALTER TABLE [dbo].[Tenant] ADD  CONSTRAINT [DF_Tenant_showNotifications]  DEFAULT ((1)) FOR [showNotifications]
GO

ALTER TABLE [dbo].[Tenant] ADD  CONSTRAINT [DF_Tenant_showOffers]  DEFAULT ((1)) FOR [showOffers]
GO

ALTER TABLE [dbo].[Tenant] ADD  CONSTRAINT [DF_Tenant_showBadges]  DEFAULT ((1)) FOR [showBadges]
GO

ALTER TABLE [dbo].[Tenant] ADD  CONSTRAINT [DF_Tenant_showEvents]  DEFAULT ((1)) FOR [showEvents]
GO

ALTER TABLE [dbo].[Tenant] ADD  CONSTRAINT [DF_Tenant_NotificationsMenuText]  DEFAULT ('Notifications') FOR [NotificationsMenuText]
GO

ALTER TABLE [dbo].[Tenant] ADD  CONSTRAINT [DF_Tenant_OffersMenuText]  DEFAULT ('Offers') FOR [OffersMenuText]
GO

ALTER TABLE [dbo].[Tenant] ADD  CONSTRAINT [DF_Tenant_BadgesMenuText]  DEFAULT ('Badges') FOR [BadgesMenuText]
GO

ALTER TABLE [dbo].[Tenant] ADD  CONSTRAINT [DF_Tenant_EventsMenuText]  DEFAULT ('Events') FOR [EventsMenuText]
GO

ALTER TABLE [dbo].[Tenant] ADD  CONSTRAINT [DF_Tenant_LastModDate]  DEFAULT (getdate()) FOR [LastModDate]
GO

ALTER TABLE [dbo].[Tenant] ADD  CONSTRAINT [DF_Tenant_LastModUser]  DEFAULT ('N/A') FOR [LastModUser]
GO

ALTER TABLE [dbo].[Tenant] ADD  CONSTRAINT [DF_Tenant_AddedDate]  DEFAULT (getdate()) FOR [AddedDate]
GO

ALTER TABLE [dbo].[Tenant] ADD  CONSTRAINT [DF_Tenant_AddedUser]  DEFAULT ('N/A') FOR [AddedUser]
GO

ALTER TABLE [dbo].[TenantInitData] ADD  CONSTRAINT [DF_TenantInitData_DateCreated]  DEFAULT (getdate()) FOR [DateCreated]
GO


IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[rpt_GamePlayStats1]'))
DROP VIEW [dbo].[rpt_GamePlayStats1]
GO
CREATE VIEW [dbo].[rpt_GamePlayStats1]
AS
WITH stats AS (SELECT DISTINCT
gps.GPSID, gps.PID, p.Username, p.FirstName, p.LastName, p.Gender, p.EmailAddress, gps.MGID, g.GameName, g.AdminName, gps.MGType,
g.MiniGameTypeName, gps.CompletedPlay, gps.Difficulty, gps.Started, gps.Completed
FROM          dbo.GamePlayStats AS gps LEFT OUTER JOIN
dbo.Patron AS p ON gps.PID = p.PID LEFT OUTER JOIN
dbo.Minigame AS g ON gps.MGID = g.MGID)
SELECT DISTINCT TOP (100) PERCENT PID, Username, FirstName, LastName, Gender, EmailAddress, MGID, GameName, AdminName, MGType, MiniGameTypeName,
(SELECT     COUNT(*) AS Expr1
FROM          stats AS s1
WHERE      (PID = s.PID) AND (MGID = s.MGID) AND (Difficulty = 'Easy')) AS EasyLevelStated,
(SELECT     COUNT(*) AS Expr1
FROM          stats AS s1
WHERE      (PID = s.PID) AND (MGID = s.MGID) AND (Difficulty = 'Easy') AND (CompletedPlay = 1)) AS EasyLevelCompleted,
(SELECT     COUNT(*) AS Expr1
FROM          stats AS s1
WHERE      (PID = s.PID) AND (MGID = s.MGID) AND (Difficulty = 'Medium')) AS MediumLevelStated,
(SELECT     COUNT(*) AS Expr1
FROM          stats AS s1
WHERE      (PID = s.PID) AND (MGID = s.MGID) AND (Difficulty = 'Medium') AND (CompletedPlay = 1)) AS MediumLevelCompleted,
(SELECT     COUNT(*) AS Expr1
FROM          stats AS s1
WHERE      (PID = s.PID) AND (MGID = s.MGID) AND (Difficulty = 'Hard')) AS HardLevelStated,
(SELECT     COUNT(*) AS Expr1
FROM          stats AS s1
WHERE      (PID = s.PID) AND (MGID = s.MGID) AND (Difficulty = 'Hard') AND (CompletedPlay = 1)) AS HardLevelCompleted
FROM         stats AS s
ORDER BY Username, FirstName, LastName, Gender, EmailAddress, MGID, GameName, AdminName, MGType, MiniGameTypeName

GO


IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[fnSplitBigInt]') AND type in (N'FN', N'IF', N'TF', N'FS', N'FT'))
DROP FUNCTION [dbo].[fnSplitBigInt]
GO

IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[fnSplitString]') AND type in (N'FN', N'IF', N'TF', N'FS', N'FT'))
DROP FUNCTION [dbo].[fnSplitString]
GO

IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[ProgramGameCummulativePoints]') AND type in (N'FN', N'IF', N'TF', N'FS', N'FT'))
DROP FUNCTION [dbo].[ProgramGameCummulativePoints]
GO

CREATE FUNCTION [dbo].[fnSplitBigInt]
(
-- Add the parameters for the function here
@input nvarchar(4000)
)
RETURNS @retBigint TABLE
(
[Value] [bigint] NOT NULL
)
AS
BEGIN

DECLARE @bigint nvarchar(100)
DECLARE @pos int

SET @input = LTRIM(RTRIM(@input))+ ',' -- TRIMMING THE BLANK SPACES
SET @pos = CHARINDEX(',', @input, 1) -- OBTAINING THE STARTING POSITION OF COMMA IN THE GIVEN STRING

IF REPLACE(@input, ',', '') <> '' -- CHECK IF THE STRING EXIST FOR US TO SPLIT
BEGIN
WHILE @pos > 0
BEGIN
SET @bigint = LTRIM(RTRIM(LEFT(@input, @pos - 1))) -- GET THE 1ST INT VALUE TO BE INSERTED
IF @bigint <> ''
BEGIN
INSERT INTO @retBigint (Value)
VALUES (CAST(@bigint AS bigint))
END
SET @input = RIGHT(@input, LEN(@input) - @pos) -- RESETTING THE INPUT STRING BY REMOVING THE INSERTED ONES
SET @pos = CHARINDEX(',', @input, 1) -- OBTAINING THE STARTING POSITION OF COMMA IN THE RESETTED NEW STRING

END
END
RETURN

END
GO

CREATE FUNCTION [dbo].[fnSplitString]
(
-- Add the parameters for the function here
@input nvarchar(4000)
, @CharSplit varchar(1) = ','
)
RETURNS @retString TABLE
(
[Value] varchar(255) NOT NULL
)
AS
BEGIN

DECLARE @string nvarchar(255)
DECLARE @pos int

SET @input = LTRIM(RTRIM(@input))+ @CharSplit -- TRIMMING THE BLANK SPACES
SET @pos = CHARINDEX(@CharSplit, @input, 1) -- OBTAINING THE STARTING POSITION OF COMMA IN THE GIVEN STRING

IF REPLACE(@input, @CharSplit, '') <> '' -- CHECK IF THE STRING EXIST FOR US TO SPLIT
BEGIN
WHILE @pos > 0
BEGIN
SET @string = LTRIM(RTRIM(LEFT(@input, @pos - 1))) -- GET THE 1ST INT VALUE TO BE INSERTED
IF @string <> ''
BEGIN
INSERT INTO @retString (Value)
VALUES (@string )
END
SET @input = RIGHT(@input, LEN(@input) - @pos) -- RESETTING THE INPUT STRING BY REMOVING THE INSERTED ONES
SET @pos = CHARINDEX(@CharSplit, @input, 1) -- OBTAINING THE STARTING POSITION OF COMMA IN THE RESETTED NEW STRING

END
END
RETURN

END
GO


CREATE FUNCTION [dbo].[ProgramGameCummulativePoints]
(
@PGID int
)
RETURNS
@Levels TABLE
(
PGID int,
GameLevel int,
PointsNeeded int,
IsBonus bit
)
AS
BEGIN
declare @T table
(
PGID int,
GameLevel int,
PointsNeeded int,
IsBonus bit
)

insert into @T values(0,0,0,0)
insert into @T
select @PGID, LevelNumber, PointNumber, 0
from ProgramGame pg
join ProgramGameLevel pgl
on pg.PGID = pgl.PGID
where
pg.PGID = @PGID
order by LevelNumber


Declare @i int, @max int, @numLevels int
Select @i = 0, @max = 20
select @numLevels = COUNT(*) from ProgramGameLevel where PGID = @PGID
while @i < @max
begin
	insert into @t
	select @PGID, LevelNumber + (@i + 1) * @numLevels, PointNumber * BonusLevelPointMultiplier, 1
	from ProgramGame pg
			join ProgramGameLevel pgl
				on pg.PGID = pgl.PGID			
	where 
		pg.PGID = @PGID		
	order by LevelNumber
	Select @i = @i + 1
end

insert into @Levels
select @PGID, t1.GameLevel, + isnull(sum(t2.PointsNeeded) + t1.PointsNeeded,0), t1.IsBonus
from @T t1
left join @T t2 
     on t1.GameLevel>t2.GameLevel
group by t1.GameLevel, t1.PointsNeeded, t1.IsBonus
delete from @Levels where GameLevel = 0		
	
	RETURN 
END

GO



/****** Object:  UserDefinedFunction [dbo].[fx_ConvertPoints]    Script Date: 12/05/2014 14:02:57 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[fx_ConvertPoints]') AND type in (N'FN', N'IF', N'TF', N'FS', N'FT'))
DROP FUNCTION [dbo].[fx_ConvertPoints]
GO

/****** Object:  UserDefinedFunction [dbo].[fx_IsFinisher]    Script Date: 12/05/2014 14:02:57 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[fx_IsFinisher]') AND type in (N'FN', N'IF', N'TF', N'FS', N'FT'))
DROP FUNCTION [dbo].[fx_IsFinisher]
GO

/****** Object:  UserDefinedFunction [dbo].[fx_IsFinisher2]    Script Date: 12/05/2014 14:02:57 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[fx_IsFinisher2]') AND type in (N'FN', N'IF', N'TF', N'FS', N'FT'))
DROP FUNCTION [dbo].[fx_IsFinisher2]
GO

/****** Object:  UserDefinedFunction [dbo].[fx_IsLevelFinisher]    Script Date: 12/05/2014 14:02:57 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[fx_IsLevelFinisher]') AND type in (N'FN', N'IF', N'TF', N'FS', N'FT'))
DROP FUNCTION [dbo].[fx_IsLevelFinisher]
GO

/****** Object:  UserDefinedFunction [dbo].[fx_PatronHasAllBadgesInList]    Script Date: 12/05/2014 14:02:57 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[fx_PatronHasAllBadgesInList]') AND type in (N'FN', N'IF', N'TF', N'FS', N'FT'))
DROP FUNCTION [dbo].[fx_PatronHasAllBadgesInList]
GO


Create function [dbo].[fx_ConvertPoints](@ProgID int, @Points int, @OutReadingType int )
returns decimal(16,4)
as
Begin
	 
	Declare @ret decimal(16,4)
	Declare @OutActivityTypePoints int 
	Declare @OutActivityTypeCount int 	
	select @OutActivityTypePoints = -1, @OutActivityTypeCount = -1
	
	select @OutActivityTypePoints = PointCount, @OutActivityTypeCount = ActivityCount from ProgramGamePointConversion where PGID = @ProgID and ActivityTypeId = @OutReadingType
	
	if (@OutActivityTypePoints is null or @OutActivityTypeCount is null )
	begin
		set @ret = null -- -1.00
	end
	else
	begin
		if (@OutActivityTypePoints = 0 )
		begin
			set @ret = null -- -1.00
		end
		else
		begin
			set @ret = convert(decimal(16,4), convert(decimal(16,4),@Points) * convert(decimal(16,4),@OutActivityTypeCount)) / convert(decimal(16,4),@OutActivityTypePoints)
		end 
	end 
	
	return @ret	
End

GO

CREATE function [dbo].[fx_IsFinisher](@PID int, @ProgID int)
returns bit
as
Begin
	 
	Declare @ret bit
	Declare @GameCompletionPoints int
	Declare @UserPoints int
	if (@PID is null or @ProgID is null or @ProgID = 0)
	begin
		set @ret = 0
	end
	else
	begin
		select @GameCompletionPoints = IsNull(CompletionPoints,0) from Programs where PID = @ProgID
	
		/*
		if (select ProgramGameID from Programs where PID = @ProgID) = 0 
		begin
			select @GameCompletionPoints = IsNull(CompletionPoints,0) from Programs where PID = @ProgID
		end
		else
		begin

			select @GameCompletionPoints = isnull(SUM(isnull(pgl.PointNumber,0)),0)
			from ProgramGame pg 
					left join ProgramGameLevel pgl
						on pg.PGID = pgl.PGID
					left join Programs p
						on p.ProgramGameID = pg.PGID
			where 
				p.PID = @ProgID
		end
		*/
		select @UserPoints = isnull(SUM(isnull(NumPoints,0)),0)
		from	PatronPoints
		where 
			PID = @PID
		select @ret = case when @UserPoints < @GameCompletionPoints or @GameCompletionPoints = 0 then 0 else 1 end
	end 
	
	return @ret	
End

GO


CREATE function [dbo].[fx_IsFinisher2](@PID int, @ProgID int, @Level int = null)
returns bit
as
Begin
	 
	Declare @ret bit
	Declare @GameCompletionPoints int
	Declare @UserPoints int
	if (@PID is null or @ProgID is null or @ProgID = 0)
	begin
		set @ret = 0
	end
	else
	begin
		select @GameCompletionPoints = IsNull(CompletionPoints,0) from Programs where PID = @ProgID
		-- use the program level completion points unless they ask for a particular level
		if (@Level is not null)
		begin 
			if (select ProgramGameID from Programs where PID = @ProgID) = 0 
			begin
				select @GameCompletionPoints = IsNull(CompletionPoints,0) from Programs where PID = @ProgID
			end
			else
			begin
				select @GameCompletionPoints = IsNull(SUM(isnull(pgl.PointNumber,0)) ,0)
				from ProgramGame pg 
						left join ProgramGameLevel pgl
							on pg.PGID = pgl.PGID
						left join Programs p
							on p.ProgramGameID = pg.PGID
				where 
					p.PID = @ProgID
						and (pgl.LevelNumber <= @Level or @Level is null)
end
end
select @UserPoints = isnull(SUM(isnull(NumPoints,0)),0)
from	PatronPoints
where
PID = @PID
select @ret = case when @GameCompletionPoints > @UserPoints then 0 else 1 end
end

return @ret
End

GO



CREATE function [dbo].[fx_IsLevelFinisher](@PID int, @ProgID int, @Level int = null)
returns bit
as
Begin

Declare @ret bit
Declare @GameCompletionPoints int
Declare @UserPoints int
if (@PID is null or @ProgID is null or @ProgID = 0)
begin
set @ret = 0
end
else
begin
select @GameCompletionPoints = SUM(isnull(pgl.PointNumber,0))
from ProgramGame pg
left join ProgramGameLevel pgl
on pg.PGID = pgl.PGID
left join Programs p
on p.ProgramGameID = pg.PGID
where
p.PID = @ProgID
and (pgl.LevelNumber <= @Level or @Level is null)
select @UserPoints = SUM(isnull(NumPoints,0))
from	PatronPoints
where
PID = @PID
select @ret = case when @GameCompletionPoints < @UserPoints then 0 else 1 end
	end 
	
	return @ret	
End


GO


Create function [dbo].[fx_PatronHasAllBadgesInList](@PID int, @BadgeList varchar(500))
returns bit
as
Begin
	 
	Declare @ret bit
	set @ret = 0
	if (select COUNT(DISTINCT BID) from Badge where BID in (select * from fnSplitBigInt(@BadgeList))) = (select COUNT(DISTINCT BadgeID) from PatronBadges where PID = @PID and 

BadgeID in (select * from fnSplitBigInt(@BadgeList)))
	begin
		set @ret = 1
	end
	return @ret	
End

GO



GO

/****** Object:  StoredProcedure [dbo].[app_Avatar_Delete]    Script Date: 12/05/2014 14:23:59 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[app_Avatar_Delete]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[app_Avatar_Delete]
GO

/****** Object:  StoredProcedure [dbo].[app_Avatar_GetAll]    Script Date: 12/05/2014 14:23:59 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[app_Avatar_GetAll]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[app_Avatar_GetAll]
GO

/****** Object:  StoredProcedure [dbo].[app_Avatar_GetByID]    Script Date: 12/05/2014 14:23:59 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[app_Avatar_GetByID]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[app_Avatar_GetByID]
GO

/****** Object:  StoredProcedure [dbo].[app_Avatar_Insert]    Script Date: 12/05/2014 14:23:59 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[app_Avatar_Insert]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[app_Avatar_Insert]
GO

/****** Object:  StoredProcedure [dbo].[app_Avatar_Update]    Script Date: 12/05/2014 14:23:59 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[app_Avatar_Update]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[app_Avatar_Update]
GO

/****** Object:  StoredProcedure [dbo].[app_Award_Delete]    Script Date: 12/05/2014 14:23:59 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[app_Award_Delete]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[app_Award_Delete]
GO

/****** Object:  StoredProcedure [dbo].[app_Award_GetAll]    Script Date: 12/05/2014 14:23:59 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[app_Award_GetAll]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[app_Award_GetAll]
GO

/****** Object:  StoredProcedure [dbo].[app_Award_GetBadgeListMembership]    Script Date: 12/05/2014 14:23:59 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[app_Award_GetBadgeListMembership]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[app_Award_GetBadgeListMembership]
GO

/****** Object:  StoredProcedure [dbo].[app_Award_GetByID]    Script Date: 12/05/2014 14:23:59 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[app_Award_GetByID]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[app_Award_GetByID]
GO

/****** Object:  StoredProcedure [dbo].[app_Award_GetPatronQualifyingAwards]    Script Date: 12/05/2014 14:23:59 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[app_Award_GetPatronQualifyingAwards]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[app_Award_GetPatronQualifyingAwards]
GO

/****** Object:  StoredProcedure [dbo].[app_Award_GetPatronQualifyingAwardsWTenant]    Script Date: 12/05/2014 14:23:59 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[app_Award_GetPatronQualifyingAwardsWTenant]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[app_Award_GetPatronQualifyingAwardsWTenant]
GO

/****** Object:  StoredProcedure [dbo].[app_Award_Insert]    Script Date: 12/05/2014 14:23:59 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[app_Award_Insert]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[app_Award_Insert]
GO

/****** Object:  StoredProcedure [dbo].[app_Award_Update]    Script Date: 12/05/2014 14:23:59 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[app_Award_Update]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[app_Award_Update]
GO

/****** Object:  StoredProcedure [dbo].[app_Badge_Delete]    Script Date: 12/05/2014 14:23:59 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[app_Badge_Delete]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[app_Badge_Delete]
GO

/****** Object:  StoredProcedure [dbo].[app_Badge_GetAll]    Script Date: 12/05/2014 14:23:59 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[app_Badge_GetAll]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[app_Badge_GetAll]
GO

/****** Object:  StoredProcedure [dbo].[app_Badge_GetBadgeAgeGroups]    Script Date: 12/05/2014 14:23:59 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[app_Badge_GetBadgeAgeGroups]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[app_Badge_GetBadgeAgeGroups]
GO

/****** Object:  StoredProcedure [dbo].[app_Badge_GetBadgeBookLists]    Script Date: 12/05/2014 14:23:59 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[app_Badge_GetBadgeBookLists]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[app_Badge_GetBadgeBookLists]
GO

/****** Object:  StoredProcedure [dbo].[app_Badge_GetBadgeBranches]    Script Date: 12/05/2014 14:23:59 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[app_Badge_GetBadgeBranches]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[app_Badge_GetBadgeBranches]
GO

/****** Object:  StoredProcedure [dbo].[app_Badge_GetBadgeCategories]    Script Date: 12/05/2014 14:23:59 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[app_Badge_GetBadgeCategories]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[app_Badge_GetBadgeCategories]
GO

/****** Object:  StoredProcedure [dbo].[app_Badge_GetBadgeEventIDS]    Script Date: 12/05/2014 14:23:59 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[app_Badge_GetBadgeEventIDS]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[app_Badge_GetBadgeEventIDS]
GO

/****** Object:  StoredProcedure [dbo].[app_Badge_GetBadgeEvents]    Script Date: 12/05/2014 14:23:59 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[app_Badge_GetBadgeEvents]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[app_Badge_GetBadgeEvents]
GO

/****** Object:  StoredProcedure [dbo].[app_Badge_GetBadgeGallery]    Script Date: 12/05/2014 14:23:59 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[app_Badge_GetBadgeGallery]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[app_Badge_GetBadgeGallery]
GO

/****** Object:  StoredProcedure [dbo].[app_Badge_GetBadgeGames]    Script Date: 12/05/2014 14:23:59 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[app_Badge_GetBadgeGames]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[app_Badge_GetBadgeGames]
GO

/****** Object:  StoredProcedure [dbo].[app_Badge_GetBadgeLocations]    Script Date: 12/05/2014 14:23:59 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[app_Badge_GetBadgeLocations]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[app_Badge_GetBadgeLocations]
GO

/****** Object:  StoredProcedure [dbo].[app_Badge_GetBadgeReading]    Script Date: 12/05/2014 14:23:59 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[app_Badge_GetBadgeReading]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[app_Badge_GetBadgeReading]
GO

/****** Object:  StoredProcedure [dbo].[app_Badge_GetByID]    Script Date: 12/05/2014 14:23:59 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[app_Badge_GetByID]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[app_Badge_GetByID]
GO

/****** Object:  StoredProcedure [dbo].[app_Badge_GetEnrollmentPrograms]    Script Date: 12/05/2014 14:23:59 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[app_Badge_GetEnrollmentPrograms]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[app_Badge_GetEnrollmentPrograms]
GO

/****** Object:  StoredProcedure [dbo].[app_Badge_GetList]    Script Date: 12/05/2014 14:23:59 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[app_Badge_GetList]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[app_Badge_GetList]
GO

/****** Object:  StoredProcedure [dbo].[app_Badge_Insert]    Script Date: 12/05/2014 14:23:59 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[app_Badge_Insert]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[app_Badge_Insert]
GO

/****** Object:  StoredProcedure [dbo].[app_Badge_Update]    Script Date: 12/05/2014 14:23:59 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[app_Badge_Update]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[app_Badge_Update]
GO

/****** Object:  StoredProcedure [dbo].[app_Badge_UpdateBadgeAgeGroups]    Script Date: 12/05/2014 14:23:59 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[app_Badge_UpdateBadgeAgeGroups]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[app_Badge_UpdateBadgeAgeGroups]
GO

/****** Object:  StoredProcedure [dbo].[app_Badge_UpdateBadgeBranches]    Script Date: 12/05/2014 14:23:59 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[app_Badge_UpdateBadgeBranches]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[app_Badge_UpdateBadgeBranches]
GO

/****** Object:  StoredProcedure [dbo].[app_Badge_UpdateBadgeCategories]    Script Date: 12/05/2014 14:23:59 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[app_Badge_UpdateBadgeCategories]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[app_Badge_UpdateBadgeCategories]
GO

/****** Object:  StoredProcedure [dbo].[app_Badge_UpdateBadgeLocations]    Script Date: 12/05/2014 14:23:59 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[app_Badge_UpdateBadgeLocations]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[app_Badge_UpdateBadgeLocations]
GO

/****** Object:  StoredProcedure [dbo].[app_BookList_Delete]    Script Date: 12/05/2014 14:23:59 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[app_BookList_Delete]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[app_BookList_Delete]
GO

/****** Object:  StoredProcedure [dbo].[app_BookList_GetAll]    Script Date: 12/05/2014 14:23:59 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[app_BookList_GetAll]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[app_BookList_GetAll]
GO

/****** Object:  StoredProcedure [dbo].[app_BookList_GetByID]    Script Date: 12/05/2014 14:23:59 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[app_BookList_GetByID]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[app_BookList_GetByID]
GO

/****** Object:  StoredProcedure [dbo].[app_BookList_GetForDisplay]    Script Date: 12/05/2014 14:23:59 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[app_BookList_GetForDisplay]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[app_BookList_GetForDisplay]
GO

/****** Object:  StoredProcedure [dbo].[app_BookList_Insert]    Script Date: 12/05/2014 14:23:59 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[app_BookList_Insert]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[app_BookList_Insert]
GO

/****** Object:  StoredProcedure [dbo].[app_BookList_Update]    Script Date: 12/05/2014 14:23:59 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[app_BookList_Update]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[app_BookList_Update]
GO

/****** Object:  StoredProcedure [dbo].[app_BookListBooks_Delete]    Script Date: 12/05/2014 14:23:59 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[app_BookListBooks_Delete]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[app_BookListBooks_Delete]
GO

/****** Object:  StoredProcedure [dbo].[app_BookListBooks_GetAll]    Script Date: 12/05/2014 14:23:59 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[app_BookListBooks_GetAll]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[app_BookListBooks_GetAll]
GO

/****** Object:  StoredProcedure [dbo].[app_BookListBooks_GetByID]    Script Date: 12/05/2014 14:23:59 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[app_BookListBooks_GetByID]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[app_BookListBooks_GetByID]
GO

/****** Object:  StoredProcedure [dbo].[app_BookListBooks_GetForDisplay]    Script Date: 12/05/2014 14:23:59 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[app_BookListBooks_GetForDisplay]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[app_BookListBooks_GetForDisplay]
GO

/****** Object:  StoredProcedure [dbo].[app_BookListBooks_GetForPatronDisplay]    Script Date: 12/05/2014 14:23:59 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[app_BookListBooks_GetForPatronDisplay]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[app_BookListBooks_GetForPatronDisplay]
GO

/****** Object:  StoredProcedure [dbo].[app_BookListBooks_Insert]    Script Date: 12/05/2014 14:23:59 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[app_BookListBooks_Insert]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[app_BookListBooks_Insert]
GO

/****** Object:  StoredProcedure [dbo].[app_BookListBooks_Update]    Script Date: 12/05/2014 14:23:59 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[app_BookListBooks_Update]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[app_BookListBooks_Update]
GO

/****** Object:  StoredProcedure [dbo].[app_Code_Delete]    Script Date: 12/05/2014 14:23:59 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[app_Code_Delete]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[app_Code_Delete]
GO

/****** Object:  StoredProcedure [dbo].[app_Code_GetAll]    Script Date: 12/05/2014 14:23:59 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[app_Code_GetAll]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[app_Code_GetAll]
GO

/****** Object:  StoredProcedure [dbo].[app_Code_GetAllLibrarySystems]    Script Date: 12/05/2014 14:23:59 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[app_Code_GetAllLibrarySystems]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[app_Code_GetAllLibrarySystems]
GO

/****** Object:  StoredProcedure [dbo].[app_Code_GetAllSchools]    Script Date: 12/05/2014 14:23:59 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[app_Code_GetAllSchools]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[app_Code_GetAllSchools]
GO

/****** Object:  StoredProcedure [dbo].[app_Code_GetAllTypeID]    Script Date: 12/05/2014 14:23:59 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[app_Code_GetAllTypeID]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[app_Code_GetAllTypeID]
GO

/****** Object:  StoredProcedure [dbo].[app_Code_GetAllTypeName]    Script Date: 12/05/2014 14:24:00 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[app_Code_GetAllTypeName]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[app_Code_GetAllTypeName]
GO

/****** Object:  StoredProcedure [dbo].[app_Code_GetByID]    Script Date: 12/05/2014 14:24:00 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[app_Code_GetByID]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[app_Code_GetByID]
GO

/****** Object:  StoredProcedure [dbo].[app_Code_Insert]    Script Date: 12/05/2014 14:24:00 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[app_Code_Insert]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[app_Code_Insert]
GO

/****** Object:  StoredProcedure [dbo].[app_Code_Update]    Script Date: 12/05/2014 14:24:00 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[app_Code_Update]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[app_Code_Update]
GO

/****** Object:  StoredProcedure [dbo].[app_CodeType_Delete]    Script Date: 12/05/2014 14:24:00 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[app_CodeType_Delete]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[app_CodeType_Delete]
GO

/****** Object:  StoredProcedure [dbo].[app_CodeType_GetAll]    Script Date: 12/05/2014 14:24:00 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[app_CodeType_GetAll]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[app_CodeType_GetAll]
GO

/****** Object:  StoredProcedure [dbo].[app_CodeType_GetByID]    Script Date: 12/05/2014 14:24:00 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[app_CodeType_GetByID]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[app_CodeType_GetByID]
GO

/****** Object:  StoredProcedure [dbo].[app_CodeType_Insert]    Script Date: 12/05/2014 14:24:00 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[app_CodeType_Insert]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[app_CodeType_Insert]
GO

/****** Object:  StoredProcedure [dbo].[app_CodeType_Update]    Script Date: 12/05/2014 14:24:00 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[app_CodeType_Update]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[app_CodeType_Update]
GO

/****** Object:  StoredProcedure [dbo].[app_CustomEventFields_Delete]    Script Date: 12/05/2014 14:24:00 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[app_CustomEventFields_Delete]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[app_CustomEventFields_Delete]
GO

/****** Object:  StoredProcedure [dbo].[app_CustomEventFields_GetAll]    Script Date: 12/05/2014 14:24:00 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[app_CustomEventFields_GetAll]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[app_CustomEventFields_GetAll]
GO

/****** Object:  StoredProcedure [dbo].[app_CustomEventFields_GetByID]    Script Date: 12/05/2014 14:24:00 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[app_CustomEventFields_GetByID]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[app_CustomEventFields_GetByID]
GO

/****** Object:  StoredProcedure [dbo].[app_CustomEventFields_Insert]    Script Date: 12/05/2014 14:24:00 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[app_CustomEventFields_Insert]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[app_CustomEventFields_Insert]
GO

/****** Object:  StoredProcedure [dbo].[app_CustomEventFields_Update]    Script Date: 12/05/2014 14:24:00 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[app_CustomEventFields_Update]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[app_CustomEventFields_Update]
GO

/****** Object:  StoredProcedure [dbo].[app_CustomRegistrationFields_Delete]    Script Date: 12/05/2014 14:24:00 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[app_CustomRegistrationFields_Delete]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[app_CustomRegistrationFields_Delete]
GO

/****** Object:  StoredProcedure [dbo].[app_CustomRegistrationFields_GetAll]    Script Date: 12/05/2014 14:24:00 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[app_CustomRegistrationFields_GetAll]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[app_CustomRegistrationFields_GetAll]
GO

/****** Object:  StoredProcedure [dbo].[app_CustomRegistrationFields_GetByID]    Script Date: 12/05/2014 14:24:00 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[app_CustomRegistrationFields_GetByID]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[app_CustomRegistrationFields_GetByID]
GO

/****** Object:  StoredProcedure [dbo].[app_CustomRegistrationFields_Insert]    Script Date: 12/05/2014 14:24:00 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[app_CustomRegistrationFields_Insert]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[app_CustomRegistrationFields_Insert]
GO

/****** Object:  StoredProcedure [dbo].[app_CustomRegistrationFields_Update]    Script Date: 12/05/2014 14:24:00 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[app_CustomRegistrationFields_Update]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[app_CustomRegistrationFields_Update]
GO

/****** Object:  StoredProcedure [dbo].[app_Event_Delete]    Script Date: 12/05/2014 14:24:00 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[app_Event_Delete]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[app_Event_Delete]
GO

/****** Object:  StoredProcedure [dbo].[app_Event_GetAdminSearch]    Script Date: 12/05/2014 14:24:00 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[app_Event_GetAdminSearch]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[app_Event_GetAdminSearch]
GO

/****** Object:  StoredProcedure [dbo].[app_Event_GetAll]    Script Date: 12/05/2014 14:24:00 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[app_Event_GetAll]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[app_Event_GetAll]
GO

/****** Object:  StoredProcedure [dbo].[app_Event_GetByID]    Script Date: 12/05/2014 14:24:00 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[app_Event_GetByID]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[app_Event_GetByID]
GO

/****** Object:  StoredProcedure [dbo].[app_Event_GetEventCountByEventCode]    Script Date: 12/05/2014 14:24:00 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[app_Event_GetEventCountByEventCode]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[app_Event_GetEventCountByEventCode]
GO

/****** Object:  StoredProcedure [dbo].[app_Event_GetEventList]    Script Date: 12/05/2014 14:24:00 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[app_Event_GetEventList]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[app_Event_GetEventList]
GO

/****** Object:  StoredProcedure [dbo].[app_Event_GetEventsByEventCode]    Script Date: 12/05/2014 14:24:00 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[app_Event_GetEventsByEventCode]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[app_Event_GetEventsByEventCode]
GO

/****** Object:  StoredProcedure [dbo].[app_Event_GetUpcomingDisplay]    Script Date: 12/05/2014 14:24:00 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[app_Event_GetUpcomingDisplay]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[app_Event_GetUpcomingDisplay]
GO

/****** Object:  StoredProcedure [dbo].[app_Event_InitTenant]    Script Date: 12/05/2014 14:24:00 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[app_Event_InitTenant]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[app_Event_InitTenant]
GO

/****** Object:  StoredProcedure [dbo].[app_Event_Insert]    Script Date: 12/05/2014 14:24:00 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[app_Event_Insert]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[app_Event_Insert]
GO

/****** Object:  StoredProcedure [dbo].[app_Event_Update]    Script Date: 12/05/2014 14:24:00 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[app_Event_Update]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[app_Event_Update]
GO

/****** Object:  StoredProcedure [dbo].[app_GamePlayStats_Delete]    Script Date: 12/05/2014 14:24:00 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[app_GamePlayStats_Delete]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[app_GamePlayStats_Delete]
GO

/****** Object:  StoredProcedure [dbo].[app_GamePlayStats_GetAll]    Script Date: 12/05/2014 14:24:00 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[app_GamePlayStats_GetAll]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[app_GamePlayStats_GetAll]
GO

/****** Object:  StoredProcedure [dbo].[app_GamePlayStats_GetByID]    Script Date: 12/05/2014 14:24:00 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[app_GamePlayStats_GetByID]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[app_GamePlayStats_GetByID]
GO

/****** Object:  StoredProcedure [dbo].[app_GamePlayStats_Insert]    Script Date: 12/05/2014 14:24:00 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[app_GamePlayStats_Insert]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[app_GamePlayStats_Insert]
GO

/****** Object:  StoredProcedure [dbo].[app_GamePlayStats_Update]    Script Date: 12/05/2014 14:24:00 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[app_GamePlayStats_Update]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[app_GamePlayStats_Update]
GO

/****** Object:  StoredProcedure [dbo].[app_LibraryCrosswalk_Delete]    Script Date: 12/05/2014 14:24:00 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[app_LibraryCrosswalk_Delete]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[app_LibraryCrosswalk_Delete]
GO

/****** Object:  StoredProcedure [dbo].[app_LibraryCrosswalk_GetAll]    Script Date: 12/05/2014 14:24:00 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[app_LibraryCrosswalk_GetAll]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[app_LibraryCrosswalk_GetAll]
GO

/****** Object:  StoredProcedure [dbo].[app_LibraryCrosswalk_GetByID]    Script Date: 12/05/2014 14:24:00 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[app_LibraryCrosswalk_GetByID]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[app_LibraryCrosswalk_GetByID]
GO

/****** Object:  StoredProcedure [dbo].[app_LibraryCrosswalk_GetByLibraryID]    Script Date: 12/05/2014 14:24:00 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[app_LibraryCrosswalk_GetByLibraryID]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[app_LibraryCrosswalk_GetByLibraryID]
GO

/****** Object:  StoredProcedure [dbo].[app_LibraryCrosswalk_GetFilteredBranchDDValues]    Script Date: 12/05/2014 14:24:00 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[app_LibraryCrosswalk_GetFilteredBranchDDValues]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[app_LibraryCrosswalk_GetFilteredBranchDDValues]
GO

/****** Object:  StoredProcedure [dbo].[app_LibraryCrosswalk_GetFilteredDistrictDDValues]    Script Date: 12/05/2014 14:24:00 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[app_LibraryCrosswalk_GetFilteredDistrictDDValues]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[app_LibraryCrosswalk_GetFilteredDistrictDDValues]
GO

/****** Object:  StoredProcedure [dbo].[app_LibraryCrosswalk_Insert]    Script Date: 12/05/2014 14:24:00 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[app_LibraryCrosswalk_Insert]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[app_LibraryCrosswalk_Insert]
GO

/****** Object:  StoredProcedure [dbo].[app_LibraryCrosswalk_Update]    Script Date: 12/05/2014 14:24:00 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[app_LibraryCrosswalk_Update]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[app_LibraryCrosswalk_Update]
GO

/****** Object:  StoredProcedure [dbo].[app_MGChooseAdv_Delete]    Script Date: 12/05/2014 14:24:00 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[app_MGChooseAdv_Delete]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[app_MGChooseAdv_Delete]
GO

/****** Object:  StoredProcedure [dbo].[app_MGChooseAdv_GetAll]    Script Date: 12/05/2014 14:24:00 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[app_MGChooseAdv_GetAll]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[app_MGChooseAdv_GetAll]
GO

/****** Object:  StoredProcedure [dbo].[app_MGChooseAdv_GetByID]    Script Date: 12/05/2014 14:24:00 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[app_MGChooseAdv_GetByID]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[app_MGChooseAdv_GetByID]
GO

/****** Object:  StoredProcedure [dbo].[app_MGChooseAdv_GetByIDWithParent]    Script Date: 12/05/2014 14:24:00 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[app_MGChooseAdv_GetByIDWithParent]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[app_MGChooseAdv_GetByIDWithParent]
GO

/****** Object:  StoredProcedure [dbo].[app_MGChooseAdv_GetByMGID]    Script Date: 12/05/2014 14:24:00 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[app_MGChooseAdv_GetByMGID]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[app_MGChooseAdv_GetByMGID]
GO

/****** Object:  StoredProcedure [dbo].[app_MGChooseAdv_Insert]    Script Date: 12/05/2014 14:24:00 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[app_MGChooseAdv_Insert]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[app_MGChooseAdv_Insert]
GO

/****** Object:  StoredProcedure [dbo].[app_MGChooseAdv_Update]    Script Date: 12/05/2014 14:24:00 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[app_MGChooseAdv_Update]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[app_MGChooseAdv_Update]
GO

/****** Object:  StoredProcedure [dbo].[app_MGChooseAdvSlides_Delete]    Script Date: 12/05/2014 14:24:00 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[app_MGChooseAdvSlides_Delete]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[app_MGChooseAdvSlides_Delete]
GO

/****** Object:  StoredProcedure [dbo].[app_MGChooseAdvSlides_GetAll]    Script Date: 12/05/2014 14:24:00 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[app_MGChooseAdvSlides_GetAll]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[app_MGChooseAdvSlides_GetAll]
GO

/****** Object:  StoredProcedure [dbo].[app_MGChooseAdvSlides_GetAllByDifficulty]    Script Date: 12/05/2014 14:24:00 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[app_MGChooseAdvSlides_GetAllByDifficulty]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[app_MGChooseAdvSlides_GetAllByDifficulty]
GO

/****** Object:  StoredProcedure [dbo].[app_MGChooseAdvSlides_GetByID]    Script Date: 12/05/2014 14:24:00 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[app_MGChooseAdvSlides_GetByID]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[app_MGChooseAdvSlides_GetByID]
GO

/****** Object:  StoredProcedure [dbo].[app_MGChooseAdvSlides_GetPlaySlide]    Script Date: 12/05/2014 14:24:00 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[app_MGChooseAdvSlides_GetPlaySlide]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[app_MGChooseAdvSlides_GetPlaySlide]
GO

/****** Object:  StoredProcedure [dbo].[app_MGChooseAdvSlides_Insert]    Script Date: 12/05/2014 14:24:00 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[app_MGChooseAdvSlides_Insert]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[app_MGChooseAdvSlides_Insert]
GO

/****** Object:  StoredProcedure [dbo].[app_MGChooseAdvSlides_MoveDn]    Script Date: 12/05/2014 14:24:00 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[app_MGChooseAdvSlides_MoveDn]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[app_MGChooseAdvSlides_MoveDn]
GO

/****** Object:  StoredProcedure [dbo].[app_MGChooseAdvSlides_MoveUp]    Script Date: 12/05/2014 14:24:00 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[app_MGChooseAdvSlides_MoveUp]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[app_MGChooseAdvSlides_MoveUp]
GO

/****** Object:  StoredProcedure [dbo].[app_MGChooseAdvSlides_Reorder]    Script Date: 12/05/2014 14:24:00 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[app_MGChooseAdvSlides_Reorder]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[app_MGChooseAdvSlides_Reorder]
GO

/****** Object:  StoredProcedure [dbo].[app_MGChooseAdvSlides_Update]    Script Date: 12/05/2014 14:24:00 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[app_MGChooseAdvSlides_Update]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[app_MGChooseAdvSlides_Update]
GO

/****** Object:  StoredProcedure [dbo].[app_MGCodeBreaker_Delete]    Script Date: 12/05/2014 14:24:00 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[app_MGCodeBreaker_Delete]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[app_MGCodeBreaker_Delete]
GO

/****** Object:  StoredProcedure [dbo].[app_MGCodeBreaker_GetAll]    Script Date: 12/05/2014 14:24:00 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[app_MGCodeBreaker_GetAll]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[app_MGCodeBreaker_GetAll]
GO

/****** Object:  StoredProcedure [dbo].[app_MGCodeBreaker_GetByID]    Script Date: 12/05/2014 14:24:00 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[app_MGCodeBreaker_GetByID]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[app_MGCodeBreaker_GetByID]
GO

/****** Object:  StoredProcedure [dbo].[app_MGCodeBreaker_GetByIDWithParent]    Script Date: 12/05/2014 14:24:00 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[app_MGCodeBreaker_GetByIDWithParent]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[app_MGCodeBreaker_GetByIDWithParent]
GO

/****** Object:  StoredProcedure [dbo].[app_MGCodeBreaker_GetByMGID]    Script Date: 12/05/2014 14:24:00 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[app_MGCodeBreaker_GetByMGID]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[app_MGCodeBreaker_GetByMGID]
GO

/****** Object:  StoredProcedure [dbo].[app_MGCodeBreaker_Insert]    Script Date: 12/05/2014 14:24:00 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[app_MGCodeBreaker_Insert]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[app_MGCodeBreaker_Insert]
GO

/****** Object:  StoredProcedure [dbo].[app_MGCodeBreaker_Update]    Script Date: 12/05/2014 14:24:00 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[app_MGCodeBreaker_Update]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[app_MGCodeBreaker_Update]
GO

/****** Object:  StoredProcedure [dbo].[app_MGHiddenPic_Delete]    Script Date: 12/05/2014 14:24:00 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[app_MGHiddenPic_Delete]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[app_MGHiddenPic_Delete]
GO

/****** Object:  StoredProcedure [dbo].[app_MGHiddenPic_GetAll]    Script Date: 12/05/2014 14:24:00 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[app_MGHiddenPic_GetAll]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[app_MGHiddenPic_GetAll]
GO

/****** Object:  StoredProcedure [dbo].[app_MGHiddenPic_GetByID]    Script Date: 12/05/2014 14:24:00 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[app_MGHiddenPic_GetByID]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[app_MGHiddenPic_GetByID]
GO

/****** Object:  StoredProcedure [dbo].[app_MGHiddenPic_GetByIDWithParent]    Script Date: 12/05/2014 14:24:00 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[app_MGHiddenPic_GetByIDWithParent]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[app_MGHiddenPic_GetByIDWithParent]
GO

/****** Object:  StoredProcedure [dbo].[app_MGHiddenPic_GetByMGID]    Script Date: 12/05/2014 14:24:00 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[app_MGHiddenPic_GetByMGID]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[app_MGHiddenPic_GetByMGID]
GO

/****** Object:  StoredProcedure [dbo].[app_MGHiddenPic_GetRandomBK]    Script Date: 12/05/2014 14:24:00 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[app_MGHiddenPic_GetRandomBK]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[app_MGHiddenPic_GetRandomBK]
GO

/****** Object:  StoredProcedure [dbo].[app_MGHiddenPic_Insert]    Script Date: 12/05/2014 14:24:00 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[app_MGHiddenPic_Insert]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[app_MGHiddenPic_Insert]
GO

/****** Object:  StoredProcedure [dbo].[app_MGHiddenPic_Update]    Script Date: 12/05/2014 14:24:00 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[app_MGHiddenPic_Update]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[app_MGHiddenPic_Update]
GO

/****** Object:  StoredProcedure [dbo].[app_MGHiddenPicBk_Delete]    Script Date: 12/05/2014 14:24:00 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[app_MGHiddenPicBk_Delete]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[app_MGHiddenPicBk_Delete]
GO

/****** Object:  StoredProcedure [dbo].[app_MGHiddenPicBk_GetAll]    Script Date: 12/05/2014 14:24:00 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[app_MGHiddenPicBk_GetAll]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[app_MGHiddenPicBk_GetAll]
GO

/****** Object:  StoredProcedure [dbo].[app_MGHiddenPicBk_GetByID]    Script Date: 12/05/2014 14:24:00 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[app_MGHiddenPicBk_GetByID]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[app_MGHiddenPicBk_GetByID]
GO

/****** Object:  StoredProcedure [dbo].[app_MGHiddenPicBk_GetByIDWithParent]    Script Date: 12/05/2014 14:24:00 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[app_MGHiddenPicBk_GetByIDWithParent]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[app_MGHiddenPicBk_GetByIDWithParent]
GO

/****** Object:  StoredProcedure [dbo].[app_MGHiddenPicBk_GetByMGID]    Script Date: 12/05/2014 14:24:00 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[app_MGHiddenPicBk_GetByMGID]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[app_MGHiddenPicBk_GetByMGID]
GO

/****** Object:  StoredProcedure [dbo].[app_MGHiddenPicBk_Insert]    Script Date: 12/05/2014 14:24:00 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[app_MGHiddenPicBk_Insert]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[app_MGHiddenPicBk_Insert]
GO

/****** Object:  StoredProcedure [dbo].[app_MGHiddenPicBk_Update]    Script Date: 12/05/2014 14:24:00 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[app_MGHiddenPicBk_Update]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[app_MGHiddenPicBk_Update]
GO

/****** Object:  StoredProcedure [dbo].[app_MGMatchingGame_Delete]    Script Date: 12/05/2014 14:24:00 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[app_MGMatchingGame_Delete]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[app_MGMatchingGame_Delete]
GO

/****** Object:  StoredProcedure [dbo].[app_MGMatchingGame_GetAll]    Script Date: 12/05/2014 14:24:00 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[app_MGMatchingGame_GetAll]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[app_MGMatchingGame_GetAll]
GO

/****** Object:  StoredProcedure [dbo].[app_MGMatchingGame_GetByID]    Script Date: 12/05/2014 14:24:00 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[app_MGMatchingGame_GetByID]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[app_MGMatchingGame_GetByID]
GO

/****** Object:  StoredProcedure [dbo].[app_MGMatchingGame_GetByIDWithParent]    Script Date: 12/05/2014 14:24:00 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[app_MGMatchingGame_GetByIDWithParent]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[app_MGMatchingGame_GetByIDWithParent]
GO

/****** Object:  StoredProcedure [dbo].[app_MGMatchingGame_GetByMGID]    Script Date: 12/05/2014 14:24:00 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[app_MGMatchingGame_GetByMGID]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[app_MGMatchingGame_GetByMGID]
GO

/****** Object:  StoredProcedure [dbo].[app_MGMatchingGame_GetRandomPlayItems]    Script Date: 12/05/2014 14:24:00 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[app_MGMatchingGame_GetRandomPlayItems]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[app_MGMatchingGame_GetRandomPlayItems]
GO

/****** Object:  StoredProcedure [dbo].[app_MGMatchingGame_Insert]    Script Date: 12/05/2014 14:24:00 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[app_MGMatchingGame_Insert]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[app_MGMatchingGame_Insert]
GO

/****** Object:  StoredProcedure [dbo].[app_MGMatchingGame_Update]    Script Date: 12/05/2014 14:24:00 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[app_MGMatchingGame_Update]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[app_MGMatchingGame_Update]
GO

/****** Object:  StoredProcedure [dbo].[app_MGMatchingGameTiles_Delete]    Script Date: 12/05/2014 14:24:00 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[app_MGMatchingGameTiles_Delete]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[app_MGMatchingGameTiles_Delete]
GO

/****** Object:  StoredProcedure [dbo].[app_MGMatchingGameTiles_GetAll]    Script Date: 12/05/2014 14:24:00 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[app_MGMatchingGameTiles_GetAll]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[app_MGMatchingGameTiles_GetAll]
GO

/****** Object:  StoredProcedure [dbo].[app_MGMatchingGameTiles_GetByID]    Script Date: 12/05/2014 14:24:00 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[app_MGMatchingGameTiles_GetByID]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[app_MGMatchingGameTiles_GetByID]
GO

/****** Object:  StoredProcedure [dbo].[app_MGMatchingGameTiles_Insert]    Script Date: 12/05/2014 14:24:00 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[app_MGMatchingGameTiles_Insert]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[app_MGMatchingGameTiles_Insert]
GO

/****** Object:  StoredProcedure [dbo].[app_MGMatchingGameTiles_Update]    Script Date: 12/05/2014 14:24:00 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[app_MGMatchingGameTiles_Update]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[app_MGMatchingGameTiles_Update]
GO

/****** Object:  StoredProcedure [dbo].[app_MGMixAndMatch_Delete]    Script Date: 12/05/2014 14:24:00 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[app_MGMixAndMatch_Delete]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[app_MGMixAndMatch_Delete]
GO

/****** Object:  StoredProcedure [dbo].[app_MGMixAndMatch_GetAll]    Script Date: 12/05/2014 14:24:00 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[app_MGMixAndMatch_GetAll]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[app_MGMixAndMatch_GetAll]
GO

/****** Object:  StoredProcedure [dbo].[app_MGMixAndMatch_GetByID]    Script Date: 12/05/2014 14:24:00 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[app_MGMixAndMatch_GetByID]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[app_MGMixAndMatch_GetByID]
GO

/****** Object:  StoredProcedure [dbo].[app_MGMixAndMatch_GetByIDWithParent]    Script Date: 12/05/2014 14:24:00 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[app_MGMixAndMatch_GetByIDWithParent]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[app_MGMixAndMatch_GetByIDWithParent]
GO

/****** Object:  StoredProcedure [dbo].[app_MGMixAndMatch_GetByMGID]    Script Date: 12/05/2014 14:24:00 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[app_MGMixAndMatch_GetByMGID]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[app_MGMixAndMatch_GetByMGID]
GO

/****** Object:  StoredProcedure [dbo].[app_MGMixAndMatch_Insert]    Script Date: 12/05/2014 14:24:00 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[app_MGMixAndMatch_Insert]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[app_MGMixAndMatch_Insert]
GO

/****** Object:  StoredProcedure [dbo].[app_MGMixAndMatch_Update]    Script Date: 12/05/2014 14:24:00 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[app_MGMixAndMatch_Update]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[app_MGMixAndMatch_Update]
GO

/****** Object:  StoredProcedure [dbo].[app_MGMixAndMatchItems_Delete]    Script Date: 12/05/2014 14:24:00 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[app_MGMixAndMatchItems_Delete]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[app_MGMixAndMatchItems_Delete]
GO

/****** Object:  StoredProcedure [dbo].[app_MGMixAndMatchItems_GetAll]    Script Date: 12/05/2014 14:24:00 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[app_MGMixAndMatchItems_GetAll]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[app_MGMixAndMatchItems_GetAll]
GO

/****** Object:  StoredProcedure [dbo].[app_MGMixAndMatchItems_GetByID]    Script Date: 12/05/2014 14:24:00 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[app_MGMixAndMatchItems_GetByID]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[app_MGMixAndMatchItems_GetByID]
GO

/****** Object:  StoredProcedure [dbo].[app_MGMixAndMatchItems_GetRandom3]    Script Date: 12/05/2014 14:24:00 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[app_MGMixAndMatchItems_GetRandom3]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[app_MGMixAndMatchItems_GetRandom3]
GO

/****** Object:  StoredProcedure [dbo].[app_MGMixAndMatchItems_Insert]    Script Date: 12/05/2014 14:24:00 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[app_MGMixAndMatchItems_Insert]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[app_MGMixAndMatchItems_Insert]
GO

/****** Object:  StoredProcedure [dbo].[app_MGMixAndMatchItems_Update]    Script Date: 12/05/2014 14:24:00 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[app_MGMixAndMatchItems_Update]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[app_MGMixAndMatchItems_Update]
GO

/****** Object:  StoredProcedure [dbo].[app_MGOnlineBook_Delete]    Script Date: 12/05/2014 14:24:00 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[app_MGOnlineBook_Delete]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[app_MGOnlineBook_Delete]
GO

/****** Object:  StoredProcedure [dbo].[app_MGOnlineBook_GetAll]    Script Date: 12/05/2014 14:24:00 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[app_MGOnlineBook_GetAll]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[app_MGOnlineBook_GetAll]
GO

/****** Object:  StoredProcedure [dbo].[app_MGOnlineBook_GetByID]    Script Date: 12/05/2014 14:24:00 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[app_MGOnlineBook_GetByID]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[app_MGOnlineBook_GetByID]
GO

/****** Object:  StoredProcedure [dbo].[app_MGOnlineBook_GetByIDWithParent]    Script Date: 12/05/2014 14:24:00 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[app_MGOnlineBook_GetByIDWithParent]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[app_MGOnlineBook_GetByIDWithParent]
GO

/****** Object:  StoredProcedure [dbo].[app_MGOnlineBook_GetByMGID]    Script Date: 12/05/2014 14:24:00 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[app_MGOnlineBook_GetByMGID]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[app_MGOnlineBook_GetByMGID]
GO

/****** Object:  StoredProcedure [dbo].[app_MGOnlineBook_Insert]    Script Date: 12/05/2014 14:24:00 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[app_MGOnlineBook_Insert]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[app_MGOnlineBook_Insert]
GO

/****** Object:  StoredProcedure [dbo].[app_MGOnlineBook_Update]    Script Date: 12/05/2014 14:24:00 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[app_MGOnlineBook_Update]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[app_MGOnlineBook_Update]
GO

/****** Object:  StoredProcedure [dbo].[app_MGOnlineBookPages_Delete]    Script Date: 12/05/2014 14:24:00 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[app_MGOnlineBookPages_Delete]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[app_MGOnlineBookPages_Delete]
GO

/****** Object:  StoredProcedure [dbo].[app_MGOnlineBookPages_GetAll]    Script Date: 12/05/2014 14:24:00 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[app_MGOnlineBookPages_GetAll]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[app_MGOnlineBookPages_GetAll]
GO

/****** Object:  StoredProcedure [dbo].[app_MGOnlineBookPages_GetByID]    Script Date: 12/05/2014 14:24:00 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[app_MGOnlineBookPages_GetByID]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[app_MGOnlineBookPages_GetByID]
GO

/****** Object:  StoredProcedure [dbo].[app_MGOnlineBookPages_GetByPage]    Script Date: 12/05/2014 14:24:00 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[app_MGOnlineBookPages_GetByPage]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[app_MGOnlineBookPages_GetByPage]
GO

/****** Object:  StoredProcedure [dbo].[app_MGOnlineBookPages_Insert]    Script Date: 12/05/2014 14:24:00 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[app_MGOnlineBookPages_Insert]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[app_MGOnlineBookPages_Insert]
GO

/****** Object:  StoredProcedure [dbo].[app_MGOnlineBookPages_MoveDn]    Script Date: 12/05/2014 14:24:00 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[app_MGOnlineBookPages_MoveDn]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[app_MGOnlineBookPages_MoveDn]
GO

/****** Object:  StoredProcedure [dbo].[app_MGOnlineBookPages_MoveUp]    Script Date: 12/05/2014 14:24:00 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[app_MGOnlineBookPages_MoveUp]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[app_MGOnlineBookPages_MoveUp]
GO

/****** Object:  StoredProcedure [dbo].[app_MGOnlineBookPages_Reorder]    Script Date: 12/05/2014 14:24:00 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[app_MGOnlineBookPages_Reorder]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[app_MGOnlineBookPages_Reorder]
GO

/****** Object:  StoredProcedure [dbo].[app_MGOnlineBookPages_Update]    Script Date: 12/05/2014 14:24:00 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[app_MGOnlineBookPages_Update]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[app_MGOnlineBookPages_Update]
GO

/****** Object:  StoredProcedure [dbo].[app_MGWordMatch_Delete]    Script Date: 12/05/2014 14:24:00 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[app_MGWordMatch_Delete]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[app_MGWordMatch_Delete]
GO

/****** Object:  StoredProcedure [dbo].[app_MGWordMatch_GetAll]    Script Date: 12/05/2014 14:24:00 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[app_MGWordMatch_GetAll]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[app_MGWordMatch_GetAll]
GO

/****** Object:  StoredProcedure [dbo].[app_MGWordMatch_GetByID]    Script Date: 12/05/2014 14:24:00 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[app_MGWordMatch_GetByID]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[app_MGWordMatch_GetByID]
GO

/****** Object:  StoredProcedure [dbo].[app_MGWordMatch_GetByIDWithParent]    Script Date: 12/05/2014 14:24:00 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[app_MGWordMatch_GetByIDWithParent]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[app_MGWordMatch_GetByIDWithParent]
GO

/****** Object:  StoredProcedure [dbo].[app_MGWordMatch_GetByMGID]    Script Date: 12/05/2014 14:24:00 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[app_MGWordMatch_GetByMGID]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[app_MGWordMatch_GetByMGID]
GO

/****** Object:  StoredProcedure [dbo].[app_MGWordMatch_GetRandomX]    Script Date: 12/05/2014 14:24:00 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[app_MGWordMatch_GetRandomX]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[app_MGWordMatch_GetRandomX]
GO

/****** Object:  StoredProcedure [dbo].[app_MGWordMatch_Insert]    Script Date: 12/05/2014 14:24:00 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[app_MGWordMatch_Insert]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[app_MGWordMatch_Insert]
GO

/****** Object:  StoredProcedure [dbo].[app_MGWordMatch_Update]    Script Date: 12/05/2014 14:24:00 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[app_MGWordMatch_Update]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[app_MGWordMatch_Update]
GO

/****** Object:  StoredProcedure [dbo].[app_MGWordMatchItems_Delete]    Script Date: 12/05/2014 14:24:00 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[app_MGWordMatchItems_Delete]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[app_MGWordMatchItems_Delete]
GO

/****** Object:  StoredProcedure [dbo].[app_MGWordMatchItems_GetAll]    Script Date: 12/05/2014 14:24:00 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[app_MGWordMatchItems_GetAll]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[app_MGWordMatchItems_GetAll]
GO

/****** Object:  StoredProcedure [dbo].[app_MGWordMatchItems_GetByID]    Script Date: 12/05/2014 14:24:00 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[app_MGWordMatchItems_GetByID]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[app_MGWordMatchItems_GetByID]
GO

/****** Object:  StoredProcedure [dbo].[app_MGWordMatchItems_Insert]    Script Date: 12/05/2014 14:24:00 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[app_MGWordMatchItems_Insert]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[app_MGWordMatchItems_Insert]
GO

/****** Object:  StoredProcedure [dbo].[app_MGWordMatchItems_Update]    Script Date: 12/05/2014 14:24:00 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[app_MGWordMatchItems_Update]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[app_MGWordMatchItems_Update]
GO

/****** Object:  StoredProcedure [dbo].[app_Minigame_Delete]    Script Date: 12/05/2014 14:24:00 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[app_Minigame_Delete]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[app_Minigame_Delete]
GO

/****** Object:  StoredProcedure [dbo].[app_Minigame_GetAll]    Script Date: 12/05/2014 14:24:00 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[app_Minigame_GetAll]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[app_Minigame_GetAll]
GO

/****** Object:  StoredProcedure [dbo].[app_Minigame_GetByID]    Script Date: 12/05/2014 14:24:00 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[app_Minigame_GetByID]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[app_Minigame_GetByID]
GO

/****** Object:  StoredProcedure [dbo].[app_Minigame_GetList]    Script Date: 12/05/2014 14:24:00 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[app_Minigame_GetList]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[app_Minigame_GetList]
GO

/****** Object:  StoredProcedure [dbo].[app_Minigame_Insert]    Script Date: 12/05/2014 14:24:00 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[app_Minigame_Insert]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[app_Minigame_Insert]
GO

/****** Object:  StoredProcedure [dbo].[app_Minigame_Update]    Script Date: 12/05/2014 14:24:00 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[app_Minigame_Update]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[app_Minigame_Update]
GO

/****** Object:  StoredProcedure [dbo].[app_Notifications_Delete]    Script Date: 12/05/2014 14:24:00 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[app_Notifications_Delete]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[app_Notifications_Delete]
GO

/****** Object:  StoredProcedure [dbo].[app_Notifications_GetAll]    Script Date: 12/05/2014 14:24:00 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[app_Notifications_GetAll]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[app_Notifications_GetAll]
GO

/****** Object:  StoredProcedure [dbo].[app_Notifications_GetAllFromPatron]    Script Date: 12/05/2014 14:24:00 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[app_Notifications_GetAllFromPatron]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[app_Notifications_GetAllFromPatron]
GO

/****** Object:  StoredProcedure [dbo].[app_Notifications_GetAllToPatron]    Script Date: 12/05/2014 14:24:00 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[app_Notifications_GetAllToPatron]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[app_Notifications_GetAllToPatron]
GO

/****** Object:  StoredProcedure [dbo].[app_Notifications_GetAllUnreadToPatron]    Script Date: 12/05/2014 14:24:00 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[app_Notifications_GetAllUnreadToPatron]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[app_Notifications_GetAllUnreadToPatron]
GO

/****** Object:  StoredProcedure [dbo].[app_Notifications_GetByID]    Script Date: 12/05/2014 14:24:00 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[app_Notifications_GetByID]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[app_Notifications_GetByID]
GO

/****** Object:  StoredProcedure [dbo].[app_Notifications_Insert]    Script Date: 12/05/2014 14:24:00 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[app_Notifications_Insert]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[app_Notifications_Insert]
GO

/****** Object:  StoredProcedure [dbo].[app_Notifications_Update]    Script Date: 12/05/2014 14:24:00 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[app_Notifications_Update]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[app_Notifications_Update]
GO

/****** Object:  StoredProcedure [dbo].[app_Offer_Delete]    Script Date: 12/05/2014 14:24:00 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[app_Offer_Delete]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[app_Offer_Delete]
GO

/****** Object:  StoredProcedure [dbo].[app_Offer_GetAll]    Script Date: 12/05/2014 14:24:00 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[app_Offer_GetAll]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[app_Offer_GetAll]
GO

/****** Object:  StoredProcedure [dbo].[app_Offer_GetByID]    Script Date: 12/05/2014 14:24:00 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[app_Offer_GetByID]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[app_Offer_GetByID]
GO

/****** Object:  StoredProcedure [dbo].[app_Offer_Insert]    Script Date: 12/05/2014 14:24:00 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[app_Offer_Insert]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[app_Offer_Insert]
GO

/****** Object:  StoredProcedure [dbo].[app_Offer_Update]    Script Date: 12/05/2014 14:24:00 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[app_Offer_Update]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[app_Offer_Update]
GO

/****** Object:  StoredProcedure [dbo].[app_Offers_GetForDisplay]    Script Date: 12/05/2014 14:24:00 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[app_Offers_GetForDisplay]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[app_Offers_GetForDisplay]
GO

/****** Object:  StoredProcedure [dbo].[app_Patron_CanManageSubAccount]    Script Date: 12/05/2014 14:24:00 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[app_Patron_CanManageSubAccount]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[app_Patron_CanManageSubAccount]
GO

/****** Object:  StoredProcedure [dbo].[app_Patron_CheckIfFinisher]    Script Date: 12/05/2014 14:24:00 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[app_Patron_CheckIfFinisher]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[app_Patron_CheckIfFinisher]
GO

/****** Object:  StoredProcedure [dbo].[app_Patron_Delete]    Script Date: 12/05/2014 14:24:00 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[app_Patron_Delete]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[app_Patron_Delete]
GO

/****** Object:  StoredProcedure [dbo].[app_Patron_GetAll]    Script Date: 12/05/2014 14:24:00 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[app_Patron_GetAll]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[app_Patron_GetAll]
GO

/****** Object:  StoredProcedure [dbo].[app_Patron_GetByEmail]    Script Date: 12/05/2014 14:24:00 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[app_Patron_GetByEmail]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[app_Patron_GetByEmail]
GO

/****** Object:  StoredProcedure [dbo].[app_Patron_GetByID]    Script Date: 12/05/2014 14:24:00 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[app_Patron_GetByID]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[app_Patron_GetByID]
GO

/****** Object:  StoredProcedure [dbo].[app_Patron_GetByUsername]    Script Date: 12/05/2014 14:24:00 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[app_Patron_GetByUsername]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[app_Patron_GetByUsername]
GO

/****** Object:  StoredProcedure [dbo].[app_Patron_GetPatronForEdit]    Script Date: 12/05/2014 14:24:00 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[app_Patron_GetPatronForEdit]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[app_Patron_GetPatronForEdit]
GO

/****** Object:  StoredProcedure [dbo].[app_Patron_GetScoreRank]    Script Date: 12/05/2014 14:24:00 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[app_Patron_GetScoreRank]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[app_Patron_GetScoreRank]
GO

/****** Object:  StoredProcedure [dbo].[app_Patron_GetSubAccountList]    Script Date: 12/05/2014 14:24:00 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[app_Patron_GetSubAccountList]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[app_Patron_GetSubAccountList]
GO

/****** Object:  StoredProcedure [dbo].[app_Patron_Insert]    Script Date: 12/05/2014 14:24:00 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[app_Patron_Insert]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[app_Patron_Insert]
GO

/****** Object:  StoredProcedure [dbo].[app_Patron_Login]    Script Date: 12/05/2014 14:24:00 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[app_Patron_Login]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[app_Patron_Login]
GO

/****** Object:  StoredProcedure [dbo].[app_Patron_Update]    Script Date: 12/05/2014 14:24:00 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[app_Patron_Update]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[app_Patron_Update]
GO

/****** Object:  StoredProcedure [dbo].[app_PatronBadges_Delete]    Script Date: 12/05/2014 14:24:00 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[app_PatronBadges_Delete]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[app_PatronBadges_Delete]
GO

/****** Object:  StoredProcedure [dbo].[app_PatronBadges_GetAll]    Script Date: 12/05/2014 14:24:00 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[app_PatronBadges_GetAll]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[app_PatronBadges_GetAll]
GO

/****** Object:  StoredProcedure [dbo].[app_PatronBadges_GetByID]    Script Date: 12/05/2014 14:24:00 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[app_PatronBadges_GetByID]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[app_PatronBadges_GetByID]
GO

/****** Object:  StoredProcedure [dbo].[app_PatronBadges_Insert]    Script Date: 12/05/2014 14:24:00 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[app_PatronBadges_Insert]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[app_PatronBadges_Insert]
GO

/****** Object:  StoredProcedure [dbo].[app_PatronBadges_Update]    Script Date: 12/05/2014 14:24:00 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[app_PatronBadges_Update]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[app_PatronBadges_Update]
GO

/****** Object:  StoredProcedure [dbo].[app_PatronBookLists_Delete]    Script Date: 12/05/2014 14:24:00 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[app_PatronBookLists_Delete]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[app_PatronBookLists_Delete]
GO

/****** Object:  StoredProcedure [dbo].[app_PatronBookLists_GetAll]    Script Date: 12/05/2014 14:24:00 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[app_PatronBookLists_GetAll]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[app_PatronBookLists_GetAll]
GO

/****** Object:  StoredProcedure [dbo].[app_PatronBookLists_GetByID]    Script Date: 12/05/2014 14:24:00 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[app_PatronBookLists_GetByID]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[app_PatronBookLists_GetByID]
GO

/****** Object:  StoredProcedure [dbo].[app_PatronBookLists_Insert]    Script Date: 12/05/2014 14:24:00 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[app_PatronBookLists_Insert]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[app_PatronBookLists_Insert]
GO

/****** Object:  StoredProcedure [dbo].[app_PatronBookLists_Update]    Script Date: 12/05/2014 14:24:00 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[app_PatronBookLists_Update]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[app_PatronBookLists_Update]
GO

/****** Object:  StoredProcedure [dbo].[app_PatronPoints_Delete]    Script Date: 12/05/2014 14:24:00 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[app_PatronPoints_Delete]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[app_PatronPoints_Delete]
GO

/****** Object:  StoredProcedure [dbo].[app_PatronPoints_GetAll]    Script Date: 12/05/2014 14:24:00 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[app_PatronPoints_GetAll]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[app_PatronPoints_GetAll]
GO

/****** Object:  StoredProcedure [dbo].[app_PatronPoints_GetByID]    Script Date: 12/05/2014 14:24:00 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[app_PatronPoints_GetByID]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[app_PatronPoints_GetByID]
GO

/****** Object:  StoredProcedure [dbo].[app_PatronPoints_GetLastPatronEntryID]    Script Date: 12/05/2014 14:24:00 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[app_PatronPoints_GetLastPatronEntryID]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[app_PatronPoints_GetLastPatronEntryID]
GO

/****** Object:  StoredProcedure [dbo].[app_PatronPoints_GetPatronPointsBookList]    Script Date: 12/05/2014 14:24:00 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[app_PatronPoints_GetPatronPointsBookList]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[app_PatronPoints_GetPatronPointsBookList]
GO

/****** Object:  StoredProcedure [dbo].[app_PatronPoints_GetPatronPointsByKeyword]    Script Date: 12/05/2014 14:24:00 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[app_PatronPoints_GetPatronPointsByKeyword]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[app_PatronPoints_GetPatronPointsByKeyword]
GO

/****** Object:  StoredProcedure [dbo].[app_PatronPoints_GetPatronPointsByMGID]    Script Date: 12/05/2014 14:24:00 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[app_PatronPoints_GetPatronPointsByMGID]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[app_PatronPoints_GetPatronPointsByMGID]
GO

/****** Object:  StoredProcedure [dbo].[app_PatronPoints_GetProgramLeaderboard]    Script Date: 12/05/2014 14:24:00 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[app_PatronPoints_GetProgramLeaderboard]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[app_PatronPoints_GetProgramLeaderboard]
GO

/****** Object:  StoredProcedure [dbo].[app_PatronPoints_GetTotalPatronPoints]    Script Date: 12/05/2014 14:24:00 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[app_PatronPoints_GetTotalPatronPoints]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[app_PatronPoints_GetTotalPatronPoints]
GO

/****** Object:  StoredProcedure [dbo].[app_PatronPoints_GetTotalPatronPointsOnDate]    Script Date: 12/05/2014 14:24:00 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[app_PatronPoints_GetTotalPatronPointsOnDate]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[app_PatronPoints_GetTotalPatronPointsOnDate]
GO

/****** Object:  StoredProcedure [dbo].[app_PatronPoints_Insert]    Script Date: 12/05/2014 14:24:00 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[app_PatronPoints_Insert]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[app_PatronPoints_Insert]
GO

/****** Object:  StoredProcedure [dbo].[app_PatronPoints_Update]    Script Date: 12/05/2014 14:24:00 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[app_PatronPoints_Update]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[app_PatronPoints_Update]
GO

/****** Object:  StoredProcedure [dbo].[app_PatronPrizes_Delete]    Script Date: 12/05/2014 14:24:00 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[app_PatronPrizes_Delete]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[app_PatronPrizes_Delete]
GO

/****** Object:  StoredProcedure [dbo].[app_PatronPrizes_GetAll]    Script Date: 12/05/2014 14:24:00 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[app_PatronPrizes_GetAll]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[app_PatronPrizes_GetAll]
GO

/****** Object:  StoredProcedure [dbo].[app_PatronPrizes_GetByDrawingID]    Script Date: 12/05/2014 14:24:00 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[app_PatronPrizes_GetByDrawingID]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[app_PatronPrizes_GetByDrawingID]
GO

/****** Object:  StoredProcedure [dbo].[app_PatronPrizes_GetByID]    Script Date: 12/05/2014 14:24:00 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[app_PatronPrizes_GetByID]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[app_PatronPrizes_GetByID]
GO

/****** Object:  StoredProcedure [dbo].[app_PatronPrizes_Insert]    Script Date: 12/05/2014 14:24:00 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[app_PatronPrizes_Insert]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[app_PatronPrizes_Insert]
GO

/****** Object:  StoredProcedure [dbo].[app_PatronPrizes_Update]    Script Date: 12/05/2014 14:24:00 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[app_PatronPrizes_Update]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[app_PatronPrizes_Update]
GO

/****** Object:  StoredProcedure [dbo].[app_PatronReadingLog_Delete]    Script Date: 12/05/2014 14:24:00 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[app_PatronReadingLog_Delete]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[app_PatronReadingLog_Delete]
GO

/****** Object:  StoredProcedure [dbo].[app_PatronReadingLog_GetAll]    Script Date: 12/05/2014 14:24:00 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[app_PatronReadingLog_GetAll]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[app_PatronReadingLog_GetAll]
GO

/****** Object:  StoredProcedure [dbo].[app_PatronReadingLog_GetByID]    Script Date: 12/05/2014 14:24:00 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[app_PatronReadingLog_GetByID]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[app_PatronReadingLog_GetByID]
GO

/****** Object:  StoredProcedure [dbo].[app_PatronReadingLog_Insert]    Script Date: 12/05/2014 14:24:00 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[app_PatronReadingLog_Insert]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[app_PatronReadingLog_Insert]
GO

/****** Object:  StoredProcedure [dbo].[app_PatronReadingLog_Update]    Script Date: 12/05/2014 14:24:00 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[app_PatronReadingLog_Update]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[app_PatronReadingLog_Update]
GO

/****** Object:  StoredProcedure [dbo].[app_PatronReview_Delete]    Script Date: 12/05/2014 14:24:00 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[app_PatronReview_Delete]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[app_PatronReview_Delete]
GO

/****** Object:  StoredProcedure [dbo].[app_PatronReview_GetAll]    Script Date: 12/05/2014 14:24:00 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[app_PatronReview_GetAll]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[app_PatronReview_GetAll]
GO

/****** Object:  StoredProcedure [dbo].[app_PatronReview_GetByID]    Script Date: 12/05/2014 14:24:00 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[app_PatronReview_GetByID]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[app_PatronReview_GetByID]
GO

/****** Object:  StoredProcedure [dbo].[app_PatronReview_GetByLogID]    Script Date: 12/05/2014 14:24:00 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[app_PatronReview_GetByLogID]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[app_PatronReview_GetByLogID]
GO

/****** Object:  StoredProcedure [dbo].[app_PatronReview_Insert]    Script Date: 12/05/2014 14:24:00 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[app_PatronReview_Insert]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[app_PatronReview_Insert]
GO

/****** Object:  StoredProcedure [dbo].[app_PatronReview_Update]    Script Date: 12/05/2014 14:24:00 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[app_PatronReview_Update]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[app_PatronReview_Update]
GO

/****** Object:  StoredProcedure [dbo].[app_PatronRewardCodes_Delete]    Script Date: 12/05/2014 14:24:00 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[app_PatronRewardCodes_Delete]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[app_PatronRewardCodes_Delete]
GO

/****** Object:  StoredProcedure [dbo].[app_PatronRewardCodes_GetAll]    Script Date: 12/05/2014 14:24:00 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[app_PatronRewardCodes_GetAll]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[app_PatronRewardCodes_GetAll]
GO

/****** Object:  StoredProcedure [dbo].[app_PatronRewardCodes_GetByID]    Script Date: 12/05/2014 14:24:00 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[app_PatronRewardCodes_GetByID]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[app_PatronRewardCodes_GetByID]
GO

/****** Object:  StoredProcedure [dbo].[app_PatronRewardCodes_Insert]    Script Date: 12/05/2014 14:24:00 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[app_PatronRewardCodes_Insert]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[app_PatronRewardCodes_Insert]
GO

/****** Object:  StoredProcedure [dbo].[app_PatronRewardCodes_Update]    Script Date: 12/05/2014 14:24:00 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[app_PatronRewardCodes_Update]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[app_PatronRewardCodes_Update]
GO

/****** Object:  StoredProcedure [dbo].[app_PrizeDrawing_Delete]    Script Date: 12/05/2014 14:24:00 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[app_PrizeDrawing_Delete]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[app_PrizeDrawing_Delete]
GO

/****** Object:  StoredProcedure [dbo].[app_PrizeDrawing_DrawWinners]    Script Date: 12/05/2014 14:24:00 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[app_PrizeDrawing_DrawWinners]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[app_PrizeDrawing_DrawWinners]
GO

/****** Object:  StoredProcedure [dbo].[app_PrizeDrawing_GetAll]    Script Date: 12/05/2014 14:24:00 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[app_PrizeDrawing_GetAll]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[app_PrizeDrawing_GetAll]
GO

/****** Object:  StoredProcedure [dbo].[app_PrizeDrawing_GetAllWinners]    Script Date: 12/05/2014 14:24:00 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[app_PrizeDrawing_GetAllWinners]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[app_PrizeDrawing_GetAllWinners]
GO

/****** Object:  StoredProcedure [dbo].[app_PrizeDrawing_GetByID]    Script Date: 12/05/2014 14:24:00 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[app_PrizeDrawing_GetByID]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[app_PrizeDrawing_GetByID]
GO

/****** Object:  StoredProcedure [dbo].[app_PrizeDrawing_Insert]    Script Date: 12/05/2014 14:24:00 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[app_PrizeDrawing_Insert]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[app_PrizeDrawing_Insert]
GO

/****** Object:  StoredProcedure [dbo].[app_PrizeDrawing_Update]    Script Date: 12/05/2014 14:24:00 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[app_PrizeDrawing_Update]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[app_PrizeDrawing_Update]
GO

/****** Object:  StoredProcedure [dbo].[app_PrizeDrawingWinners_Delete]    Script Date: 12/05/2014 14:24:00 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[app_PrizeDrawingWinners_Delete]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[app_PrizeDrawingWinners_Delete]
GO

/****** Object:  StoredProcedure [dbo].[app_PrizeDrawingWinners_GetAll]    Script Date: 12/05/2014 14:24:00 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[app_PrizeDrawingWinners_GetAll]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[app_PrizeDrawingWinners_GetAll]
GO

/****** Object:  StoredProcedure [dbo].[app_PrizeDrawingWinners_GetByID]    Script Date: 12/05/2014 14:24:00 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[app_PrizeDrawingWinners_GetByID]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[app_PrizeDrawingWinners_GetByID]
GO

/****** Object:  StoredProcedure [dbo].[app_PrizeDrawingWinners_Insert]    Script Date: 12/05/2014 14:24:00 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[app_PrizeDrawingWinners_Insert]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[app_PrizeDrawingWinners_Insert]
GO

/****** Object:  StoredProcedure [dbo].[app_PrizeDrawingWinners_Update]    Script Date: 12/05/2014 14:24:00 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[app_PrizeDrawingWinners_Update]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[app_PrizeDrawingWinners_Update]
GO

/****** Object:  StoredProcedure [dbo].[app_PrizeTemplate_Delete]    Script Date: 12/05/2014 14:24:00 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[app_PrizeTemplate_Delete]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[app_PrizeTemplate_Delete]
GO

/****** Object:  StoredProcedure [dbo].[app_PrizeTemplate_GetAll]    Script Date: 12/05/2014 14:24:00 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[app_PrizeTemplate_GetAll]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[app_PrizeTemplate_GetAll]
GO

/****** Object:  StoredProcedure [dbo].[app_PrizeTemplate_GetByID]    Script Date: 12/05/2014 14:24:00 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[app_PrizeTemplate_GetByID]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[app_PrizeTemplate_GetByID]
GO

/****** Object:  StoredProcedure [dbo].[app_PrizeTemplate_Insert]    Script Date: 12/05/2014 14:24:00 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[app_PrizeTemplate_Insert]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[app_PrizeTemplate_Insert]
GO

/****** Object:  StoredProcedure [dbo].[app_PrizeTemplate_Update]    Script Date: 12/05/2014 14:24:00 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[app_PrizeTemplate_Update]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[app_PrizeTemplate_Update]
GO

/****** Object:  StoredProcedure [dbo].[app_ProgramCodes_AssignCodeForPatron]    Script Date: 12/05/2014 14:24:00 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[app_ProgramCodes_AssignCodeForPatron]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[app_ProgramCodes_AssignCodeForPatron]
GO

/****** Object:  StoredProcedure [dbo].[app_ProgramCodes_Delete]    Script Date: 12/05/2014 14:24:00 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[app_ProgramCodes_Delete]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[app_ProgramCodes_Delete]
GO

/****** Object:  StoredProcedure [dbo].[app_ProgramCodes_Generate]    Script Date: 12/05/2014 14:24:00 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[app_ProgramCodes_Generate]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[app_ProgramCodes_Generate]
GO

/****** Object:  StoredProcedure [dbo].[app_ProgramCodes_GetAll]    Script Date: 12/05/2014 14:24:00 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[app_ProgramCodes_GetAll]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[app_ProgramCodes_GetAll]
GO

/****** Object:  StoredProcedure [dbo].[app_ProgramCodes_GetAllByProgram]    Script Date: 12/05/2014 14:24:00 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[app_ProgramCodes_GetAllByProgram]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[app_ProgramCodes_GetAllByProgram]
GO

/****** Object:  StoredProcedure [dbo].[app_ProgramCodes_GetAllForPatron]    Script Date: 12/05/2014 14:24:00 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[app_ProgramCodes_GetAllForPatron]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[app_ProgramCodes_GetAllForPatron]
GO

/****** Object:  StoredProcedure [dbo].[app_ProgramCodes_GetByID]    Script Date: 12/05/2014 14:24:00 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[app_ProgramCodes_GetByID]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[app_ProgramCodes_GetByID]
GO

/****** Object:  StoredProcedure [dbo].[app_ProgramCodes_GetExportList]    Script Date: 12/05/2014 14:24:00 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[app_ProgramCodes_GetExportList]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[app_ProgramCodes_GetExportList]
GO

/****** Object:  StoredProcedure [dbo].[app_ProgramCodes_Insert]    Script Date: 12/05/2014 14:24:00 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[app_ProgramCodes_Insert]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[app_ProgramCodes_Insert]
GO

/****** Object:  StoredProcedure [dbo].[app_ProgramCodes_Stats]    Script Date: 12/05/2014 14:24:00 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[app_ProgramCodes_Stats]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[app_ProgramCodes_Stats]
GO

/****** Object:  StoredProcedure [dbo].[app_ProgramCodes_Update]    Script Date: 12/05/2014 14:24:00 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[app_ProgramCodes_Update]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[app_ProgramCodes_Update]
GO

/****** Object:  StoredProcedure [dbo].[app_ProgramGame_Delete]    Script Date: 12/05/2014 14:24:00 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[app_ProgramGame_Delete]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[app_ProgramGame_Delete]
GO

/****** Object:  StoredProcedure [dbo].[app_ProgramGame_GetAll]    Script Date: 12/05/2014 14:24:00 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[app_ProgramGame_GetAll]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[app_ProgramGame_GetAll]
GO

/****** Object:  StoredProcedure [dbo].[app_ProgramGame_GetByID]    Script Date: 12/05/2014 14:24:00 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[app_ProgramGame_GetByID]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[app_ProgramGame_GetByID]
GO

/****** Object:  StoredProcedure [dbo].[app_ProgramGame_Insert]    Script Date: 12/05/2014 14:24:00 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[app_ProgramGame_Insert]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[app_ProgramGame_Insert]
GO

/****** Object:  StoredProcedure [dbo].[app_ProgramGame_Update]    Script Date: 12/05/2014 14:24:00 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[app_ProgramGame_Update]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[app_ProgramGame_Update]
GO

/****** Object:  StoredProcedure [dbo].[app_ProgramGameLevel_Delete]    Script Date: 12/05/2014 14:24:01 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[app_ProgramGameLevel_Delete]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[app_ProgramGameLevel_Delete]
GO

/****** Object:  StoredProcedure [dbo].[app_ProgramGameLevel_GetAll]    Script Date: 12/05/2014 14:24:01 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[app_ProgramGameLevel_GetAll]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[app_ProgramGameLevel_GetAll]
GO

/****** Object:  StoredProcedure [dbo].[app_ProgramGameLevel_GetByID]    Script Date: 12/05/2014 14:24:01 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[app_ProgramGameLevel_GetByID]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[app_ProgramGameLevel_GetByID]
GO

/****** Object:  StoredProcedure [dbo].[app_ProgramGameLevel_Insert]    Script Date: 12/05/2014 14:24:01 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[app_ProgramGameLevel_Insert]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[app_ProgramGameLevel_Insert]
GO

/****** Object:  StoredProcedure [dbo].[app_ProgramGameLevel_MoveDn]    Script Date: 12/05/2014 14:24:01 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[app_ProgramGameLevel_MoveDn]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[app_ProgramGameLevel_MoveDn]
GO

/****** Object:  StoredProcedure [dbo].[app_ProgramGameLevel_MoveUp]    Script Date: 12/05/2014 14:24:01 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[app_ProgramGameLevel_MoveUp]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[app_ProgramGameLevel_MoveUp]
GO

/****** Object:  StoredProcedure [dbo].[app_ProgramGameLevel_Reorder]    Script Date: 12/05/2014 14:24:01 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[app_ProgramGameLevel_Reorder]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[app_ProgramGameLevel_Reorder]
GO

/****** Object:  StoredProcedure [dbo].[app_ProgramGameLevel_Update]    Script Date: 12/05/2014 14:24:01 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[app_ProgramGameLevel_Update]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[app_ProgramGameLevel_Update]
GO

/****** Object:  StoredProcedure [dbo].[app_ProgramGamePointConversion_Delete]    Script Date: 12/05/2014 14:24:01 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[app_ProgramGamePointConversion_Delete]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[app_ProgramGamePointConversion_Delete]
GO

/****** Object:  StoredProcedure [dbo].[app_ProgramGamePointConversion_GetAll]    Script Date: 12/05/2014 14:24:01 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[app_ProgramGamePointConversion_GetAll]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[app_ProgramGamePointConversion_GetAll]
GO

/****** Object:  StoredProcedure [dbo].[app_ProgramGamePointConversion_GetByActivityType]    Script Date: 12/05/2014 14:24:01 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[app_ProgramGamePointConversion_GetByActivityType]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[app_ProgramGamePointConversion_GetByActivityType]
GO

/****** Object:  StoredProcedure [dbo].[app_ProgramGamePointConversion_GetByID]    Script Date: 12/05/2014 14:24:01 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[app_ProgramGamePointConversion_GetByID]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[app_ProgramGamePointConversion_GetByID]
GO

/****** Object:  StoredProcedure [dbo].[app_ProgramGamePointConversion_Insert]    Script Date: 12/05/2014 14:24:01 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[app_ProgramGamePointConversion_Insert]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[app_ProgramGamePointConversion_Insert]
GO

/****** Object:  StoredProcedure [dbo].[app_ProgramGamePointConversion_Update]    Script Date: 12/05/2014 14:24:01 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[app_ProgramGamePointConversion_Update]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[app_ProgramGamePointConversion_Update]
GO

/****** Object:  StoredProcedure [dbo].[app_Programs_Delete]    Script Date: 12/05/2014 14:24:01 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[app_Programs_Delete]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[app_Programs_Delete]
GO

/****** Object:  StoredProcedure [dbo].[app_Programs_GetAll]    Script Date: 12/05/2014 14:24:01 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[app_Programs_GetAll]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[app_Programs_GetAll]
GO

/****** Object:  StoredProcedure [dbo].[app_Programs_GetAllActive]    Script Date: 12/05/2014 14:24:01 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[app_Programs_GetAllActive]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[app_Programs_GetAllActive]
GO

/****** Object:  StoredProcedure [dbo].[app_Programs_GetAllOrdered]    Script Date: 12/05/2014 14:24:01 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[app_Programs_GetAllOrdered]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[app_Programs_GetAllOrdered]
GO

/****** Object:  StoredProcedure [dbo].[app_Programs_GetAllTabs]    Script Date: 12/05/2014 14:24:01 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[app_Programs_GetAllTabs]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[app_Programs_GetAllTabs]
GO

/****** Object:  StoredProcedure [dbo].[app_Programs_GetByID]    Script Date: 12/05/2014 14:24:01 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[app_Programs_GetByID]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[app_Programs_GetByID]
GO

/****** Object:  StoredProcedure [dbo].[app_Programs_GetDefaultProgramForAgeAndGrade]    Script Date: 12/05/2014 14:24:01 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[app_Programs_GetDefaultProgramForAgeAndGrade]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[app_Programs_GetDefaultProgramForAgeAndGrade]
GO

/****** Object:  StoredProcedure [dbo].[app_Programs_GetDefaultProgramID]    Script Date: 12/05/2014 14:24:01 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[app_Programs_GetDefaultProgramID]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[app_Programs_GetDefaultProgramID]
GO

/****** Object:  StoredProcedure [dbo].[app_Programs_GetProgramMinigames]    Script Date: 12/05/2014 14:24:01 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[app_Programs_GetProgramMinigames]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[app_Programs_GetProgramMinigames]
GO

/****** Object:  StoredProcedure [dbo].[app_Programs_Insert]    Script Date: 12/05/2014 14:24:01 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[app_Programs_Insert]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[app_Programs_Insert]
GO

/****** Object:  StoredProcedure [dbo].[app_Programs_MoveDn]    Script Date: 12/05/2014 14:24:01 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[app_Programs_MoveDn]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[app_Programs_MoveDn]
GO

/****** Object:  StoredProcedure [dbo].[app_Programs_MoveUp]    Script Date: 12/05/2014 14:24:01 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[app_Programs_MoveUp]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[app_Programs_MoveUp]
GO

/****** Object:  StoredProcedure [dbo].[app_Programs_Reorder]    Script Date: 12/05/2014 14:24:01 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[app_Programs_Reorder]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[app_Programs_Reorder]
GO

/****** Object:  StoredProcedure [dbo].[app_Programs_Update]    Script Date: 12/05/2014 14:24:01 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[app_Programs_Update]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[app_Programs_Update]
GO

/****** Object:  StoredProcedure [dbo].[app_RegistrationSettings_Delete]    Script Date: 12/05/2014 14:24:01 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[app_RegistrationSettings_Delete]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[app_RegistrationSettings_Delete]
GO

/****** Object:  StoredProcedure [dbo].[app_RegistrationSettings_GetAll]    Script Date: 12/05/2014 14:24:01 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[app_RegistrationSettings_GetAll]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[app_RegistrationSettings_GetAll]
GO

/****** Object:  StoredProcedure [dbo].[app_RegistrationSettings_GetByID]    Script Date: 12/05/2014 14:24:01 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[app_RegistrationSettings_GetByID]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[app_RegistrationSettings_GetByID]
GO

/****** Object:  StoredProcedure [dbo].[app_RegistrationSettings_Insert]    Script Date: 12/05/2014 14:24:01 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[app_RegistrationSettings_Insert]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[app_RegistrationSettings_Insert]
GO

/****** Object:  StoredProcedure [dbo].[app_RegistrationSettings_Update]    Script Date: 12/05/2014 14:24:01 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[app_RegistrationSettings_Update]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[app_RegistrationSettings_Update]
GO

/****** Object:  StoredProcedure [dbo].[app_ReportTemplate_Delete]    Script Date: 12/05/2014 14:24:01 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[app_ReportTemplate_Delete]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[app_ReportTemplate_Delete]
GO

/****** Object:  StoredProcedure [dbo].[app_ReportTemplate_GetAll]    Script Date: 12/05/2014 14:24:01 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[app_ReportTemplate_GetAll]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[app_ReportTemplate_GetAll]
GO

/****** Object:  StoredProcedure [dbo].[app_ReportTemplate_GetByID]    Script Date: 12/05/2014 14:24:01 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[app_ReportTemplate_GetByID]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[app_ReportTemplate_GetByID]
GO

/****** Object:  StoredProcedure [dbo].[app_ReportTemplate_Insert]    Script Date: 12/05/2014 14:24:01 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[app_ReportTemplate_Insert]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[app_ReportTemplate_Insert]
GO

/****** Object:  StoredProcedure [dbo].[app_ReportTemplate_Update]    Script Date: 12/05/2014 14:24:01 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[app_ReportTemplate_Update]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[app_ReportTemplate_Update]
GO

/****** Object:  StoredProcedure [dbo].[app_SchoolCrosswalk_Delete]    Script Date: 12/05/2014 14:24:01 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[app_SchoolCrosswalk_Delete]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[app_SchoolCrosswalk_Delete]
GO

/****** Object:  StoredProcedure [dbo].[app_SchoolCrosswalk_GetAll]    Script Date: 12/05/2014 14:24:01 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[app_SchoolCrosswalk_GetAll]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[app_SchoolCrosswalk_GetAll]
GO

/****** Object:  StoredProcedure [dbo].[app_SchoolCrosswalk_GetByID]    Script Date: 12/05/2014 14:24:01 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[app_SchoolCrosswalk_GetByID]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[app_SchoolCrosswalk_GetByID]
GO

/****** Object:  StoredProcedure [dbo].[app_SchoolCrosswalk_GetBySchoolID]    Script Date: 12/05/2014 14:24:01 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[app_SchoolCrosswalk_GetBySchoolID]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[app_SchoolCrosswalk_GetBySchoolID]
GO

/****** Object:  StoredProcedure [dbo].[app_SchoolCrosswalk_GetFilteredSchoolDDValues]    Script Date: 12/05/2014 14:24:01 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[app_SchoolCrosswalk_GetFilteredSchoolDDValues]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[app_SchoolCrosswalk_GetFilteredSchoolDDValues]
GO

/****** Object:  StoredProcedure [dbo].[app_SchoolCrosswalk_Insert]    Script Date: 12/05/2014 14:24:01 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[app_SchoolCrosswalk_Insert]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[app_SchoolCrosswalk_Insert]
GO

/****** Object:  StoredProcedure [dbo].[app_SchoolCrosswalk_Update]    Script Date: 12/05/2014 14:24:01 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[app_SchoolCrosswalk_Update]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[app_SchoolCrosswalk_Update]
GO

/****** Object:  StoredProcedure [dbo].[app_SentEmailLog_Delete]    Script Date: 12/05/2014 14:24:01 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[app_SentEmailLog_Delete]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[app_SentEmailLog_Delete]
GO

/****** Object:  StoredProcedure [dbo].[app_SentEmailLog_DeleteAll]    Script Date: 12/05/2014 14:24:01 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[app_SentEmailLog_DeleteAll]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[app_SentEmailLog_DeleteAll]
GO

/****** Object:  StoredProcedure [dbo].[app_SentEmailLog_GetAll]    Script Date: 12/05/2014 14:24:01 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[app_SentEmailLog_GetAll]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[app_SentEmailLog_GetAll]
GO

/****** Object:  StoredProcedure [dbo].[app_SentEmailLog_GetByID]    Script Date: 12/05/2014 14:24:01 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[app_SentEmailLog_GetByID]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[app_SentEmailLog_GetByID]
GO

/****** Object:  StoredProcedure [dbo].[app_SentEmailLog_Insert]    Script Date: 12/05/2014 14:24:01 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[app_SentEmailLog_Insert]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[app_SentEmailLog_Insert]
GO

/****** Object:  StoredProcedure [dbo].[app_SentEmailLog_Update]    Script Date: 12/05/2014 14:24:01 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[app_SentEmailLog_Update]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[app_SentEmailLog_Update]
GO

/****** Object:  StoredProcedure [dbo].[app_SQChoices_Delete]    Script Date: 12/05/2014 14:24:01 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[app_SQChoices_Delete]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[app_SQChoices_Delete]
GO

/****** Object:  StoredProcedure [dbo].[app_SQChoices_GetAll]    Script Date: 12/05/2014 14:24:01 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[app_SQChoices_GetAll]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[app_SQChoices_GetAll]
GO

/****** Object:  StoredProcedure [dbo].[app_SQChoices_GetAllInList]    Script Date: 12/05/2014 14:24:01 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[app_SQChoices_GetAllInList]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[app_SQChoices_GetAllInList]
GO

/****** Object:  StoredProcedure [dbo].[app_SQChoices_GetByID]    Script Date: 12/05/2014 14:24:01 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[app_SQChoices_GetByID]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[app_SQChoices_GetByID]
GO

/****** Object:  StoredProcedure [dbo].[app_SQChoices_Insert]    Script Date: 12/05/2014 14:24:01 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[app_SQChoices_Insert]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[app_SQChoices_Insert]
GO

/****** Object:  StoredProcedure [dbo].[app_SQChoices_MoveDn]    Script Date: 12/05/2014 14:24:01 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[app_SQChoices_MoveDn]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[app_SQChoices_MoveDn]
GO

/****** Object:  StoredProcedure [dbo].[app_SQChoices_MoveUp]    Script Date: 12/05/2014 14:24:01 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[app_SQChoices_MoveUp]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[app_SQChoices_MoveUp]
GO

/****** Object:  StoredProcedure [dbo].[app_SQChoices_Reorder]    Script Date: 12/05/2014 14:24:01 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[app_SQChoices_Reorder]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[app_SQChoices_Reorder]
GO

/****** Object:  StoredProcedure [dbo].[app_SQChoices_Update]    Script Date: 12/05/2014 14:24:01 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[app_SQChoices_Update]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[app_SQChoices_Update]
GO

/****** Object:  StoredProcedure [dbo].[app_SQMatrixLines_Delete]    Script Date: 12/05/2014 14:24:01 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[app_SQMatrixLines_Delete]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[app_SQMatrixLines_Delete]
GO

/****** Object:  StoredProcedure [dbo].[app_SQMatrixLines_GetAll]    Script Date: 12/05/2014 14:24:01 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[app_SQMatrixLines_GetAll]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[app_SQMatrixLines_GetAll]
GO

/****** Object:  StoredProcedure [dbo].[app_SQMatrixLines_GetByID]    Script Date: 12/05/2014 14:24:01 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[app_SQMatrixLines_GetByID]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[app_SQMatrixLines_GetByID]
GO

/****** Object:  StoredProcedure [dbo].[app_SQMatrixLines_Insert]    Script Date: 12/05/2014 14:24:01 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[app_SQMatrixLines_Insert]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[app_SQMatrixLines_Insert]
GO

/****** Object:  StoredProcedure [dbo].[app_SQMatrixLines_MoveDn]    Script Date: 12/05/2014 14:24:01 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[app_SQMatrixLines_MoveDn]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[app_SQMatrixLines_MoveDn]
GO

/****** Object:  StoredProcedure [dbo].[app_SQMatrixLines_MoveUp]    Script Date: 12/05/2014 14:24:01 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[app_SQMatrixLines_MoveUp]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[app_SQMatrixLines_MoveUp]
GO

/****** Object:  StoredProcedure [dbo].[app_SQMatrixLines_Reorder]    Script Date: 12/05/2014 14:24:01 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[app_SQMatrixLines_Reorder]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[app_SQMatrixLines_Reorder]
GO

/****** Object:  StoredProcedure [dbo].[app_SQMatrixLines_Update]    Script Date: 12/05/2014 14:24:01 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[app_SQMatrixLines_Update]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[app_SQMatrixLines_Update]
GO

/****** Object:  StoredProcedure [dbo].[app_SRPReport_Delete]    Script Date: 12/05/2014 14:24:01 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[app_SRPReport_Delete]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[app_SRPReport_Delete]
GO

/****** Object:  StoredProcedure [dbo].[app_SRPReport_GetAll]    Script Date: 12/05/2014 14:24:01 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[app_SRPReport_GetAll]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[app_SRPReport_GetAll]
GO

/****** Object:  StoredProcedure [dbo].[app_SRPReport_GetByID]    Script Date: 12/05/2014 14:24:01 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[app_SRPReport_GetByID]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[app_SRPReport_GetByID]
GO

/****** Object:  StoredProcedure [dbo].[app_SRPReport_Insert]    Script Date: 12/05/2014 14:24:01 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[app_SRPReport_Insert]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[app_SRPReport_Insert]
GO

/****** Object:  StoredProcedure [dbo].[app_SRPReport_Update]    Script Date: 12/05/2014 14:24:01 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[app_SRPReport_Update]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[app_SRPReport_Update]
GO

/****** Object:  StoredProcedure [dbo].[app_SRPSettings_Delete]    Script Date: 12/05/2014 14:24:01 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[app_SRPSettings_Delete]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[app_SRPSettings_Delete]
GO

/****** Object:  StoredProcedure [dbo].[app_SRPSettings_GetAll]    Script Date: 12/05/2014 14:24:01 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[app_SRPSettings_GetAll]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[app_SRPSettings_GetAll]
GO

/****** Object:  StoredProcedure [dbo].[app_SRPSettings_GetByID]    Script Date: 12/05/2014 14:24:01 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[app_SRPSettings_GetByID]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[app_SRPSettings_GetByID]
GO

/****** Object:  StoredProcedure [dbo].[app_SRPSettings_GetByName]    Script Date: 12/05/2014 14:24:01 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[app_SRPSettings_GetByName]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[app_SRPSettings_GetByName]
GO

/****** Object:  StoredProcedure [dbo].[app_SRPSettings_Insert]    Script Date: 12/05/2014 14:24:01 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[app_SRPSettings_Insert]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[app_SRPSettings_Insert]
GO

/****** Object:  StoredProcedure [dbo].[app_SRPSettings_Update]    Script Date: 12/05/2014 14:24:01 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[app_SRPSettings_Update]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[app_SRPSettings_Update]
GO

/****** Object:  StoredProcedure [dbo].[app_Survey_Delete]    Script Date: 12/05/2014 14:24:01 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[app_Survey_Delete]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[app_Survey_Delete]
GO

/****** Object:  StoredProcedure [dbo].[app_Survey_GetAll]    Script Date: 12/05/2014 14:24:01 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[app_Survey_GetAll]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[app_Survey_GetAll]
GO

/****** Object:  StoredProcedure [dbo].[app_Survey_GetAllFinalized]    Script Date: 12/05/2014 14:24:01 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[app_Survey_GetAllFinalized]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[app_Survey_GetAllFinalized]
GO

/****** Object:  StoredProcedure [dbo].[app_Survey_GetByID]    Script Date: 12/05/2014 14:24:01 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[app_Survey_GetByID]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[app_Survey_GetByID]
GO

/****** Object:  StoredProcedure [dbo].[app_Survey_GetNumQuestions]    Script Date: 12/05/2014 14:24:01 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[app_Survey_GetNumQuestions]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[app_Survey_GetNumQuestions]
GO

/****** Object:  StoredProcedure [dbo].[app_Survey_Insert]    Script Date: 12/05/2014 14:24:01 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[app_Survey_Insert]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[app_Survey_Insert]
GO

/****** Object:  StoredProcedure [dbo].[app_Survey_Update]    Script Date: 12/05/2014 14:24:01 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[app_Survey_Update]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[app_Survey_Update]
GO

/****** Object:  StoredProcedure [dbo].[app_SurveyAnswers_Delete]    Script Date: 12/05/2014 14:24:01 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[app_SurveyAnswers_Delete]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[app_SurveyAnswers_Delete]
GO

/****** Object:  StoredProcedure [dbo].[app_SurveyAnswers_GetAll]    Script Date: 12/05/2014 14:24:01 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[app_SurveyAnswers_GetAll]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[app_SurveyAnswers_GetAll]
GO

/****** Object:  StoredProcedure [dbo].[app_SurveyAnswers_GetAllExpanded]    Script Date: 12/05/2014 14:24:01 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[app_SurveyAnswers_GetAllExpanded]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[app_SurveyAnswers_GetAllExpanded]
GO

/****** Object:  StoredProcedure [dbo].[app_SurveyAnswers_GetByID]    Script Date: 12/05/2014 14:24:01 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[app_SurveyAnswers_GetByID]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[app_SurveyAnswers_GetByID]
GO

/****** Object:  StoredProcedure [dbo].[app_SurveyAnswers_Insert]    Script Date: 12/05/2014 14:24:01 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[app_SurveyAnswers_Insert]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[app_SurveyAnswers_Insert]
GO

/****** Object:  StoredProcedure [dbo].[app_SurveyAnswers_Update]    Script Date: 12/05/2014 14:24:01 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[app_SurveyAnswers_Update]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[app_SurveyAnswers_Update]
GO

/****** Object:  StoredProcedure [dbo].[app_SurveyQuestion_Delete]    Script Date: 12/05/2014 14:24:01 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[app_SurveyQuestion_Delete]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[app_SurveyQuestion_Delete]
GO

/****** Object:  StoredProcedure [dbo].[app_SurveyQuestion_GetAll]    Script Date: 12/05/2014 14:24:01 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[app_SurveyQuestion_GetAll]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[app_SurveyQuestion_GetAll]
GO

/****** Object:  StoredProcedure [dbo].[app_SurveyQuestion_GetByID]    Script Date: 12/05/2014 14:24:01 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[app_SurveyQuestion_GetByID]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[app_SurveyQuestion_GetByID]
GO

/****** Object:  StoredProcedure [dbo].[app_SurveyQuestion_GetPageFromQNum]    Script Date: 12/05/2014 14:24:01 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[app_SurveyQuestion_GetPageFromQNum]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[app_SurveyQuestion_GetPageFromQNum]
GO

/****** Object:  StoredProcedure [dbo].[app_SurveyQuestion_Insert]    Script Date: 12/05/2014 14:24:01 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[app_SurveyQuestion_Insert]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[app_SurveyQuestion_Insert]
GO

/****** Object:  StoredProcedure [dbo].[app_SurveyQuestion_MoveDn]    Script Date: 12/05/2014 14:24:01 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[app_SurveyQuestion_MoveDn]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[app_SurveyQuestion_MoveDn]
GO

/****** Object:  StoredProcedure [dbo].[app_SurveyQuestion_MoveUp]    Script Date: 12/05/2014 14:24:01 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[app_SurveyQuestion_MoveUp]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[app_SurveyQuestion_MoveUp]
GO

/****** Object:  StoredProcedure [dbo].[app_SurveyQuestion_Reorder]    Script Date: 12/05/2014 14:24:01 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[app_SurveyQuestion_Reorder]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[app_SurveyQuestion_Reorder]
GO

/****** Object:  StoredProcedure [dbo].[app_SurveyQuestion_Update]    Script Date: 12/05/2014 14:24:01 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[app_SurveyQuestion_Update]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[app_SurveyQuestion_Update]
GO

/****** Object:  StoredProcedure [dbo].[app_SurveyResults_Delete]    Script Date: 12/05/2014 14:24:01 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[app_SurveyResults_Delete]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[app_SurveyResults_Delete]
GO

/****** Object:  StoredProcedure [dbo].[app_SurveyResults_GetAll]    Script Date: 12/05/2014 14:24:01 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[app_SurveyResults_GetAll]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[app_SurveyResults_GetAll]
GO

/****** Object:  StoredProcedure [dbo].[app_SurveyResults_GetAllComplete]    Script Date: 12/05/2014 14:24:01 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[app_SurveyResults_GetAllComplete]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[app_SurveyResults_GetAllComplete]
GO

/****** Object:  StoredProcedure [dbo].[app_SurveyResults_GetAllExpanded]    Script Date: 12/05/2014 14:24:01 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[app_SurveyResults_GetAllExpanded]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[app_SurveyResults_GetAllExpanded]
GO

/****** Object:  StoredProcedure [dbo].[app_SurveyResults_GetAllStats]    Script Date: 12/05/2014 14:24:01 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[app_SurveyResults_GetAllStats]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[app_SurveyResults_GetAllStats]
GO

/****** Object:  StoredProcedure [dbo].[app_SurveyResults_GetByID]    Script Date: 12/05/2014 14:24:01 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[app_SurveyResults_GetByID]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[app_SurveyResults_GetByID]
GO

/****** Object:  StoredProcedure [dbo].[app_SurveyResults_GetBySurveyAndSource]    Script Date: 12/05/2014 14:24:01 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[app_SurveyResults_GetBySurveyAndSource]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[app_SurveyResults_GetBySurveyAndSource]
GO

/****** Object:  StoredProcedure [dbo].[app_SurveyResults_GetExport]    Script Date: 12/05/2014 14:24:01 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[app_SurveyResults_GetExport]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[app_SurveyResults_GetExport]
GO

/****** Object:  StoredProcedure [dbo].[app_SurveyResults_GetQClarifications]    Script Date: 12/05/2014 14:24:01 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[app_SurveyResults_GetQClarifications]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[app_SurveyResults_GetQClarifications]
GO

/****** Object:  StoredProcedure [dbo].[app_SurveyResults_GetQComments]    Script Date: 12/05/2014 14:24:01 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[app_SurveyResults_GetQComments]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[app_SurveyResults_GetQComments]
GO

/****** Object:  StoredProcedure [dbo].[app_SurveyResults_GetQFreeForm]    Script Date: 12/05/2014 14:24:01 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[app_SurveyResults_GetQFreeForm]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[app_SurveyResults_GetQFreeForm]
GO

/****** Object:  StoredProcedure [dbo].[app_SurveyResults_GetQStats]    Script Date: 12/05/2014 14:24:01 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[app_SurveyResults_GetQStats]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[app_SurveyResults_GetQStats]
GO

/****** Object:  StoredProcedure [dbo].[app_SurveyResults_GetQStatsMedium]    Script Date: 12/05/2014 14:24:01 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[app_SurveyResults_GetQStatsMedium]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[app_SurveyResults_GetQStatsMedium]
GO

/****** Object:  StoredProcedure [dbo].[app_SurveyResults_GetQStatsSimple]    Script Date: 12/05/2014 14:24:01 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[app_SurveyResults_GetQStatsSimple]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[app_SurveyResults_GetQStatsSimple]
GO

/****** Object:  StoredProcedure [dbo].[app_SurveyResults_GetSources]    Script Date: 12/05/2014 14:24:01 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[app_SurveyResults_GetSources]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[app_SurveyResults_GetSources]
GO

/****** Object:  StoredProcedure [dbo].[app_SurveyResults_Insert]    Script Date: 12/05/2014 14:24:01 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[app_SurveyResults_Insert]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[app_SurveyResults_Insert]
GO

/****** Object:  StoredProcedure [dbo].[app_SurveyResults_Update]    Script Date: 12/05/2014 14:24:01 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[app_SurveyResults_Update]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[app_SurveyResults_Update]
GO

/****** Object:  StoredProcedure [dbo].[app_Tenant_Delete]    Script Date: 12/05/2014 14:24:01 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[app_Tenant_Delete]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[app_Tenant_Delete]
GO

/****** Object:  StoredProcedure [dbo].[app_Tenant_GetAll]    Script Date: 12/05/2014 14:24:01 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[app_Tenant_GetAll]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[app_Tenant_GetAll]
GO

/****** Object:  StoredProcedure [dbo].[app_Tenant_GetAllActive]    Script Date: 12/05/2014 14:24:01 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[app_Tenant_GetAllActive]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[app_Tenant_GetAllActive]
GO

/****** Object:  StoredProcedure [dbo].[app_Tenant_GetByDomainName]    Script Date: 12/05/2014 14:24:01 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[app_Tenant_GetByDomainName]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[app_Tenant_GetByDomainName]
GO

/****** Object:  StoredProcedure [dbo].[app_Tenant_GetByID]    Script Date: 12/05/2014 14:24:01 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[app_Tenant_GetByID]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[app_Tenant_GetByID]
GO

/****** Object:  StoredProcedure [dbo].[app_Tenant_GetByProgramID]    Script Date: 12/05/2014 14:24:01 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[app_Tenant_GetByProgramID]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[app_Tenant_GetByProgramID]
GO

/****** Object:  StoredProcedure [dbo].[app_Tenant_GetMasterID]    Script Date: 12/05/2014 14:24:01 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[app_Tenant_GetMasterID]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[app_Tenant_GetMasterID]
GO

/****** Object:  StoredProcedure [dbo].[app_Tenant_Insert]    Script Date: 12/05/2014 14:24:01 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[app_Tenant_Insert]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[app_Tenant_Insert]
GO

/****** Object:  StoredProcedure [dbo].[app_Tenant_Update]    Script Date: 12/05/2014 14:24:01 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[app_Tenant_Update]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[app_Tenant_Update]
GO

/****** Object:  StoredProcedure [dbo].[app_TenantInitData_GetPKbyOriginalPK]    Script Date: 12/05/2014 14:24:01 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[app_TenantInitData_GetPKbyOriginalPK]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[app_TenantInitData_GetPKbyOriginalPK]
GO

/****** Object:  StoredProcedure [dbo].[app_TenantInitData_Insert]    Script Date: 12/05/2014 14:24:01 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[app_TenantInitData_Insert]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[app_TenantInitData_Insert]
GO


GO

/****** Object:  StoredProcedure [dbo].[app_Avatar_Delete]    Script Date: 12/05/2014 14:24:02 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO


CREATE PROCEDURE [dbo].[app_Avatar_Delete]
@AID int 
,@TenID int = null
AS
   Delete from [Avatar] Where AID = @AID
		AND TenID = @TenID
GO

/****** Object:  StoredProcedure [dbo].[app_Avatar_GetAll]    Script Date: 12/05/2014 14:24:02 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO


CREATE PROCEDURE [dbo].[app_Avatar_GetAll]
@TenID int = null
AS
   Select * from [Avatar] where (TenID = @TenID or @TenID is null)

GO

/****** Object:  StoredProcedure [dbo].[app_Avatar_GetByID]    Script Date: 12/05/2014 14:24:02 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO


CREATE PROCEDURE [dbo].[app_Avatar_GetByID]
@AID int 
AS
   Select * from [Avatar] Where AID = @AID

GO

/****** Object:  StoredProcedure [dbo].[app_Avatar_Insert]    Script Date: 12/05/2014 14:24:02 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO


CREATE PROCEDURE [dbo].[app_Avatar_Insert] (
	 @Name varchar (50)
	,@Gender varchar (1)
	,@LastModDate datetime 
	,@LastModUser varchar (50)
	,@AddedDate datetime 
	,@AddedUser varchar (50)
,@TenID int = 0
,@FldInt1 int = 0
,@FldInt2 int = 0
,@FldInt3 int = 0
,@FldBit1 bit = 0
,@FldBit2 bit = 0
,@FldBit3 bit = 0
,@FldText1 text = ''
,@FldText2 text = ''
,@FldText3 text = ''

	,@AID int output 
) AS
Begin
	Insert into Avatar
		(Name
		,Gender
		,LastModDate
		,LastModUser
		,AddedDate
		,AddedUser
		,TenID, FldInt1, FldInt2, FldInt3, FldBit1, FldBit2, FldBit3, FldText1, FldText2, FldText3
)
	VALUES
		(@Name
		,@Gender
		,@LastModDate
		,@LastModUser
		,@AddedDate
		,@AddedUser
		,@TenID, @FldInt1, @FldInt2, @FldInt3, @FldBit1, @FldBit2, @FldBit3, @FldText1, @FldText2, @FldText3		
)
Select @AID = SCOPE_IDENTITY()
Select @AID
END

GO

/****** Object:  StoredProcedure [dbo].[app_Avatar_Update]    Script Date: 12/05/2014 14:24:02 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO


CREATE PROCEDURE [dbo].[app_Avatar_Update] (
	 @AID int 
	,@Name varchar (50)
	,@Gender varchar (1)
	,@LastModDate datetime 
	,@LastModUser varchar (50)
	,@AddedDate datetime 
	,@AddedUser varchar (50)
,@TenID int = 0
,@FldInt1 int = 0
,@FldInt2 int = 0
,@FldInt3 int = 0
,@FldBit1 bit = 0
,@FldBit2 bit = 0
,@FldBit3 bit = 0
,@FldText1 text = ''
,@FldText2 text = ''
,@FldText3 text = ''

) AS
	Update Avatar
	Set 
		Name =  @Name
		,Gender =  @Gender
		,LastModDate =  @LastModDate
		,LastModUser =  @LastModUser
		,AddedDate =  @AddedDate
		,AddedUser =  @AddedUser
,TenID = @TenID
,FldInt1 = @FldInt1 
,FldInt2 = @FldInt2
,FldInt3 = @FldInt3 
,FldBit1 = @FldBit1
,FldBit2 = @FldBit2
,FldBit3 = @FldBit3
,FldText1 = @FldText1
,FldText2 = @FldText2
,FldText3 = @FldText3
	Where AID = @AID
		AND TenID = @TenID



GO

/****** Object:  StoredProcedure [dbo].[app_Award_Delete]    Script Date: 12/05/2014 14:24:02 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO

CREATE PROCEDURE [dbo].[app_Award_Delete]
@AID int 

AS
   Delete from [Award] Where AID = @AID 

GO

/****** Object:  StoredProcedure [dbo].[app_Award_GetAll]    Script Date: 12/05/2014 14:24:02 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO

CREATE PROCEDURE [dbo].[app_Award_GetAll]
@TenID int = null
AS
Select * 
	, isnull((select AdminName from Badge where BID = BadgeId), '') as BadgeName 
	, isnull((select Code from Code where CID = BranchID), '') as Branch
	, isnull((select AdminName from Programs where PID = ProgramId), '') as Program 
	, isnull((select Code from Code where CID = District), '') as DistrictName 
	, isnull((select Code from Code where CID = SchoolName), '') as SchName
from [Award] where (TenID = @TenID or @TenID is null)
order by AwardName


GO

/****** Object:  StoredProcedure [dbo].[app_Award_GetBadgeListMembership]    Script Date: 12/05/2014 14:24:02 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO

CREATE PROCEDURE [dbo].[app_Award_GetBadgeListMembership]
@BadgeList varchar(500) = '' 
,@TenID int
AS
Select BID	, AdminName
			, Case when CHARINDEX(CONVERT(varchar(10), BID) + ',', ','+@BadgeList+',') > 0 then 1 else 0 end as isMember
from Badge
where TenID = @TenID
order by AdminName, BID

GO

/****** Object:  StoredProcedure [dbo].[app_Award_GetByID]    Script Date: 12/05/2014 14:24:02 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO

CREATE PROCEDURE [dbo].[app_Award_GetByID]
@AID int 
AS
   Select * from [Award] Where AID = @AID

GO

/****** Object:  StoredProcedure [dbo].[app_Award_GetPatronQualifyingAwards]    Script Date: 12/05/2014 14:24:02 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO

CREATE PROCEDURE [dbo].[app_Award_GetPatronQualifyingAwards]
@PID int = 0
AS
select a.*, p.PID, ProgID, PrimaryLibrary, p.District, p.SchoolName, Points
from Award a
		 inner join	(
			select PID, ProgID, PrimaryLibrary, District, SchoolName, 
				isnull((select isnull(SUM(isnull(NumPoints,0)),0) from PatronPoints pp where pp.PID = pt.PID),0) as Points 
				,TenID
			from Patron pt
			where pt.PID = @PID
					) as p
			on 
				p.TenID = a.TenID
				AND
				(a.ProgramID = p.ProgID or a.ProgramID=0 )
				AND
				(a.BranchID = p.PrimaryLibrary or a.BranchID=0 )
				AND
				(a.District = p.District or a.District = '' )
				AND
				(a.SchoolName = p.SchoolName or a.SchoolName = '' )	
				AND 
				(a.NumPoints <= p.Points)
AND
(BadgeList = '' or dbo.fx_PatronHasAllBadgesInList(p.PID, BadgeList) = 1)


GO

/****** Object:  StoredProcedure [dbo].[app_Award_GetPatronQualifyingAwardsWTenant]    Script Date: 12/05/2014 14:24:02 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO


CREATE PROCEDURE [dbo].[app_Award_GetPatronQualifyingAwardsWTenant]
@PID int = 0
,@TenID int = 1
AS
select a.*, p.PID, ProgID, PrimaryLibrary, p.District, p.SchoolName, Points
from Award a
inner join	(
select PID, ProgID, PrimaryLibrary, District, SchoolName,
isnull((select isnull(SUM(isnull(NumPoints,0)),0) from PatronPoints pp where pp.PID = pt.PID),0) as Points
, @TenID as TenID
from Patron pt
where pt.PID = @PID
) as p
on
p.TenID = a.TenID
AND
(a.ProgramID = p.ProgID or a.ProgramID=0 )
AND
(a.BranchID = p.PrimaryLibrary or a.BranchID=0 )
AND
(a.District = p.District or a.District = '' )
AND
(a.SchoolName = p.SchoolName or a.SchoolName = '' )
AND
(a.NumPoints <= p.Points)
AND
(BadgeList = '' or dbo.fx_PatronHasAllBadgesInList(p.PID, BadgeList) = 1)


GO

/****** Object:  StoredProcedure [dbo].[app_Award_Insert]    Script Date: 12/05/2014 14:24:02 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO

CREATE PROCEDURE [dbo].[app_Award_Insert] (
@AwardName varchar (80)
,@BadgeID int
,@NumPoints int
,@BranchID int
,@ProgramID int
,@District varchar (50)
,@SchoolName varchar (50)
,@BadgeList varchar (500)
,@LastModDate datetime
,@LastModUser varchar (50)
,@AddedDate datetime
,@AddedUser varchar (50)
,@TenID int = 0
,@FldInt1 int = 0
,@FldInt2 int = 0
,@FldInt3 int = 0
,@FldBit1 bit = 0
,@FldBit2 bit = 0
,@FldBit3 bit = 0
,@FldText1 text = ''
,@FldText2 text = ''
,@FldText3 text = ''
,@AID int output
) AS
Begin
Insert into Award
(AwardName
,BadgeID
,NumPoints
,BranchID
,ProgramID
,District
,SchoolName
,BadgeList
,LastModDate
,LastModUser
,AddedDate
,AddedUser
,TenID, FldInt1, FldInt2, FldInt3, FldBit1, FldBit2, FldBit3, FldText1, FldText2, FldText3
)
VALUES
(@AwardName
,@BadgeID
,@NumPoints
,@BranchID
,@ProgramID
,@District
,@SchoolName
,@BadgeList
,@LastModDate
,@LastModUser
,@AddedDate
,@AddedUser
,@TenID, @FldInt1, @FldInt2, @FldInt3, @FldBit1, @FldBit2, @FldBit3, @FldText1, @FldText2, @FldText3
)
Select @AID = SCOPE_IDENTITY()
END

GO

/****** Object:  StoredProcedure [dbo].[app_Award_Update]    Script Date: 12/05/2014 14:24:02 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO

CREATE PROCEDURE [dbo].[app_Award_Update] (
@AID int
,@AwardName varchar (80)
,@BadgeID int
,@NumPoints int
,@BranchID int
,@ProgramID int
,@District varchar (50)
,@SchoolName varchar (50)
,@BadgeList varchar (500)
,@LastModDate datetime
,@LastModUser varchar (50)
,@AddedDate datetime
,@AddedUser varchar (50)
,@TenID int = 0
,@FldInt1 int = 0
,@FldInt2 int = 0
,@FldInt3 int = 0
,@FldBit1 bit = 0
,@FldBit2 bit = 0
,@FldBit3 bit = 0
,@FldText1 text = ''
,@FldText2 text = ''
,@FldText3 text = ''
) AS
Update Award
Set
AwardName =  @AwardName
,BadgeID =  @BadgeID
,NumPoints =  @NumPoints
,BranchID =  @BranchID
,ProgramID =  @ProgramID
,District =  @District
,SchoolName =  @SchoolName
,BadgeList =  @BadgeList
,LastModDate =  @LastModDate
,LastModUser =  @LastModUser
,AddedDate =  @AddedDate
,AddedUser =  @AddedUser
,TenID = @TenID
,FldInt1 = @FldInt1
,FldInt2 = @FldInt2
,FldInt3 = @FldInt3
,FldBit1 = @FldBit1
,FldBit2 = @FldBit2
,FldBit3 = @FldBit3
,FldText1 = @FldText1
,FldText2 = @FldText2
,FldText3 = @FldText3
Where AID = @AID AND TenID = @TenID

GO

/****** Object:  StoredProcedure [dbo].[app_Badge_Delete]    Script Date: 12/05/2014 14:24:02 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO


CREATE PROCEDURE [dbo].[app_Badge_Delete]
@BID int
AS
delete from	BadgeAgeGrp	Where BID = @BID
delete from	BadgeLocation	Where BID = @BID
delete from	BadgeCategory	Where BID = @BID
delete from	BadgeBranch	Where BID = @BID

Delete from [Badge] Where BID = @BID


GO

/****** Object:  StoredProcedure [dbo].[app_Badge_GetAll]    Script Date: 12/05/2014 14:24:02 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO


CREATE PROCEDURE [dbo].[app_Badge_GetAll]
@TenID int = null
AS
Select * from [Badge] where (TenID = @TenID or @TenID is null)
order by AdminName


GO

/****** Object:  StoredProcedure [dbo].[app_Badge_GetBadgeAgeGroups]    Script Date: 12/05/2014 14:24:02 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO

------------------------------------------------------------------
CREATE PROCEDURE [dbo].[app_Badge_GetBadgeAgeGroups]
@BID		int
,@TenID     int
AS
SET NOCOUNT ON
SET TRANSACTION ISOLATION LEVEL READ UNCOMMITTED

Declare @CTID int
Select @CTID = CTID from dbo.CodeType where TenID = @TenID and CodeTypeName = 'Badge Age Group'
SELECT      @BID as BID, c.CID, c.Code as Name, --c.CTID,
case
when bb.BID is null then 0
else 1 end  AS Checked
FROM         (SELECT * FROM dbo.BadgeAgeGrp WHERE BID = @BID) as bb
RIGHT OUTER JOIN
(SELECT * FROM Code WHERE TenID = @TenID and CTID = @CTID) AS c ON
bb.CID = c.CID
order by c.Code

GO

/****** Object:  StoredProcedure [dbo].[app_Badge_GetBadgeBookLists]    Script Date: 12/05/2014 14:24:02 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO

------------------------------------------------------------------
CREATE PROCEDURE [dbo].[app_Badge_GetBadgeBookLists]
@TenID     int
,  @BID int = 0
,  @List varchar(2000) OUT
AS
SET NOCOUNT ON
SET TRANSACTION ISOLATION LEVEL READ UNCOMMITTED
Select @List = ''

Select @List = COALESCE(CASE WHEN @List = '' THEN p.ListName ELSE @List + ', ' + p.ListName END , '')
from BookList p
where p.TenID = @TenID
AND p.AwardBadgeID = @BID
order by p.ListName



GO

/****** Object:  StoredProcedure [dbo].[app_Badge_GetBadgeBranches]    Script Date: 12/05/2014 14:24:02 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO

CREATE PROCEDURE [dbo].[app_Badge_GetBadgeBranches]
@BID		int
,@TenID     int
AS
SET NOCOUNT ON
SET TRANSACTION ISOLATION LEVEL READ UNCOMMITTED

Declare @CTID int
Select @CTID = CTID from dbo.CodeType where TenID = @TenID and CodeTypeName = 'Branch'
SELECT      @BID as BID, c.CID, c.Code as Name, --c.CTID,
case
when bb.BID is null then 0
else 1 end  AS Checked
FROM         dbo.BadgeBranch bb RIGHT OUTER JOIN
Code c ON
bb.CID = c.CID
AND c.TenID = @TenID
AND c.CTID = @CTID
where bb.BID = @BID or bb.BID is null
AND c.TenID = @TenID AND c.CTID = @CTID
order by c.Code

GO

/****** Object:  StoredProcedure [dbo].[app_Badge_GetBadgeCategories]    Script Date: 12/05/2014 14:24:02 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO

------------------------------------------------------------------
CREATE PROCEDURE [dbo].[app_Badge_GetBadgeCategories]
@BID		int
,@TenID     int
AS
SET NOCOUNT ON
SET TRANSACTION ISOLATION LEVEL READ UNCOMMITTED

Declare @CTID int
Select @CTID = CTID from dbo.CodeType where TenID = @TenID and CodeTypeName = 'Badge Category'
SELECT      @BID as BID, c.CID, c.Code as Name, --c.CTID,
case
when bb.BID is null then 0
else 1 end  AS Checked
FROM        (SELECT * FROM dbo.BadgeCategory WHERE BID = @BID) as bb
RIGHT OUTER JOIN
(SELECT * FROM Code WHERE TenID = @TenID and CTID = @CTID) AS c ON
bb.CID = c.CID
order by c.Code

GO

/****** Object:  StoredProcedure [dbo].[app_Badge_GetBadgeEventIDS]    Script Date: 12/05/2014 14:24:02 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO

CREATE PROCEDURE [dbo].[app_Badge_GetBadgeEventIDS]
@TenID     int
,  @BID int = 0
,  @List varchar(2000) OUT
AS
SET NOCOUNT ON
SET TRANSACTION ISOLATION LEVEL READ UNCOMMITTED
Select @List = ''

Select @List = COALESCE(CASE WHEN @List = '' THEN convert(varchar, EID) ELSE @List + ', ' + convert(varchar, EID) END , '')
from Event p
where p.TenID = @TenID
AND p.BadgeID = @BID
order by p.EventTitle



GO

/****** Object:  StoredProcedure [dbo].[app_Badge_GetBadgeEvents]    Script Date: 12/05/2014 14:24:02 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO

------------------------------------------------------------------
CREATE PROCEDURE [dbo].[app_Badge_GetBadgeEvents]
@TenID     int
,  @BID int = 0
,  @List varchar(2000) OUT
AS
SET NOCOUNT ON
SET TRANSACTION ISOLATION LEVEL READ UNCOMMITTED
Select @List = ''

Select @List = COALESCE(CASE WHEN @List = '' THEN p.EventTitle ELSE @List + ', ' + p.EventTitle END , '')
from Event p
where p.TenID = @TenID
AND p.BadgeID = @BID
order by p.EventTitle



GO

/****** Object:  StoredProcedure [dbo].[app_Badge_GetBadgeGallery]    Script Date: 12/05/2014 14:24:02 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO

------------------------------------------------------------------
CREATE PROCEDURE [dbo].[app_Badge_GetBadgeGallery]
@TenID     int
,  @A int = 0
,  @B int = 0
,  @C int = 0
,  @L int = 0
AS
SET NOCOUNT ON
SET TRANSACTION ISOLATION LEVEL READ UNCOMMITTED

Select BID, UserName as Name from Badge b
where TenID = @TenID
AND (b.BID = (select BID from BadgeAgeGrp A where b.BID = A.BID and A.CID = @A) OR @A = 0)
AND (b.BID = (select BID from BadgeBranch B where b.BID = B.BID and B.CID = @B) OR @B = 0)
AND (b.BID = (select BID from BadgeCategory C where b.BID = C.BID and C.CID = @C) OR @C = 0)
AND (b.BID = (select BID from BadgeLocation L where b.BID = L.BID and L.CID = @l) OR @L = 0)
order by b.UserName


GO

/****** Object:  StoredProcedure [dbo].[app_Badge_GetBadgeGames]    Script Date: 12/05/2014 14:24:02 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO

------------------------------------------------------------------
CREATE PROCEDURE [dbo].[app_Badge_GetBadgeGames]
@TenID     int
,  @BID int = 0
,  @List varchar(2000) OUT
AS
SET NOCOUNT ON
SET TRANSACTION ISOLATION LEVEL READ UNCOMMITTED
Select @List = ''

Select @List = COALESCE(CASE WHEN @List = '' THEN p.GameName ELSE @List + ', ' + p.GameName END , '')
from Minigame p
where p.TenID = @TenID
AND p.AwardedBadgeID = @BID
order by p.GameName



GO

/****** Object:  StoredProcedure [dbo].[app_Badge_GetBadgeLocations]    Script Date: 12/05/2014 14:24:02 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO

------------------------------------------------------------------
CREATE PROCEDURE [dbo].[app_Badge_GetBadgeLocations]
@BID		int
,@TenID     int
AS
SET NOCOUNT ON
SET TRANSACTION ISOLATION LEVEL READ UNCOMMITTED

Declare @CTID int
Select @CTID = CTID from dbo.CodeType where TenID = @TenID and CodeTypeName = 'Badge Location'
SELECT      @BID as BID, c.CID, c.Code as Name, --c.CTID,
case
when bb.BID is null then 0
else 1 end  AS Checked
FROM         (SELECT * FROM dbo.BadgeLocation WHERE BID = @BID) as bb
RIGHT OUTER JOIN
(SELECT * FROM Code WHERE TenID = @TenID and CTID = @CTID) AS c ON
bb.CID = c.CID

order by c.Code

GO

/****** Object:  StoredProcedure [dbo].[app_Badge_GetBadgeReading]    Script Date: 12/05/2014 14:24:02 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO


------------------------------------------------------------------
CREATE PROCEDURE [dbo].[app_Badge_GetBadgeReading]
@TenID     int
,  @BID int = 0
,  @List varchar(2000) OUT
AS
SET NOCOUNT ON
SET TRANSACTION ISOLATION LEVEL READ UNCOMMITTED
Select @List = ''

Select @List = COALESCE(CASE WHEN @List = '' THEN g.GameName ELSE @List + ', ' + g.GameName END , '')
from dbo.ProgramGameLevel p join ProgramGame g
on g.PGID = p.PGID
where g.TenID = @TenID
AND p.AwardBadgeID = @BID or AwardBadgeIDBonus = @BID

Select @List = COALESCE(CASE WHEN @List = '' THEN p.AwardName ELSE @List + ', ' + p.AwardName END , '')
from Award p
where p.TenID = @TenID
AND p.BadgeID = @BID
AND p.NumPoints > 0
group by p.AwardName


GO

/****** Object:  StoredProcedure [dbo].[app_Badge_GetByID]    Script Date: 12/05/2014 14:24:02 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO


CREATE PROCEDURE [dbo].[app_Badge_GetByID]
@BID int
AS
Select * from [Badge] Where BID = @BID


GO

/****** Object:  StoredProcedure [dbo].[app_Badge_GetEnrollmentPrograms]    Script Date: 12/05/2014 14:24:02 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO

------------------------------------------------------------------
CREATE PROCEDURE [dbo].[app_Badge_GetEnrollmentPrograms]
@TenID     int
,  @BID int = 0
,  @List varchar(2000) OUT
AS
SET NOCOUNT ON
SET TRANSACTION ISOLATION LEVEL READ UNCOMMITTED
Select @List = ''

Select @List = COALESCE(CASE WHEN @List = '' THEN p.TabName ELSE @List + ', ' + p.TabName END , '')
from Programs p
where p.TenID = @TenID
AND p.RegistrationBadgeID = @BID
order by p.POrder

Select @List = COALESCE(CASE WHEN @List = '' THEN r.TabName ELSE @List + ', ' + r.TabName END , '')
from Award p join Programs r
on ProgramID = PID
where p.TenID = @TenID
AND p.BadgeID = @BID
order by r.POrder



GO

/****** Object:  StoredProcedure [dbo].[app_Badge_GetList]    Script Date: 12/05/2014 14:24:02 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO


CREATE PROCEDURE [dbo].[app_Badge_GetList]
@ids  varchar(255) = ''
AS

select * from Badge where BID in ((select * from [dbo].[fnSplitBigInt](@ids)))

GO

/****** Object:  StoredProcedure [dbo].[app_Badge_Insert]    Script Date: 12/05/2014 14:24:02 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO

CREATE PROCEDURE [dbo].[app_Badge_Insert] (
@AdminName varchar (50)
,@UserName varchar (50)
,@GenNotificationFlag bit
,@NotificationSubject varchar (150)
,@NotificationBody text
,@CustomEarnedMessage text
,@IncludesPhysicalPrizeFlag bit
,@PhysicalPrizeName varchar (50)
,@AssignProgramPrizeCode bit
,@PCNotificationSubject varchar (150)
,@PCNotificationBody text
,@LastModDate datetime
,@LastModUser varchar (50)
,@AddedDate datetime
,@AddedUser varchar (50)
,@TenID int = 0
,@FldInt1 int = 0
,@FldInt2 int = 0
,@FldInt3 int = 0
,@FldBit1 bit = 0
,@FldBit2 bit = 0
,@FldBit3 bit = 0
,@FldText1 text = ''
,@FldText2 text = ''
,@FldText3 text = ''
,@BID int output
) AS
Begin
Insert into Badge
(AdminName
,UserName
,GenNotificationFlag
,NotificationSubject
,NotificationBody
,CustomEarnedMessage
,IncludesPhysicalPrizeFlag
,PhysicalPrizeName
,AssignProgramPrizeCode
,PCNotificationSubject
,PCNotificationBody
,LastModDate
,LastModUser
,AddedDate
,AddedUser
,TenID, FldInt1, FldInt2, FldInt3, FldBit1, FldBit2, FldBit3, FldText1, FldText2, FldText3
)
VALUES
(@AdminName
,@UserName
,@GenNotificationFlag
,@NotificationSubject
,@NotificationBody
,@CustomEarnedMessage
,@IncludesPhysicalPrizeFlag
,@PhysicalPrizeName
,@AssignProgramPrizeCode
,@PCNotificationSubject
,@PCNotificationBody
,@LastModDate
,@LastModUser
,@AddedDate
,@AddedUser
,@TenID, @FldInt1, @FldInt2, @FldInt3, @FldBit1, @FldBit2, @FldBit3, @FldText1, @FldText2, @FldText3
)
Select @BID = SCOPE_IDENTITY()
END

GO

/****** Object:  StoredProcedure [dbo].[app_Badge_Update]    Script Date: 12/05/2014 14:24:02 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO


CREATE PROCEDURE [dbo].[app_Badge_Update] (
@BID int
,@AdminName varchar (50)
,@UserName varchar (50)
,@GenNotificationFlag bit
,@NotificationSubject varchar (150)
,@NotificationBody text
,@CustomEarnedMessage text
,@IncludesPhysicalPrizeFlag bit
,@PhysicalPrizeName varchar (50)
,@AssignProgramPrizeCode bit
,@PCNotificationSubject varchar (150)
,@PCNotificationBody text
,@LastModDate datetime
,@LastModUser varchar (50)
,@AddedDate datetime
,@AddedUser varchar (50)
,@TenID int = 0
,@FldInt1 int = 0
,@FldInt2 int = 0
,@FldInt3 int = 0
,@FldBit1 bit = 0
,@FldBit2 bit = 0
,@FldBit3 bit = 0
,@FldText1 text = ''
,@FldText2 text = ''
,@FldText3 text = ''
) AS
Update Badge
Set
AdminName =  @AdminName
,UserName =  @UserName
,GenNotificationFlag =  @GenNotificationFlag
,NotificationSubject =  @NotificationSubject
,NotificationBody =  @NotificationBody
,CustomEarnedMessage =  @CustomEarnedMessage
,IncludesPhysicalPrizeFlag =  @IncludesPhysicalPrizeFlag
,PhysicalPrizeName =  @PhysicalPrizeName
,AssignProgramPrizeCode =  @AssignProgramPrizeCode
,PCNotificationSubject =  @PCNotificationSubject
,PCNotificationBody =  @PCNotificationBody
,LastModDate =  @LastModDate
,LastModUser =  @LastModUser
,AddedDate =  @AddedDate
,AddedUser =  @AddedUser
,TenID = @TenID
,FldInt1 = @FldInt1
,FldInt2 = @FldInt2
,FldInt3 = @FldInt3
,FldBit1 = @FldBit1
,FldBit2 = @FldBit2
,FldBit3 = @FldBit3
,FldText1 = @FldText1
,FldText2 = @FldText2
,FldText3 = @FldText3
Where BID = @BID AND TenID = @TenID

GO

/****** Object:  StoredProcedure [dbo].[app_Badge_UpdateBadgeAgeGroups]    Script Date: 12/05/2014 14:24:03 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO

------------------------------------------------------------------------
CREATE PROCEDURE [dbo].[app_Badge_UpdateBadgeAgeGroups]
@BID		int
, @TenID     int
, @CID_LIST	varchar(4000)
AS
SET NOCOUNT ON
SET TRANSACTION ISOLATION LEVEL READ UNCOMMITTED

DELETE
dbo.BadgeAgeGrp
WHERE
BID = @BID
AND CID NOT in (select * from [dbo].[fnSplitBigInt](@CID_LIST))

INSERT INTO
dbo.BadgeAgeGrp
SELECT
@BID
, CID
FROM
dbo.Code
WHERE
CID in (select * from [dbo].[fnSplitBigInt](@CID_LIST))
AND CID NOT IN
(
SELECT
CID
FROM
dbo.BadgeAgeGrp
WHERE
BID = @BID
)

GO

/****** Object:  StoredProcedure [dbo].[app_Badge_UpdateBadgeBranches]    Script Date: 12/05/2014 14:24:03 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO

------------------------------------------------------------------------
CREATE PROCEDURE [dbo].[app_Badge_UpdateBadgeBranches]
@BID		int
, @TenID     int
, @CID_LIST	varchar(4000)
AS
SET NOCOUNT ON
SET TRANSACTION ISOLATION LEVEL READ UNCOMMITTED

DELETE
dbo.BadgeBranch
WHERE
BID = @BID
AND CID NOT in (select * from [dbo].[fnSplitBigInt](@CID_LIST))

INSERT INTO
dbo.BadgeBranch
SELECT
@BID
, CID
FROM
dbo.Code
WHERE
CID in (select * from [dbo].[fnSplitBigInt](@CID_LIST))
AND CID NOT IN
(
SELECT
CID
FROM
dbo.BadgeBranch
WHERE
BID = @BID
)

GO

/****** Object:  StoredProcedure [dbo].[app_Badge_UpdateBadgeCategories]    Script Date: 12/05/2014 14:24:03 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO

------------------------------------------------------------------------
CREATE PROCEDURE [dbo].[app_Badge_UpdateBadgeCategories]
@BID		int
, @TenID     int
, @CID_LIST	varchar(4000)
AS
SET NOCOUNT ON
SET TRANSACTION ISOLATION LEVEL READ UNCOMMITTED

DELETE
dbo.BadgeCategory
WHERE
BID = @BID
AND CID NOT in (select * from [dbo].[fnSplitBigInt](@CID_LIST))

INSERT INTO
dbo.BadgeCategory
SELECT
@BID
, CID
FROM
dbo.Code
WHERE
CID in (select * from [dbo].[fnSplitBigInt](@CID_LIST))
AND CID NOT IN
(
SELECT
CID
FROM
dbo.BadgeCategory
WHERE
BID = @BID
)

GO

/****** Object:  StoredProcedure [dbo].[app_Badge_UpdateBadgeLocations]    Script Date: 12/05/2014 14:24:03 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO

------------------------------------------------------------------------
CREATE PROCEDURE [dbo].[app_Badge_UpdateBadgeLocations]
@BID		int
, @TenID     int
, @CID_LIST	varchar(4000)
AS
SET NOCOUNT ON
SET TRANSACTION ISOLATION LEVEL READ UNCOMMITTED

DELETE
dbo.BadgeLocation
WHERE
BID = @BID
AND CID NOT in (select * from [dbo].[fnSplitBigInt](@CID_LIST))

INSERT INTO
dbo.BadgeLocation
SELECT
@BID
, CID
FROM
dbo.Code
WHERE
CID in (select * from [dbo].[fnSplitBigInt](@CID_LIST))
AND CID NOT IN
(
SELECT
CID
FROM
dbo.BadgeLocation
WHERE
BID = @BID
)

GO

/****** Object:  StoredProcedure [dbo].[app_BookList_Delete]    Script Date: 12/05/2014 14:24:03 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO



CREATE PROCEDURE [dbo].[app_BookList_Delete]
@BLID int ,@TenID int = null
AS
Delete from BookListBooks Where BLID = @BLID AND TenID = @TenID
Delete from BookList Where BLID = @BLID AND TenID = @TenID




GO

/****** Object:  StoredProcedure [dbo].[app_BookList_GetAll]    Script Date: 12/05/2014 14:24:03 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO



CREATE PROCEDURE [dbo].[app_BookList_GetAll]
@TenID int = null
AS
Select bl.*
, isnull(p.AdminName,'') as ProgName
, isnull(c.Code,'') as Library
from [BookList]	bl
left outer join Programs p
on bl.ProgID = p.PID and bl.TenID = p.TenID
left outer join Code c
on bl.LibraryID = c.cid
where bl.TenID = @TenID




GO

/****** Object:  StoredProcedure [dbo].[app_BookList_GetByID]    Script Date: 12/05/2014 14:24:03 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO

/****** Object:  StoredProcedure [dbo].[app_BookList_GetByID]    Script Date: 03/10/2014 14:43:20 ******/






--Create the Select Proc
CREATE PROCEDURE [dbo].[app_BookList_GetByID]
@BLID int
AS
Select * from [BookList] Where BLID = @BLID




GO

/****** Object:  StoredProcedure [dbo].[app_BookList_GetForDisplay]    Script Date: 12/05/2014 14:24:03 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO


CREATE PROCEDURE [dbo].[app_BookList_GetForDisplay]
@PID  int = 0
,@TenID int = null
AS

--declare @PID int dbo.BookList
--select @PID = 100000
if (@TenID is null)
select @TenID = TenID from Patron where PID = @PID

declare @Lit1 int
declare @Lit2 int, @ProgramId int, @BranchId int
select @Lit1 = isnull(LiteracyLevel1,0) , @Lit2 = isnull(LiteracyLevel2,''), @ProgramId = isnull(ProgID,0), @BranchId = isnull(PrimaryLibrary,0)
from Patron
where PID = @PID
----------------------------------------------------------
--select @Age, @Zip, @Age-36, @ProgramId, @BranchId
--select  o.*
--from Offer o
----------------------------------------------------------

create table #temp (BLID int, ListName varchar(50), Description text)

insert into #temp
select BLID, ListName, Description from BookList
where
LiteracyLevel1 > 0 and  @Lit1 = LiteracyLevel1 and TenID = @TenID


insert into #temp
select BLID, ListName, Description from BookList
where
LiteracyLevel2 > 0 and  @Lit2 = LiteracyLevel2	 and TenID = @TenID

insert into #temp
select BLID, ListName, Description from BookList
where
ProgID > 0 and  ProgID = @ProgramId	and TenID = @TenID

insert into #temp
select BLID, ListName, Description from BookList
where
LibraryID > 0 and  LibraryID = @BranchId and TenID = @TenID

insert into #temp
select BLID, ListName, Description from BookList
where
LibraryID = 0 and  ProgID = 0 and LiteracyLevel1 = 0 and LiteracyLevel2 = 0	and TenID = @TenID

select distinct BLID
into #temp1
from #temp
drop table #temp

select ROW_NUMBER() over (order by bl.BLID) as Rank,
bl.*
from #temp1 t left join dbo.BookList bl
on bl.BLID = t.BLID






GO

/****** Object:  StoredProcedure [dbo].[app_BookList_Insert]    Script Date: 12/05/2014 14:24:03 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO


/****** Object:  StoredProcedure [dbo].[app_BookList_Insert]    Script Date: 03/10/2014 14:43:20 ******/






--Create the Insert Proc
CREATE PROCEDURE [dbo].[app_BookList_Insert] (
@AdminName varchar (50)
,@ListName varchar (50)
,@AdminDescription text
,@Description text
,@LiteracyLevel1 int
,@LiteracyLevel2 int
,@ProgID int
,@LibraryID int
,@AwardBadgeID int
,@AwardPoints int
,@LastModDate datetime
,@LastModUser varchar (50)
,@AddedDate datetime
,@AddedUser varchar (50)
,@TenID int = 0
,@FldInt1 int = 0
,@FldInt2 int = 0
,@FldInt3 int = 0
,@FldBit1 bit = 0
,@FldBit2 bit = 0
,@FldBit3 bit = 0
,@FldText1 text = ''
,@FldText2 text = ''
,@FldText3 text = ''

,@NumBooksToComplete int = 0

,@BLID int output
) AS
Begin
Insert into BookList
(AdminName
,ListName
,AdminDescription
,Description
,LiteracyLevel1
,LiteracyLevel2
,ProgID
,LibraryID
,AwardBadgeID
,AwardPoints
,LastModDate
,LastModUser
,AddedDate
,AddedUser
,TenID, FldInt1, FldInt2, FldInt3, FldBit1, FldBit2, FldBit3, FldText1, FldText2, FldText3
,NumBooksToComplete
)
VALUES
(@AdminName
,@ListName
,@AdminDescription
,@Description
,@LiteracyLevel1
,@LiteracyLevel2
,@ProgID
,@LibraryID
,@AwardBadgeID
,@AwardPoints
,@LastModDate
,@LastModUser
,@AddedDate
,@AddedUser
,@TenID, @FldInt1, @FldInt2, @FldInt3, @FldBit1, @FldBit2, @FldBit3, @FldText1, @FldText2, @FldText3
,@NumBooksToComplete
)
Select @BLID = SCOPE_IDENTITY()
END





GO

/****** Object:  StoredProcedure [dbo].[app_BookList_Update]    Script Date: 12/05/2014 14:24:03 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO


/****** Object:  StoredProcedure [dbo].[app_BookList_Update]    Script Date: 03/10/2014 14:43:20 ******/






--Create the Update Proc
CREATE PROCEDURE [dbo].[app_BookList_Update] (
@BLID int
,@AdminName varchar (50)
,@ListName varchar (50)
,@AdminDescription text
,@Description text
,@LiteracyLevel1 int
,@LiteracyLevel2 int
,@ProgID int
,@LibraryID int
,@AwardBadgeID int
,@AwardPoints int
,@LastModDate datetime
,@LastModUser varchar (50)
,@AddedDate datetime
,@AddedUser varchar (50)
,@TenID int = 0
,@FldInt1 int = 0
,@FldInt2 int = 0
,@FldInt3 int = 0
,@FldBit1 bit = 0
,@FldBit2 bit = 0
,@FldBit3 bit = 0
,@FldText1 text = ''
,@FldText2 text = ''
,@FldText3 text = ''

,@NumBooksToComplete int = 0
) AS
Update BookList
Set
AdminName =  @AdminName
,ListName =  @ListName
,AdminDescription =  @AdminDescription
,Description =  @Description
,LiteracyLevel1 =  @LiteracyLevel1
,LiteracyLevel2 =  @LiteracyLevel2
,ProgID =  @ProgID
,LibraryID =  @LibraryID
,AwardBadgeID =  @AwardBadgeID
,AwardPoints =  @AwardPoints
,LastModDate =  @LastModDate
,LastModUser =  @LastModUser
,AddedDate =  @AddedDate
,AddedUser =  @AddedUser
,TenID = @TenID
,FldInt1 = @FldInt1
,FldInt2 = @FldInt2
,FldInt3 = @FldInt3
,FldBit1 = @FldBit1
,FldBit2 = @FldBit2
,FldBit3 = @FldBit3
,FldText1 = @FldText1
,FldText2 = @FldText2
,FldText3 = @FldText3
,NumBooksToComplete = @NumBooksToComplete
Where BLID = @BLID AND TenID = @TenID





GO

/****** Object:  StoredProcedure [dbo].[app_BookListBooks_Delete]    Script Date: 12/05/2014 14:24:03 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO


/****** Object:  StoredProcedure [dbo].[app_BookListBooks_Delete]    Script Date: 03/10/2014 14:43:20 ******/






--Create the Delete Proc
CREATE PROCEDURE [dbo].[app_BookListBooks_Delete]
@BLBID int ,@TenID int = null
AS
Delete from [BookListBooks] Where BLBID = @BLBID AND TenID = @TenID





GO

/****** Object:  StoredProcedure [dbo].[app_BookListBooks_GetAll]    Script Date: 12/05/2014 14:24:03 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO


/****** Object:  StoredProcedure [dbo].[app_BookListBooks_GetAll]    Script Date: 03/10/2014 14:43:20 ******/






--Create the Select Proc
CREATE PROCEDURE [dbo].[app_BookListBooks_GetAll]
@BLID int
AS
Select * from [BookListBooks] where BLID = @BLID





GO

/****** Object:  StoredProcedure [dbo].[app_BookListBooks_GetByID]    Script Date: 12/05/2014 14:24:03 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO

/****** Object:  StoredProcedure [dbo].[app_BookListBooks_GetByID]    Script Date: 03/10/2014 14:43:20 ******/






--Create the Select Proc
CREATE PROCEDURE [dbo].[app_BookListBooks_GetByID]
@BLBID int
AS
Select * from [BookListBooks] Where BLBID = @BLBID




GO

/****** Object:  StoredProcedure [dbo].[app_BookListBooks_GetForDisplay]    Script Date: 12/05/2014 14:24:03 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO


/****** Object:  StoredProcedure [dbo].[app_BookListBooks_GetForDisplay]    Script Date: 03/10/2014 14:43:20 ******/







create  PROCEDURE [dbo].[app_BookListBooks_GetForDisplay]
@PID  int = 0
AS

--declare @PID int dbo.BookList
--select @PID = 100000

declare @Lit1 int
declare @Lit2 int, @ProgramId int, @BranchId int
declare @TenID int

select @Lit1 = isnull(LiteracyLevel1,0) , @Lit2 = isnull(LiteracyLevel2,''), @ProgramId = isnull(ProgID,0), @BranchId = isnull(PrimaryLibrary,0)
, @TenID  =  TenID
from Patron
where PID = @PID
----------------------------------------------------------
--select @Age, @Zip, @Age-36, @ProgramId, @BranchId
--select  o.*
--from Offer o
----------------------------------------------------------

create table #temp (BLID int, ListName varchar(50), Description text)

insert into #temp
select BLID, ListName, Description from BookList
where
LiteracyLevel1 > 0 and  @Lit1 = LiteracyLevel1 AND TenID = @TenID


insert into #temp
select BLID, ListName, Description from BookList
where
LiteracyLevel2 > 0 and  @Lit2 = LiteracyLevel2 AND TenID = @TenID

insert into #temp
select BLID, ListName, Description from BookList
where
ProgID > 0 and  ProgID = @ProgramId	AND TenID = @TenID

insert into #temp
select BLID, ListName, Description from BookList
where
LibraryID > 0 and  LibraryID = @BranchId	AND TenID = @TenID

insert into #temp
select BLID, ListName, Description from BookList
where
LibraryID = 0 and  ProgID = 0 and LiteracyLevel1 = 0 and LiteracyLevel2 = 0	AND TenID = @TenID

select distinct BLID
into #temp1
from #temp
drop table #temp

select ROW_NUMBER() over (order by bl.BLID) as Rank,
bl.*
from #temp1 t left join dbo.BookList bl
on bl.BLID = t.BLID






GO

/****** Object:  StoredProcedure [dbo].[app_BookListBooks_GetForPatronDisplay]    Script Date: 12/05/2014 14:24:03 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO


/****** Object:  StoredProcedure [dbo].[app_BookListBooks_GetForPatronDisplay]    Script Date: 03/10/2014 14:43:20 ******/







CREATE  PROCEDURE [dbo].[app_BookListBooks_GetForPatronDisplay]
@BLID  int = 0 ,
@PID  int = 0
AS

select isnull(p.HasReadFlag,0) as HasRead, isnull(p.PBLBID,0) as PBLBID, b.*
from BookListBooks b left outer join PatronBookLists p
on b.BLBID = p.BLBID and b.BLID = p.BLID and p.PID = @PID
where b.BLID = @BLID







GO

/****** Object:  StoredProcedure [dbo].[app_BookListBooks_Insert]    Script Date: 12/05/2014 14:24:03 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO


/****** Object:  StoredProcedure [dbo].[app_BookListBooks_Insert]    Script Date: 03/10/2014 14:43:20 ******/






--Create the Insert Proc
CREATE PROCEDURE [dbo].[app_BookListBooks_Insert] (
@BLID int
,@Author varchar (50)
,@Title varchar (150)
,@ISBN varchar (50)
,@URL varchar (150)
,@LastModDate datetime
,@LastModUser varchar (50)
,@AddedDate datetime
,@AddedUser varchar (50)
,@TenID int = 0
,@FldInt1 int = 0
,@FldInt2 int = 0
,@FldInt3 int = 0
,@FldBit1 bit = 0
,@FldBit2 bit = 0
,@FldBit3 bit = 0
,@FldText1 text = ''
,@FldText2 text = ''
,@FldText3 text = ''
,@BLBID int output
) AS
Begin
Insert into BookListBooks
(BLID
,Author
,Title
,ISBN
,URL
,LastModDate
,LastModUser
,AddedDate
,AddedUser
,TenID, FldInt1, FldInt2, FldInt3, FldBit1, FldBit2, FldBit3, FldText1, FldText2, FldText3
)
VALUES
(@BLID
,@Author
,@Title
,@ISBN
,@URL
,@LastModDate
,@LastModUser
,@AddedDate
,@AddedUser
,@TenID, @FldInt1, @FldInt2, @FldInt3, @FldBit1, @FldBit2, @FldBit3, @FldText1, @FldText2, @FldText3
)
Select @BLBID = SCOPE_IDENTITY()
END





GO

/****** Object:  StoredProcedure [dbo].[app_BookListBooks_Update]    Script Date: 12/05/2014 14:24:03 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO


/****** Object:  StoredProcedure [dbo].[app_BookListBooks_Update]    Script Date: 03/10/2014 14:43:20 ******/






--Create the Update Proc
CREATE PROCEDURE [dbo].[app_BookListBooks_Update] (
@BLBID int
,@BLID int
,@Author varchar (50)
,@Title varchar (150)
,@ISBN varchar (50)
,@URL varchar (150)
,@LastModDate datetime
,@LastModUser varchar (50)
,@AddedDate datetime
,@AddedUser varchar (50)
,@TenID int = 0
,@FldInt1 int = 0
,@FldInt2 int = 0
,@FldInt3 int = 0
,@FldBit1 bit = 0
,@FldBit2 bit = 0
,@FldBit3 bit = 0
,@FldText1 text = ''
,@FldText2 text = ''
,@FldText3 text = ''
) AS
Update BookListBooks
Set
BLID =  @BLID
,Author =  @Author
,Title =  @Title
,ISBN =  @ISBN
,URL =  @URL
,LastModDate =  @LastModDate
,LastModUser =  @LastModUser
,AddedDate =  @AddedDate
,AddedUser =  @AddedUser
,TenID = @TenID
,FldInt1 = @FldInt1
,FldInt2 = @FldInt2
,FldInt3 = @FldInt3
,FldBit1 = @FldBit1
,FldBit2 = @FldBit2
,FldBit3 = @FldBit3
,FldText1 = @FldText1
,FldText2 = @FldText2
,FldText3 = @FldText3
Where BLBID = @BLBID AND TenID = @TenID





GO

/****** Object:  StoredProcedure [dbo].[app_Code_Delete]    Script Date: 12/05/2014 14:24:03 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO

/****** Object:  StoredProcedure [dbo].[app_Code_Delete]    Script Date: 03/10/2014 14:43:20 ******/






--Create the Delete Proc
CREATE PROCEDURE [dbo].[app_Code_Delete]
@CID int
AS
Delete from [Code] Where CID = @CID




GO

/****** Object:  StoredProcedure [dbo].[app_Code_GetAll]    Script Date: 12/05/2014 14:24:03 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO


CREATE PROCEDURE [dbo].[app_Code_GetAll]
@TenID int = null
AS
Select * from [Code] where (TenID = @TenID or @TenID is null)




GO

/****** Object:  StoredProcedure [dbo].[app_Code_GetAllLibrarySystems]    Script Date: 12/05/2014 14:24:03 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO

/****** Object:  StoredProcedure [dbo].[app_Code_GetAllLibrarySystems]    Script Date: 03/10/2014 14:43:20 ******/







CREATE PROCEDURE [dbo].[app_Code_GetAllLibrarySystems]
@TenID int = null

AS
Select distinct rtrim(ltrim(District)) as LibSys
from Patron
WHERE rtrim(ltrim(District)) <> '' AND District IS NOT NULL and (TenID = @TenID or @TenID is null)
ORDER BY rtrim(ltrim(District))






GO

/****** Object:  StoredProcedure [dbo].[app_Code_GetAllSchools]    Script Date: 12/05/2014 14:24:03 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO

/****** Object:  StoredProcedure [dbo].[app_Code_GetAllSchools]    Script Date: 03/10/2014 14:43:20 ******/









CREATE PROCEDURE [dbo].[app_Code_GetAllSchools]
@TenID int = null
AS
Select distinct rtrim(ltrim(SchoolName)) as School
from Patron
WHERE rtrim(ltrim(SchoolName)) <> '' AND SchoolName IS NOT NULL
AND (TenID = @TenID or @TenID is null)
ORDER BY rtrim(ltrim(SchoolName))




GO

/****** Object:  StoredProcedure [dbo].[app_Code_GetAllTypeID]    Script Date: 12/05/2014 14:24:03 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO

/****** Object:  StoredProcedure [dbo].[app_Code_GetAllTypeID]    Script Date: 03/10/2014 14:43:20 ******/






--Create the Select Proc
CREATE PROCEDURE [dbo].[app_Code_GetAllTypeID]
@ID int
AS
Select * from [Code]
where CTID = @ID




GO

/****** Object:  StoredProcedure [dbo].[app_Code_GetAllTypeName]    Script Date: 12/05/2014 14:24:03 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO

CREATE PROCEDURE [dbo].[app_Code_GetAllTypeName]
@name varchar(50)
,@TenID int = null
AS
Select * from [Code]
where CTID = (select CTID from dbo.CodeType where CodeTypeName = @name AND (TenID = @TenID or @TenID is null))
order by Code

GO

/****** Object:  StoredProcedure [dbo].[app_Code_GetByID]    Script Date: 12/05/2014 14:24:03 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO

/****** Object:  StoredProcedure [dbo].[app_Code_GetByID]    Script Date: 03/10/2014 14:43:20 ******/






--Create the Select Proc
CREATE PROCEDURE [dbo].[app_Code_GetByID]
@CID int
AS
Select * from [Code] Where CID = @CID




GO

/****** Object:  StoredProcedure [dbo].[app_Code_Insert]    Script Date: 12/05/2014 14:24:03 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO

/****** Object:  StoredProcedure [dbo].[app_Code_Insert]    Script Date: 03/10/2014 14:43:20 ******/






--Create the Insert Proc
CREATE PROCEDURE [dbo].[app_Code_Insert] (
@CTID int
,@Code varchar (25)
,@Description varchar (80)
,@TenID int = 0
,@FldInt1 int = 0
,@FldInt2 int = 0
,@FldInt3 int = 0
,@FldBit1 bit = 0
,@FldBit2 bit = 0
,@FldBit3 bit = 0
,@FldText1 text = ''
,@FldText2 text = ''
,@FldText3 text = ''
,@CID int output
) AS
Begin
Insert into Code
(CTID
,Code
,Description
,TenID, FldInt1, FldInt2, FldInt3, FldBit1, FldBit2, FldBit3, FldText1, FldText2, FldText3
)
VALUES
(@CTID
,@Code
,@Description
,@TenID, @FldInt1, @FldInt2, @FldInt3, @FldBit1, @FldBit2, @FldBit3, @FldText1, @FldText2, @FldText3
)
Select @CID = SCOPE_IDENTITY()
END




GO

/****** Object:  StoredProcedure [dbo].[app_Code_Update]    Script Date: 12/05/2014 14:24:03 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO

/****** Object:  StoredProcedure [dbo].[app_Code_Update]    Script Date: 03/10/2014 14:43:20 ******/






--Create the Update Proc
CREATE PROCEDURE [dbo].[app_Code_Update] (
@CID int
,@CTID int
,@Code varchar (25)
,@Description varchar (80)
,@TenID int = 0
,@FldInt1 int = 0
,@FldInt2 int = 0
,@FldInt3 int = 0
,@FldBit1 bit = 0
,@FldBit2 bit = 0
,@FldBit3 bit = 0
,@FldText1 text = ''
,@FldText2 text = ''
,@FldText3 text = ''
) AS
Update Code
Set
CTID =  @CTID
,Code =  @Code
,Description =  @Description
,TenID = @TenID
,FldInt1 = @FldInt1
,FldInt2 = @FldInt2
,FldInt3 = @FldInt3
,FldBit1 = @FldBit1
,FldBit2 = @FldBit2
,FldBit3 = @FldBit3
,FldText1 = @FldText1
,FldText2 = @FldText2
,FldText3 = @FldText3
Where CID = @CID AND TenID = @TenID




GO

/****** Object:  StoredProcedure [dbo].[app_CodeType_Delete]    Script Date: 12/05/2014 14:24:03 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO

/****** Object:  StoredProcedure [dbo].[app_CodeType_Delete]    Script Date: 03/10/2014 14:43:20 ******/






--Create the Delete Proc
CREATE PROCEDURE [dbo].[app_CodeType_Delete]
@CTID int
AS
Delete from [CodeType] Where CTID = @CTID




GO

/****** Object:  StoredProcedure [dbo].[app_CodeType_GetAll]    Script Date: 12/05/2014 14:24:03 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO

/****** Object:  StoredProcedure [dbo].[app_CodeType_GetAll]    Script Date: 03/10/2014 14:43:20 ******/






--Create the Select Proc
CREATE PROCEDURE [dbo].[app_CodeType_GetAll]
@TenID int = null
AS
Select * from [CodeType]
where (TenID = @TenID or @TenID is null)




GO

/****** Object:  StoredProcedure [dbo].[app_CodeType_GetByID]    Script Date: 12/05/2014 14:24:03 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO

/****** Object:  StoredProcedure [dbo].[app_CodeType_GetByID]    Script Date: 03/10/2014 14:43:20 ******/






--Create the Select Proc
CREATE PROCEDURE [dbo].[app_CodeType_GetByID]
@CTID int
AS
Select * from [CodeType] Where CTID = @CTID




GO

/****** Object:  StoredProcedure [dbo].[app_CodeType_Insert]    Script Date: 12/05/2014 14:24:03 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO

/****** Object:  StoredProcedure [dbo].[app_CodeType_Insert]    Script Date: 03/10/2014 14:43:20 ******/






--Create the Insert Proc
CREATE PROCEDURE [dbo].[app_CodeType_Insert] (
@isSystem bit
,@CodeTypeName varchar (50)
,@Description text
,@TenID int = 0
,@FldInt1 int = 0
,@FldInt2 int = 0
,@FldInt3 int = 0
,@FldBit1 bit = 0
,@FldBit2 bit = 0
,@FldBit3 bit = 0
,@FldText1 text = ''
,@FldText2 text = ''
,@FldText3 text = ''
,@CTID int output
) AS
Begin
Insert into CodeType
(isSystem
,CodeTypeName
,Description
,TenID, FldInt1, FldInt2, FldInt3, FldBit1, FldBit2, FldBit3, FldText1, FldText2, FldText3
)	VALUES
(@isSystem
,@CodeTypeName
,@Description
,@TenID, @FldInt1, @FldInt2, @FldInt3, @FldBit1, @FldBit2, @FldBit3, @FldText1, @FldText2, @FldText3
)
Select @CTID = SCOPE_IDENTITY()
END




GO

/****** Object:  StoredProcedure [dbo].[app_CodeType_Update]    Script Date: 12/05/2014 14:24:03 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO

/****** Object:  StoredProcedure [dbo].[app_CodeType_Update]    Script Date: 03/10/2014 14:43:20 ******/






--Create the Update Proc
CREATE PROCEDURE [dbo].[app_CodeType_Update] (
@CTID int
,@isSystem bit
,@CodeTypeName varchar (50)
,@Description text
,@TenID int = 0
,@FldInt1 int = 0
,@FldInt2 int = 0
,@FldInt3 int = 0
,@FldBit1 bit = 0
,@FldBit2 bit = 0
,@FldBit3 bit = 0
,@FldText1 text = ''
,@FldText2 text = ''
,@FldText3 text = ''
) AS
Update CodeType
Set
isSystem =  @isSystem
,CodeTypeName =  @CodeTypeName
,Description =  @Description
,TenID = @TenID
,FldInt1 = @FldInt1
,FldInt2 = @FldInt2
,FldInt3 = @FldInt3
,FldBit1 = @FldBit1
,FldBit2 = @FldBit2
,FldBit3 = @FldBit3
,FldText1 = @FldText1
,FldText2 = @FldText2
,FldText3 = @FldText3
Where CTID = @CTID AND TenID = @TenID




GO

/****** Object:  StoredProcedure [dbo].[app_CustomEventFields_Delete]    Script Date: 12/05/2014 14:24:03 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO

/****** Object:  StoredProcedure [dbo].[app_CustomEventFields_Delete]    Script Date: 03/10/2014 14:43:20 ******/






--Create the Delete Proc
CREATE PROCEDURE [dbo].[app_CustomEventFields_Delete]
@TenID int
AS
Delete from [CustomEventFields] Where TenID = @TenID




GO

/****** Object:  StoredProcedure [dbo].[app_CustomEventFields_GetAll]    Script Date: 12/05/2014 14:24:03 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO

--Create the Select Proc
CREATE PROCEDURE [dbo].[app_CustomEventFields_GetAll]
@TenID int = null
AS
Select * from [CustomEventFields] where (TenID = @TenID or @TenID is null)




GO

/****** Object:  StoredProcedure [dbo].[app_CustomEventFields_GetByID]    Script Date: 12/05/2014 14:24:03 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO

/****** Object:  StoredProcedure [dbo].[app_CustomEventFields_GetByID]    Script Date: 03/10/2014 14:43:20 ******/






--Create the Select Proc
CREATE PROCEDURE [dbo].[app_CustomEventFields_GetByID]
@TenID int
AS
Select * from [CustomEventFields] Where TenID = @TenID




GO

/****** Object:  StoredProcedure [dbo].[app_CustomEventFields_Insert]    Script Date: 12/05/2014 14:24:03 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO


--Create the Insert Proc
CREATE PROCEDURE [dbo].[app_CustomEventFields_Insert] (
@Use1 bit
,@Label1 varchar (50)
,@DDValues1 varchar (50)
,@Use2 bit
,@Use3 bit
,@Label2 varchar (50)
,@Label3 varchar (50)
,@DDValues2 varchar (50)
,@DDValues3 varchar (50)
,@LastModDate datetime
,@LastModUser varchar (50)
,@AddedDate datetime
,@AddedUser varchar (50)
,@TenID int = 0
,@FldInt1 int = 0
,@FldInt2 int = 0
,@FldInt3 int = 0
,@FldBit1 bit = 0
,@FldBit2 bit = 0
,@FldBit3 bit = 0
,@FldText1 text = ''
,@FldText2 text = ''
,@FldText3 text = ''
,@CID int output
) AS
Begin
Insert into CustomEventFields
(Use1
,Label1
,DDValues1
,Use2
,Use3
,Label2
,Label3
,DDValues2
,DDValues3
,LastModDate
,LastModUser
,AddedDate
,AddedUser
,TenID, FldInt1, FldInt2, FldInt3, FldBit1, FldBit2, FldBit3, FldText1, FldText2, FldText3
)
VALUES
(@Use1
,@Label1
,@DDValues1
,@Use2
,@Use3
,@Label2
,@Label3
,@DDValues2
,@DDValues3
,@LastModDate
,@LastModUser
,@AddedDate
,@AddedUser
,@TenID, @FldInt1, @FldInt2, @FldInt3, @FldBit1, @FldBit2, @FldBit3, @FldText1, @FldText2, @FldText3
)
Select @CID = SCOPE_IDENTITY()
END




GO

/****** Object:  StoredProcedure [dbo].[app_CustomEventFields_Update]    Script Date: 12/05/2014 14:24:03 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO

--Create the Update Proc
CREATE PROCEDURE [dbo].[app_CustomEventFields_Update] (
@CID int
,@Use1 bit
,@Label1 varchar (50)
,@DDValues1 varchar (50)
,@Use2 bit
,@Use3 bit
,@Label2 varchar (50)
,@Label3 varchar (50)
,@DDValues2 varchar (50)
,@DDValues3 varchar (50)
,@LastModDate datetime
,@LastModUser varchar (50)
,@AddedDate datetime
,@AddedUser varchar (50)
,@TenID int = 0
,@FldInt1 int = 0
,@FldInt2 int = 0
,@FldInt3 int = 0
,@FldBit1 bit = 0
,@FldBit2 bit = 0
,@FldBit3 bit = 0
,@FldText1 text = ''
,@FldText2 text = ''
,@FldText3 text = ''
) AS
Update CustomEventFields
Set
Use1 =  @Use1
,Label1 =  @Label1
,DDValues1 =  @DDValues1
,Use2 =  @Use2
,Use3 =  @Use3
,Label2 =  @Label2
,Label3 =  @Label3
,DDValues2 =  @DDValues2
,DDValues3 =  @DDValues3
,LastModDate =  @LastModDate
,LastModUser =  @LastModUser
,AddedDate =  @AddedDate
,AddedUser =  @AddedUser
,TenID = @TenID
,FldInt1 = @FldInt1
,FldInt2 = @FldInt2
,FldInt3 = @FldInt3
,FldBit1 = @FldBit1
,FldBit2 = @FldBit2
,FldBit3 = @FldBit3
,FldText1 = @FldText1
,FldText2 = @FldText2
,FldText3 = @FldText3
Where CID = @CID AND TenID = @TenID




GO

/****** Object:  StoredProcedure [dbo].[app_CustomRegistrationFields_Delete]    Script Date: 12/05/2014 14:24:03 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO

/****** Object:  StoredProcedure [dbo].[app_CustomRegistrationFields_Delete]    Script Date: 03/10/2014 14:43:20 ******/






--Create the Delete Proc
CREATE PROCEDURE [dbo].[app_CustomRegistrationFields_Delete]
@CID int
AS
Delete from [CustomRegistrationFields] Where CID = @CID




GO

/****** Object:  StoredProcedure [dbo].[app_CustomRegistrationFields_GetAll]    Script Date: 12/05/2014 14:24:03 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO


--Create the Select Proc
CREATE PROCEDURE [dbo].[app_CustomRegistrationFields_GetAll]
@TenID int = null
AS
Select * from [CustomRegistrationFields] where (TenID = @TenID or @TenID is null)




GO

/****** Object:  StoredProcedure [dbo].[app_CustomRegistrationFields_GetByID]    Script Date: 12/05/2014 14:24:03 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO

--Create the Select Proc
CREATE PROCEDURE [dbo].[app_CustomRegistrationFields_GetByID]
@TenID int
AS
Select * from [CustomRegistrationFields] Where TenID = @TenID




GO

/****** Object:  StoredProcedure [dbo].[app_CustomRegistrationFields_Insert]    Script Date: 12/05/2014 14:24:03 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO

--Create the Insert Proc
CREATE PROCEDURE [dbo].[app_CustomRegistrationFields_Insert] (
@Use1 bit
,@Label1 varchar (50)
,@DDValues1 varchar (50)
,@Use2 bit
,@Use3 bit
,@Use4 bit
,@Use5 bit
,@Label2 varchar (50)
,@Label3 varchar (50)
,@Label4 varchar (50)
,@Label5 varchar (50)
,@DDValues2 varchar (50)
,@DDValues3 varchar (50)
,@DDValues4 varchar (50)
,@DDValues5 varchar (50)
,@LastModDate datetime
,@LastModUser varchar (50)
,@AddedDate datetime
,@AddedUser varchar (50)
,@TenID int = 0
,@FldInt1 int = 0
,@FldInt2 int = 0
,@FldInt3 int = 0
,@FldBit1 bit = 0
,@FldBit2 bit = 0
,@FldBit3 bit = 0
,@FldText1 text = ''
,@FldText2 text = ''
,@FldText3 text = ''
,@CID int output
) AS
Begin
Insert into CustomRegistrationFields
(Use1
,Label1
,DDValues1
,Use2
,Use3
,Use4
,Use5
,Label2
,Label3
,Label4
,Label5
,DDValues2
,DDValues3
,DDValues4
,DDValues5
,LastModDate
,LastModUser
,AddedDate
,AddedUser
,TenID, FldInt1, FldInt2, FldInt3, FldBit1, FldBit2, FldBit3, FldText1, FldText2, FldText3
)
VALUES
(@Use1
,@Label1
,@DDValues1
,@Use2
,@Use3
,@Use4
,@Use5
,@Label2
,@Label3
,@Label4
,@Label5
,@DDValues2
,@DDValues3
,@DDValues4
,@DDValues5
,@LastModDate
,@LastModUser
,@AddedDate
,@AddedUser
,@TenID, @FldInt1, @FldInt2, @FldInt3, @FldBit1, @FldBit2, @FldBit3, @FldText1, @FldText2, @FldText3
)
Select @CID = SCOPE_IDENTITY()
END




GO

/****** Object:  StoredProcedure [dbo].[app_CustomRegistrationFields_Update]    Script Date: 12/05/2014 14:24:03 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO

--Create the Update Proc
CREATE PROCEDURE [dbo].[app_CustomRegistrationFields_Update] (
@CID int
,@Use1 bit
,@Label1 varchar (50)
,@DDValues1 varchar (50)
,@Use2 bit
,@Use3 bit
,@Use4 bit
,@Use5 bit
,@Label2 varchar (50)
,@Label3 varchar (50)
,@Label4 varchar (50)
,@Label5 varchar (50)
,@DDValues2 varchar (50)
,@DDValues3 varchar (50)
,@DDValues4 varchar (50)
,@DDValues5 varchar (50)
,@LastModDate datetime
,@LastModUser varchar (50)
,@AddedDate datetime
,@AddedUser varchar (50)
,@TenID int = 0
,@FldInt1 int = 0
,@FldInt2 int = 0
,@FldInt3 int = 0
,@FldBit1 bit = 0
,@FldBit2 bit = 0
,@FldBit3 bit = 0
,@FldText1 text = ''
,@FldText2 text = ''
,@FldText3 text = ''
) AS
Update CustomRegistrationFields
Set
Use1 =  @Use1
,Label1 =  @Label1
,DDValues1 =  @DDValues1
,Use2 =  @Use2
,Use3 =  @Use3
,Use4 =  @Use4
,Use5 =  @Use5
,Label2 =  @Label2
,Label3 =  @Label3
,Label4 =  @Label4
,Label5 =  @Label5
,DDValues2 =  @DDValues2
,DDValues3 =  @DDValues3
,DDValues4 =  @DDValues4
,DDValues5 =  @DDValues5
,LastModDate =  @LastModDate
,LastModUser =  @LastModUser
,AddedDate =  @AddedDate
,AddedUser =  @AddedUser
,TenID = @TenID
,FldInt1 = @FldInt1
,FldInt2 = @FldInt2
,FldInt3 = @FldInt3
,FldBit1 = @FldBit1
,FldBit2 = @FldBit2
,FldBit3 = @FldBit3
,FldText1 = @FldText1
,FldText2 = @FldText2
,FldText3 = @FldText3
Where CID = @CID AND TenID = @TenID




GO

/****** Object:  StoredProcedure [dbo].[app_Event_Delete]    Script Date: 12/05/2014 14:24:03 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO

/****** Object:  StoredProcedure [dbo].[app_Event_Delete]    Script Date: 03/10/2014 14:43:21 ******/






--Create the Delete Proc
CREATE PROCEDURE [dbo].[app_Event_Delete]
@EID int
AS
Delete from [Event] Where EID = @EID




GO

/****** Object:  StoredProcedure [dbo].[app_Event_GetAdminSearch]    Script Date: 12/05/2014 14:24:03 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO

CREATE PROCEDURE [dbo].[app_Event_GetAdminSearch]
@startDate datetime
, @endDate datetime
, @branchID int
,@TenID int = null
AS
Select *
, (select Code from dbo.Code where CID = BranchID ) as Branch
from [Event]
where
(TenID = @TenID or @TenID is null)
AND
(BranchID = @branchID or @branchID = 0)
AND (EventDate >= @startDate or @startDate is null)
AND (EventDate <= @endDate or @endDate is null)
order by EventDate desc




GO

/****** Object:  StoredProcedure [dbo].[app_Event_GetAll]    Script Date: 12/05/2014 14:24:03 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO


--Create the Select Proc
CREATE PROCEDURE [dbo].[app_Event_GetAll]
@TenID int = null
AS
Select *
, (select Code from dbo.Code where CID = BranchID ) as Branch
from [Event]
where (TenID = @TenID or @TenID is null)
order by EventDate desc




GO

/****** Object:  StoredProcedure [dbo].[app_Event_GetByID]    Script Date: 12/05/2014 14:24:03 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO

/****** Object:  StoredProcedure [dbo].[app_Event_GetByID]    Script Date: 03/10/2014 14:43:21 ******/






--Create the Select Proc
CREATE PROCEDURE [dbo].[app_Event_GetByID]
@EID int
AS
Select *
, (select Code from dbo.Code where CID = BranchID ) as Branch
from [Event] Where EID = @EID




GO

/****** Object:  StoredProcedure [dbo].[app_Event_GetEventCountByEventCode]    Script Date: 12/05/2014 14:24:03 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO


CREATE PROCEDURE [dbo].[app_Event_GetEventCountByEventCode] (
@EID int = null
,@key varchar(50) = ''
,@TenID int = null
) AS
Begin

Select COUNT(*) as NumCodes from Event
where
SecretCode = @Key AND @key != ''
AND (TenID = @TenID or @TenID is null)
AND (EID != @EID or @EID is null)
end


GO

/****** Object:  StoredProcedure [dbo].[app_Event_GetEventList]    Script Date: 12/05/2014 14:24:03 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO

CREATE PROCEDURE [dbo].[app_Event_GetEventList]
@List varchar(2000) = ''
,	@TenID     int
AS
SET NOCOUNT ON
SET TRANSACTION ISOLATION LEVEL READ UNCOMMITTED

declare @Now datetime
select @Now = GETDATE()

select
case
when EventDate <= @Now AND EndDate is null Then 'Expired '
when EndDate is not null AND EndDate <= @Now Then 'Expired '
when EventDate <= @Now AND EndDate >= @Now Then ''
when EventDate >= @Now Then ''
else ''
end as Expired
,*
, isnull(Code,'') as Branch
from Event
left outer join Code
on BranchID = CID
where
Event.TenID = @TenID
and
EID in (select * from [dbo].[fnSplitBigInt](@List))
order by Expired, EventDate

GO

/****** Object:  StoredProcedure [dbo].[app_Event_GetEventsByEventCode]    Script Date: 12/05/2014 14:24:03 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO

CREATE PROCEDURE [dbo].[app_Event_GetEventsByEventCode] (
@startDate datetime
, @endDate datetime
, @key varchar(50) = ''
,@TenID int = null
) AS
Begin

Select * from Event
where EventDate between @startDate and @endDate
AND SecretCode = @Key
AND (TenID = @TenID or @TenID is null)

end

GO

/****** Object:  StoredProcedure [dbo].[app_Event_GetUpcomingDisplay]    Script Date: 12/05/2014 14:24:03 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO


CREATE PROCEDURE [dbo].[app_Event_GetUpcomingDisplay]
@startDate datetime = null
, @endDate datetime = null
, @branchID int = 0
,@TenID int = null
AS
Select *
, (select Code from dbo.Code where CID = BranchID ) as Branch
from [Event]
where
(BranchID = @branchID or @branchID = 0)
AND (EventDate >= @startDate or ( EndDate is Not null AND  EndDate >= @startDate ) or @startDate is null)
AND (EventDate <= @endDate   or ( EndDate is Not null AND  EndDate <= @endDate ) or @endDate is null)
AND (dateadd(d,1,EventDate) >= GETDATE() OR (dateadd(d,1,EndDate) >= GETDATE() AND EndDate is Not null))
AND (TenID = @TenID or @TenID is null)
order by EventDate asc, EventTitle

GO

/****** Object:  StoredProcedure [dbo].[app_Event_InitTenant]    Script Date: 12/05/2014 14:24:03 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO


CREATE PROCEDURE [dbo].[app_Event_InitTenant]
@src int
,@dst int
AS

Insert into Event
(EventTitle
,EventDate
,EventTime
,HTML
,SecretCode
,NumberPoints
,BadgeID
,BranchID
,Custom1
,Custom2
,Custom3
,LastModDate
,LastModUser
,AddedDate
,AddedUser
,TenID
,FldInt1
,FldInt2
--,FldInt3
,FldBit1
,FldBit2
,FldBit3
,FldText1
,FldText2
,FldText3
,EndDate
,EndTime
,ShortDescription
,FldInt3
)
OUTPUT 				'event',	@dst,   [inserted].FldInt3, GETDATE()  , [inserted].[EID]
INTO TenantInitData (IntitType, DestTID, SrcPK, DateCreated, DstPK)
select
e.EventTitle
,e.EventDate
,e.EventTime
,e.HTML
,e.SecretCode
,e.NumberPoints
,0	-- CANT DO BADGE
,0	-- CANT DO BRANCH
,e.Custom1
,e.Custom2
,e.Custom3
,e.LastModDate
,e.LastModUser
,e.AddedDate
,'SYSADMIN'
,@dst
,e.FldInt1
,e.FldInt2
--,e.FldInt3
,e.FldBit1
,e.FldBit2
,e.FldBit3
,e.FldText1
,e.FldText2
,e.FldText3
,e.EndDate
,e.EndTime
,e.ShortDescription
,e.EID
from Event e
where e.TenID = @src
AND e.EID not in (Select SrcPK from TenantInitData where IntitType = 'event' and DestTID = @dst)


GO

/****** Object:  StoredProcedure [dbo].[app_Event_Insert]    Script Date: 12/05/2014 14:24:03 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO

--Create the Insert Proc
CREATE PROCEDURE [dbo].[app_Event_Insert] (
@EventTitle varchar (150)
,@EventDate datetime
,@EventTime varchar (15)
,@HTML text
,@SecretCode varchar (50)
,@NumberPoints int
,@BadgeID int
,@BranchID int
,@Custom1 varchar (50)
,@Custom2 varchar (50)
,@Custom3 varchar (50)
,@LastModDate datetime
,@LastModUser varchar (50)
,@AddedDate datetime
,@AddedUser varchar (50)
,@TenID int = 0
,@FldInt1 int = 0
,@FldInt2 int = 0
,@FldInt3 int = 0
,@FldBit1 bit = 0
,@FldBit2 bit = 0
,@FldBit3 bit = 0
,@FldText1 text = ''
,@FldText2 text = ''
,@FldText3 text = ''
,@ShortDescription text
,@EndDate datetime
,@EndTime varchar (50)
,@EID int output
) AS
Begin
Insert into Event
(EventTitle
,EventDate
,EventTime
,HTML
,SecretCode
,NumberPoints
,BadgeID
,BranchID
,Custom1
,Custom2
,Custom3
,LastModDate
,LastModUser
,AddedDate
,AddedUser
,TenID, FldInt1, FldInt2, FldInt3, FldBit1, FldBit2, FldBit3, FldText1, FldText2, FldText3
,ShortDescription,EndDate,EndTime
)
VALUES
(@EventTitle
,@EventDate
,@EventTime
,@HTML
,@SecretCode
,@NumberPoints
,@BadgeID
,@BranchID
,@Custom1
,@Custom2
,@Custom3
,@LastModDate
,@LastModUser
,@AddedDate
,@AddedUser
,@TenID, @FldInt1, @FldInt2, @FldInt3, @FldBit1, @FldBit2, @FldBit3, @FldText1, @FldText2, @FldText3
,@ShortDescription,@EndDate,@EndTime
)
Select @EID = SCOPE_IDENTITY()
END




GO

/****** Object:  StoredProcedure [dbo].[app_Event_Update]    Script Date: 12/05/2014 14:24:03 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO

--Create the Update Proc
CREATE PROCEDURE [dbo].[app_Event_Update] (
@EID int
,@EventTitle varchar (150)
,@EventDate datetime
,@EventTime varchar (15)
,@HTML text
,@SecretCode varchar (50)
,@NumberPoints int
,@BadgeID int
,@BranchID int
,@Custom1 varchar (50)
,@Custom2 varchar (50)
,@Custom3 varchar (50)
,@LastModDate datetime
,@LastModUser varchar (50)
,@AddedDate datetime
,@AddedUser varchar (50)
,@TenID int = 0
,@FldInt1 int = 0
,@FldInt2 int = 0
,@FldInt3 int = 0
,@FldBit1 bit = 0
,@FldBit2 bit = 0
,@FldBit3 bit = 0
,@FldText1 text = ''
,@FldText2 text = ''
,@FldText3 text = ''

,@ShortDescription text
,@EndDate datetime
,@EndTime varchar (50)

) AS
Update Event
Set
EventTitle =  @EventTitle
,EventDate =  @EventDate
,EventTime =  @EventTime
,HTML =  @HTML
,SecretCode =  @SecretCode
,NumberPoints =  @NumberPoints
,BadgeID =  @BadgeID
,BranchID =  @BranchID
,Custom1 =  @Custom1
,Custom2 =  @Custom2
,Custom3 =  @Custom3
,LastModDate =  @LastModDate
,LastModUser =  @LastModUser
,AddedDate =  @AddedDate
,AddedUser =  @AddedUser
,TenID = @TenID
,FldInt1 = @FldInt1
,FldInt2 = @FldInt2
,FldInt3 = @FldInt3
,FldBit1 = @FldBit1
,FldBit2 = @FldBit2
,FldBit3 = @FldBit3
,FldText1 = @FldText1
,FldText2 = @FldText2
,FldText3 = @FldText3

,ShortDescription = @ShortDescription
,EndDate = @EndDate
,EndTime = @EndTime

Where EID = @EID AND TenID = @TenID




GO

/****** Object:  StoredProcedure [dbo].[app_GamePlayStats_Delete]    Script Date: 12/05/2014 14:24:03 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO

/****** Object:  StoredProcedure [dbo].[app_GamePlayStats_Delete]    Script Date: 03/10/2014 14:43:21 ******/






--Create the Delete Proc
CREATE PROCEDURE [dbo].[app_GamePlayStats_Delete]
@GPSID int
AS
Delete from [GamePlayStats] Where GPSID = @GPSID




GO

/****** Object:  StoredProcedure [dbo].[app_GamePlayStats_GetAll]    Script Date: 12/05/2014 14:24:03 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO

/****** Object:  StoredProcedure [dbo].[app_GamePlayStats_GetAll]    Script Date: 03/10/2014 14:43:21 ******/






--Create the Select Proc
CREATE PROCEDURE [dbo].[app_GamePlayStats_GetAll]
AS
Select * from [GamePlayStats]




GO

/****** Object:  StoredProcedure [dbo].[app_GamePlayStats_GetByID]    Script Date: 12/05/2014 14:24:03 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO

/****** Object:  StoredProcedure [dbo].[app_GamePlayStats_GetByID]    Script Date: 03/10/2014 14:43:21 ******/






--Create the Select Proc
CREATE PROCEDURE [dbo].[app_GamePlayStats_GetByID]
@GPSID int
AS
Select * from [GamePlayStats] Where GPSID = @GPSID




GO

/****** Object:  StoredProcedure [dbo].[app_GamePlayStats_Insert]    Script Date: 12/05/2014 14:24:04 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO

/****** Object:  StoredProcedure [dbo].[app_GamePlayStats_Insert]    Script Date: 03/10/2014 14:43:21 ******/






--Create the Insert Proc
CREATE PROCEDURE [dbo].[app_GamePlayStats_Insert] (
@PID int
,@MGID int
,@MGType int
,@Started datetime
,@Difficulty varchar (50)
,@CompletedPlay bit
,@Completed datetime
,@GPSID int output
) AS
Begin
Insert into GamePlayStats
(PID
,MGID
,MGType
,Started
,Difficulty
,CompletedPlay
,Completed
)
VALUES
(@PID
,@MGID
,@MGType
,@Started
,@Difficulty
,@CompletedPlay
,@Completed
)
Select @GPSID = SCOPE_IDENTITY()
END




GO

/****** Object:  StoredProcedure [dbo].[app_GamePlayStats_Update]    Script Date: 12/05/2014 14:24:04 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO

/****** Object:  StoredProcedure [dbo].[app_GamePlayStats_Update]    Script Date: 03/10/2014 14:43:21 ******/






--Create the Update Proc
CREATE PROCEDURE [dbo].[app_GamePlayStats_Update] (
@GPSID int
,@PID int
,@MGID int
,@MGType int
,@Started datetime
,@Difficulty varchar (50)
,@CompletedPlay bit
,@Completed datetime

) AS
Update GamePlayStats
Set
PID =  @PID
,MGID =  @MGID
,MGType =  @MGType
,Started =  @Started
,Difficulty =  @Difficulty
,CompletedPlay =  @CompletedPlay
,Completed =  @Completed

Where GPSID = @GPSID




GO

/****** Object:  StoredProcedure [dbo].[app_LibraryCrosswalk_Delete]    Script Date: 12/05/2014 14:24:04 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO

CREATE PROCEDURE [dbo].[app_LibraryCrosswalk_Delete]
@ID int
AS
Delete from [LibraryCrosswalk] Where ID = @ID

GO

/****** Object:  StoredProcedure [dbo].[app_LibraryCrosswalk_GetAll]    Script Date: 12/05/2014 14:24:04 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO

CREATE PROCEDURE [dbo].[app_LibraryCrosswalk_GetAll]
@TenID int = null
AS
declare @Libraries Table (CID int not null, Code varchar(50) not null)
insert into @Libraries
select c.CID, c.Code
from Code c join CodeType t
on c.CTID = t.CTID
where t.CodeTypeName = 'Branch' and (t.TenID = @TenID or @TenID is null)

delete
from [LibraryCrosswalk]
where BranchID not in (Select CID from @Libraries) and (TenID = @TenID or @TenID is null)

Select
isnull(w.ID,0) as ID
,isnull(l.CID,0) as BranchID
,isnull(w.DistrictID,0) as DistrictID
,isnull(w.City,'') as City
from [LibraryCrosswalk] w right outer join @Libraries l
on w.BranchID = l.CID
order by l.Code


GO

/****** Object:  StoredProcedure [dbo].[app_LibraryCrosswalk_GetByID]    Script Date: 12/05/2014 14:24:04 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO

CREATE PROCEDURE [dbo].[app_LibraryCrosswalk_GetByID]
@ID int
AS
Select * from [LibraryCrosswalk] Where ID = @ID

GO

/****** Object:  StoredProcedure [dbo].[app_LibraryCrosswalk_GetByLibraryID]    Script Date: 12/05/2014 14:24:04 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO

Create PROCEDURE [dbo].[app_LibraryCrosswalk_GetByLibraryID]
@ID int = 0
as
SELECT * FROM LibraryCrosswalk WHERE BranchID = @ID

GO

/****** Object:  StoredProcedure [dbo].[app_LibraryCrosswalk_GetFilteredBranchDDValues]    Script Date: 12/05/2014 14:24:04 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO

CREATE PROCEDURE [dbo].[app_LibraryCrosswalk_GetFilteredBranchDDValues]
@DistrictID int = 0
,@City varchar(50) = ''
,@TenID int = null
AS
select distinct BranchID as CID, c.Code as Code
from LibraryCrosswalk w join Code c
on w.BranchID = c.CID
where
(DistrictID = @DistrictID or @DistrictID is null or @DistrictID = 0)
AND (City = @City or @City is null or @City = '')
AND (w.TenID = @TenID or @TenID is null)

GO

/****** Object:  StoredProcedure [dbo].[app_LibraryCrosswalk_GetFilteredDistrictDDValues]    Script Date: 12/05/2014 14:24:04 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO


CREATE PROCEDURE [dbo].[app_LibraryCrosswalk_GetFilteredDistrictDDValues]
@City varchar(50) = ''
,@TenID int = null
as
select distinct DistrictID as CID, c.Code as Code
from LibraryCrosswalk w join Code c
on w.DistrictID = c.CID
where
(City = @City or @City is null or @City = '')
AND (w.TenID = @TenID or @TenID is null)

GO

/****** Object:  StoredProcedure [dbo].[app_LibraryCrosswalk_Insert]    Script Date: 12/05/2014 14:24:04 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO

CREATE PROCEDURE [dbo].[app_LibraryCrosswalk_Insert] (
@BranchID int
,@DistrictID int
,@City varchar (50)
,@TenID int = 0
,@FldInt1 int = 0
,@FldInt2 int = 0
,@FldInt3 int = 0
,@FldBit1 bit = 0
,@FldBit2 bit = 0
,@FldBit3 bit = 0
,@FldText1 text = ''
,@FldText2 text = ''
,@FldText3 text = ''
,@ID int output
) AS
Begin
Insert into LibraryCrosswalk
(BranchID
,DistrictID
,City
,TenID, FldInt1, FldInt2, FldInt3, FldBit1, FldBit2, FldBit3, FldText1, FldText2, FldText3
)
VALUES
(@BranchID
,@DistrictID
,@City
,@TenID, @FldInt1, @FldInt2, @FldInt3, @FldBit1, @FldBit2, @FldBit3, @FldText1, @FldText2, @FldText3
)
Select @ID = SCOPE_IDENTITY()
END

GO

/****** Object:  StoredProcedure [dbo].[app_LibraryCrosswalk_Update]    Script Date: 12/05/2014 14:24:04 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO

CREATE PROCEDURE [dbo].[app_LibraryCrosswalk_Update] (
@ID int
,@BranchID int
,@DistrictID int
,@City varchar (50)
,@TenID int = 0
,@FldInt1 int = 0
,@FldInt2 int = 0
,@FldInt3 int = 0
,@FldBit1 bit = 0
,@FldBit2 bit = 0
,@FldBit3 bit = 0
,@FldText1 text = ''
,@FldText2 text = ''
,@FldText3 text = ''
) AS
Update LibraryCrosswalk
Set
BranchID =  @BranchID
,DistrictID =  @DistrictID
,City =  @City
,TenID = @TenID
,FldInt1 = @FldInt1
,FldInt2 = @FldInt2
,FldInt3 = @FldInt3
,FldBit1 = @FldBit1
,FldBit2 = @FldBit2
,FldBit3 = @FldBit3
,FldText1 = @FldText1
,FldText2 = @FldText2
,FldText3 = @FldText3
Where ID = @ID AND TenID = @TenID


GO

/****** Object:  StoredProcedure [dbo].[app_MGChooseAdv_Delete]    Script Date: 12/05/2014 14:24:04 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO

/****** Object:  StoredProcedure [dbo].[app_MGChooseAdv_Delete]    Script Date: 03/10/2014 14:43:21 ******/






--Create the Delete Proc
CREATE PROCEDURE [dbo].[app_MGChooseAdv_Delete]
@CAID int
AS
Delete from [MGChooseAdv] Where CAID = @CAID




GO

/****** Object:  StoredProcedure [dbo].[app_MGChooseAdv_GetAll]    Script Date: 12/05/2014 14:24:04 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO

/****** Object:  StoredProcedure [dbo].[app_MGChooseAdv_GetAll]    Script Date: 03/10/2014 14:43:21 ******/






--Create the Select Proc
CREATE PROCEDURE [dbo].[app_MGChooseAdv_GetAll]
AS
Select * from [MGChooseAdv]




GO

/****** Object:  StoredProcedure [dbo].[app_MGChooseAdv_GetByID]    Script Date: 12/05/2014 14:24:04 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO

/****** Object:  StoredProcedure [dbo].[app_MGChooseAdv_GetByID]    Script Date: 03/10/2014 14:43:21 ******/






--Create the Select Proc
CREATE PROCEDURE [dbo].[app_MGChooseAdv_GetByID]
@CAID int
AS
Select * from [MGChooseAdv] Where CAID = @CAID




GO

/****** Object:  StoredProcedure [dbo].[app_MGChooseAdv_GetByIDWithParent]    Script Date: 12/05/2014 14:24:04 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO


CREATE PROCEDURE [dbo].[app_MGChooseAdv_GetByIDWithParent]
@MGID int
AS
Select
mg.*,
MiniGameTypeName, AdminName, GameName, isActive,NumberPoints, AwardedBadgeID, Acknowledgements
from MGChooseAdv  mg
inner join dbo.Minigame g on mg.MGID = g.MGID
Where g.MGID = @MGID


GO

/****** Object:  StoredProcedure [dbo].[app_MGChooseAdv_GetByMGID]    Script Date: 12/05/2014 14:24:04 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO

/****** Object:  StoredProcedure [dbo].[app_MGChooseAdv_GetByMGID]    Script Date: 03/10/2014 14:43:21 ******/







create PROCEDURE [dbo].[app_MGChooseAdv_GetByMGID]
@MGID int
AS
Select * from MGChooseAdv Where MGID = @MGID





GO

/****** Object:  StoredProcedure [dbo].[app_MGChooseAdv_Insert]    Script Date: 12/05/2014 14:24:04 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO

/****** Object:  StoredProcedure [dbo].[app_MGChooseAdv_Insert]    Script Date: 03/10/2014 14:43:21 ******/






--Create the Insert Proc
CREATE PROCEDURE [dbo].[app_MGChooseAdv_Insert] (
@MGID int
,@EnableMediumDifficulty bit
,@EnableHardDifficulty bit
,@LastModDate datetime
,@LastModUser varchar (50)
,@AddedDate datetime
,@AddedUser varchar (50)
,@CAID int output
) AS
Begin
Insert into MGChooseAdv
(MGID
,EnableMediumDifficulty
,EnableHardDifficulty
,LastModDate
,LastModUser
,AddedDate
,AddedUser
)
VALUES
(@MGID
,@EnableMediumDifficulty
,@EnableHardDifficulty
,@LastModDate
,@LastModUser
,@AddedDate
,@AddedUser
)
Select @CAID = SCOPE_IDENTITY()
END




GO

/****** Object:  StoredProcedure [dbo].[app_MGChooseAdv_Update]    Script Date: 12/05/2014 14:24:04 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO

/****** Object:  StoredProcedure [dbo].[app_MGChooseAdv_Update]    Script Date: 03/10/2014 14:43:21 ******/






--Create the Update Proc
CREATE PROCEDURE [dbo].[app_MGChooseAdv_Update] (
@CAID int
,@MGID int
,@EnableMediumDifficulty bit
,@EnableHardDifficulty bit
,@LastModDate datetime
,@LastModUser varchar (50)
,@AddedDate datetime
,@AddedUser varchar (50)

) AS
Update MGChooseAdv
Set
MGID =  @MGID
,EnableMediumDifficulty =  @EnableMediumDifficulty
,EnableHardDifficulty =  @EnableHardDifficulty
,LastModDate =  @LastModDate
,LastModUser =  @LastModUser
,AddedDate =  @AddedDate
,AddedUser =  @AddedUser

Where CAID = @CAID




GO

/****** Object:  StoredProcedure [dbo].[app_MGChooseAdvSlides_Delete]    Script Date: 12/05/2014 14:24:04 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO

/****** Object:  StoredProcedure [dbo].[app_MGChooseAdvSlides_Delete]    Script Date: 03/10/2014 14:43:21 ******/







CREATE PROCEDURE [dbo].[app_MGChooseAdvSlides_Delete]
@CASID int
AS
Declare @MGID int
Select @MGID = MGID from MGChooseAdvSlides Where CASID = @CASID

Delete from MGChooseAdvSlides Where CASID = @CASID

exec app_MGChooseAdvSlides_Reorder @MGID




GO

/****** Object:  StoredProcedure [dbo].[app_MGChooseAdvSlides_GetAll]    Script Date: 12/05/2014 14:24:04 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO

/****** Object:  StoredProcedure [dbo].[app_MGChooseAdvSlides_GetAll]    Script Date: 03/10/2014 14:43:21 ******/







CREATE PROCEDURE [dbo].[app_MGChooseAdvSlides_GetAll]
@MGID int = 0
AS
Select * from MGChooseAdvSlides Where MGID = @MGID






GO

/****** Object:  StoredProcedure [dbo].[app_MGChooseAdvSlides_GetAllByDifficulty]    Script Date: 12/05/2014 14:24:04 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO

/****** Object:  StoredProcedure [dbo].[app_MGChooseAdvSlides_GetAllByDifficulty]    Script Date: 03/10/2014 14:43:21 ******/







CREATE PROCEDURE [dbo].[app_MGChooseAdvSlides_GetAllByDifficulty]
@MGID int = 0
,@Diff int = 1
AS
Select *, (Select MAX(StepNumber) from MGChooseAdvSlides where MGID = @MGID AND Difficulty = @Diff ) as MAX
from MGChooseAdvSlides
Where MGID = @MGID
AND Difficulty = @Diff
order by StepNumber




GO

/****** Object:  StoredProcedure [dbo].[app_MGChooseAdvSlides_GetByID]    Script Date: 12/05/2014 14:24:04 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO

/****** Object:  StoredProcedure [dbo].[app_MGChooseAdvSlides_GetByID]    Script Date: 03/10/2014 14:43:21 ******/






--Create the Select Proc
CREATE PROCEDURE [dbo].[app_MGChooseAdvSlides_GetByID]
@CASID int
AS
Select * from [MGChooseAdvSlides] Where CASID = @CASID




GO

/****** Object:  StoredProcedure [dbo].[app_MGChooseAdvSlides_GetPlaySlide]    Script Date: 12/05/2014 14:24:04 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO

/****** Object:  StoredProcedure [dbo].[app_MGChooseAdvSlides_GetPlaySlide]    Script Date: 03/10/2014 14:43:21 ******/






CREATE  PROCEDURE [dbo].[app_MGChooseAdvSlides_GetPlaySlide]
@CAID int
,@Step int = 1
,@Difficulty int = 1
AS
Select * from [MGChooseAdvSlides] Where CAID = @CAID
AND StepNumber = @Step AND Difficulty = @Difficulty





GO

/****** Object:  StoredProcedure [dbo].[app_MGChooseAdvSlides_Insert]    Script Date: 12/05/2014 14:24:04 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO

--Create the Insert Proc
CREATE PROCEDURE [dbo].[app_MGChooseAdvSlides_Insert] (
@CAID int
,@MGID int
,@Difficulty int = 1
,@StepNumber int
,@SlideText text
,@FirstImageGoToStep int
,@SecondImageGoToStep int
,@LastModDate datetime
,@LastModUser varchar (50)
,@AddedDate datetime
,@AddedUser varchar (50)
,@CASID int output
) AS
Begin
select @StepNumber = isnull((select isnull(MAX(StepNumber),0) from MGChooseAdvSlides where CAID = @CAID and Difficulty = @Difficulty),0) + 1

Insert into MGChooseAdvSlides
(CAID
,MGID
,Difficulty
,StepNumber
,SlideText
,FirstImageGoToStep
,SecondImageGoToStep
,LastModDate
,LastModUser
,AddedDate
,AddedUser
)
VALUES
(@CAID
,@MGID
,@Difficulty
,@StepNumber
,@SlideText
,@FirstImageGoToStep
,@SecondImageGoToStep
,@LastModDate
,@LastModUser
,@AddedDate
,@AddedUser
)
Select @CASID = SCOPE_IDENTITY()
END


GO

/****** Object:  StoredProcedure [dbo].[app_MGChooseAdvSlides_MoveDn]    Script Date: 12/05/2014 14:24:04 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO

/****** Object:  StoredProcedure [dbo].[app_MGChooseAdvSlides_MoveDn]    Script Date: 03/10/2014 14:43:21 ******/






CREATE PROCEDURE [dbo].[app_MGChooseAdvSlides_MoveDn]
@CASID int
AS

Declare @CurrentRecordLocation int, @NextRecordID int, @MGID int, @Diff int , @CAID int
Select @CurrentRecordLocation = StepNumber, @CAID = CAID, @MGID = MGID , @Diff = Difficulty
from MGChooseAdvSlides
where CASID = @CASID

exec [dbo].[app_MGChooseAdvSlides_Reorder] @MGID

if @CurrentRecordLocation < (Select MAX(StepNumber) from MGChooseAdvSlides where MGID = @MGID AND Difficulty = @Diff)
	begin
		Select @NextRecordID = CASID 
		from MGChooseAdvSlides 
		where StepNumber = (@CurrentRecordLocation + 1) AND MGID = @MGID AND Difficulty = @Diff
		
		update MGChooseAdvSlides set StepNumber = @CurrentRecordLocation + 1
		where CASID = @CASID
	
		update MGChooseAdvSlides set StepNumber = @CurrentRecordLocation 
		where CASID = @NextRecordID
	end




GO

/****** Object:  StoredProcedure [dbo].[app_MGChooseAdvSlides_MoveUp]    Script Date: 12/05/2014 14:24:04 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO

 /****** Object:  StoredProcedure [dbo].[app_MGChooseAdvSlides_MoveUp]    Script Date: 03/10/2014 14:43:21 ******/







CREATE PROCEDURE [dbo].[app_MGChooseAdvSlides_MoveUp]
@CASID int 
AS
	Declare @CurrentRecordLocation int, @PreviousRecordID int, @MGID int, @Diff int , @CAID int
	Select @CurrentRecordLocation = StepNumber, @CAID = CAID, @MGID = MGID , @Diff = Difficulty 
	from MGChooseAdvSlides 
	where CASID = @CASID
	
	exec [dbo].[app_MGChooseAdvSlides_Reorder] @MGID
	
	if @CurrentRecordLocation > 1
	begin
		Select @PreviousRecordID = CASID 
		from MGChooseAdvSlides 
		where StepNumber = (@CurrentRecordLocation - 1) AND MGID = @MGID AND Difficulty = @Diff
		
		update MGChooseAdvSlides set StepNumber = @CurrentRecordLocation - 1
		where CASID = @CASID
	
		update MGChooseAdvSlides set StepNumber = @CurrentRecordLocation 
		where CASID = @PreviousRecordID
	end




GO

/****** Object:  StoredProcedure [dbo].[app_MGChooseAdvSlides_Reorder]    Script Date: 12/05/2014 14:24:04 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO

 /****** Object:  StoredProcedure [dbo].[app_MGChooseAdvSlides_Reorder]    Script Date: 03/10/2014 14:43:21 ******/






CREATE Procedure [dbo].[app_MGChooseAdvSlides_Reorder]
@MGID int 
AS
	UPDATE MGChooseAdvSlides 
	SET StepNumber = rowNumber 
	FROM MGChooseAdvSlides
		INNER JOIN 
		(SELECT CASID, StepNumber, MGID, Difficulty, row_number() OVER (ORDER BY StepNumber Asc) as rowNumber
			FROM MGChooseAdvSlides WHERE MGID = @MGID AND Difficulty = 1) drRowNumbers 
				ON	
						drRowNumbers.CASID = MGChooseAdvSlides.CASID 
					AND drRowNumbers.MGID = @MGID 
					AND drRowNumbers.Difficulty = 1

	UPDATE MGChooseAdvSlides 
	SET StepNumber = rowNumber 
	FROM MGChooseAdvSlides
		INNER JOIN 
		(SELECT CASID, StepNumber, MGID, Difficulty, row_number() OVER (ORDER BY StepNumber Asc) as rowNumber
			FROM MGChooseAdvSlides WHERE MGID = @MGID AND Difficulty = 2) drRowNumbers 
				ON	
						drRowNumbers.CASID = MGChooseAdvSlides.CASID 
					AND drRowNumbers.MGID = @MGID 
					AND drRowNumbers.Difficulty = 2

	UPDATE MGChooseAdvSlides 
	SET StepNumber = rowNumber 
	FROM MGChooseAdvSlides
		INNER JOIN 
		(SELECT CASID, StepNumber, MGID, Difficulty, row_number() OVER (ORDER BY StepNumber Asc) as rowNumber
			FROM MGChooseAdvSlides WHERE MGID = @MGID AND Difficulty = 3) drRowNumbers 
				ON	
						drRowNumbers.CASID = MGChooseAdvSlides.CASID 
					AND drRowNumbers.MGID = @MGID 
					AND drRowNumbers.Difficulty = 3	




GO

/****** Object:  StoredProcedure [dbo].[app_MGChooseAdvSlides_Update]    Script Date: 12/05/2014 14:24:04 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO

--Create the Update Proc
CREATE PROCEDURE [dbo].[app_MGChooseAdvSlides_Update] (
	 @CASID int 
	,@CAID int 
	,@MGID int 
	,@Difficulty int 
	,@StepNumber int 
	,@SlideText text 
	,@FirstImageGoToStep int 
	,@SecondImageGoToStep int 
	,@LastModDate datetime 
	,@LastModUser varchar (50)
	,@AddedDate datetime 
	,@AddedUser varchar (50)

) AS
	Update MGChooseAdvSlides
	Set 
		CAID =  @CAID
		,MGID =  @MGID
		,Difficulty =  @Difficulty
		,StepNumber =  @StepNumber
		,SlideText =  @SlideText
		,FirstImageGoToStep =  @FirstImageGoToStep
		,SecondImageGoToStep =  @SecondImageGoToStep
		,LastModDate =  @LastModDate
		,LastModUser =  @LastModUser
		,AddedDate =  @AddedDate
		,AddedUser =  @AddedUser

	Where CASID = @CASID




GO

/****** Object:  StoredProcedure [dbo].[app_MGCodeBreaker_Delete]    Script Date: 12/05/2014 14:24:04 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO

 /****** Object:  StoredProcedure [dbo].[app_MGCodeBreaker_Delete]    Script Date: 03/10/2014 14:43:21 ******/






--Create the Delete Proc
CREATE PROCEDURE [dbo].[app_MGCodeBreaker_Delete]
@CBID int 
AS
   Delete from [MGCodeBreaker] Where CBID = @CBID




GO

/****** Object:  StoredProcedure [dbo].[app_MGCodeBreaker_GetAll]    Script Date: 12/05/2014 14:24:04 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO

 /****** Object:  StoredProcedure [dbo].[app_MGCodeBreaker_GetAll]    Script Date: 03/10/2014 14:43:21 ******/






--Create the Select Proc
CREATE PROCEDURE [dbo].[app_MGCodeBreaker_GetAll]
AS
   Select * from [MGCodeBreaker]




GO

/****** Object:  StoredProcedure [dbo].[app_MGCodeBreaker_GetByID]    Script Date: 12/05/2014 14:24:04 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO

 /****** Object:  StoredProcedure [dbo].[app_MGCodeBreaker_GetByID]    Script Date: 03/10/2014 14:43:21 ******/






--Create the Select Proc
CREATE PROCEDURE [dbo].[app_MGCodeBreaker_GetByID]
@CBID int 
AS
   Select * from [MGCodeBreaker] Where CBID = @CBID




GO

/****** Object:  StoredProcedure [dbo].[app_MGCodeBreaker_GetByIDWithParent]    Script Date: 12/05/2014 14:24:04 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO


CREATE PROCEDURE [dbo].[app_MGCodeBreaker_GetByIDWithParent]
@MGID int 
AS
   Select 
	cb.*, 
	MiniGameTypeName, AdminName, GameName, isActive,NumberPoints, AwardedBadgeID, Acknowledgements
	from MGCodeBreaker  cb 
		inner join dbo.Minigame g on cb.MGID = g.MGID
	Where g.MGID = @MGID


GO

/****** Object:  StoredProcedure [dbo].[app_MGCodeBreaker_GetByMGID]    Script Date: 12/05/2014 14:24:04 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO

 /****** Object:  StoredProcedure [dbo].[app_MGCodeBreaker_GetByMGID]    Script Date: 03/10/2014 14:43:21 ******/






--Create the Select Proc
create PROCEDURE [dbo].[app_MGCodeBreaker_GetByMGID]
@MGID int 
AS
   Select * from [MGCodeBreaker] Where MGID = @MGID




GO

/****** Object:  StoredProcedure [dbo].[app_MGCodeBreaker_Insert]    Script Date: 12/05/2014 14:24:04 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO

 /****** Object:  StoredProcedure [dbo].[app_MGCodeBreaker_Insert]    Script Date: 03/10/2014 14:43:21 ******/






--Create the Insert Proc
CREATE PROCEDURE [dbo].[app_MGCodeBreaker_Insert] (
	 @MGID int 
	,@EasyString varchar (250)
	,@EnableMediumDifficulty bit 
	,@EnableHardDifficulty bit 
	,@MediumString varchar (250)
	,@HardString varchar (250)
	,@LastModDate datetime 
	,@LastModUser varchar (50)
	,@AddedDate datetime 
	,@AddedUser varchar (50)
	,@CBID int output 
) AS
Begin
	Insert into MGCodeBreaker
		(MGID
		,EasyString
		,EnableMediumDifficulty
		,EnableHardDifficulty
		,MediumString
		,HardString
		,LastModDate
		,LastModUser
		,AddedDate
		,AddedUser
)
	VALUES
		(@MGID
		,@EasyString
		,@EnableMediumDifficulty
		,@EnableHardDifficulty
		,@MediumString
		,@HardString
		,@LastModDate
		,@LastModUser
		,@AddedDate
		,@AddedUser
)
	Select @CBID = SCOPE_IDENTITY()
END




GO

/****** Object:  StoredProcedure [dbo].[app_MGCodeBreaker_Update]    Script Date: 12/05/2014 14:24:04 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO

 /****** Object:  StoredProcedure [dbo].[app_MGCodeBreaker_Update]    Script Date: 03/10/2014 14:43:21 ******/






--Create the Update Proc
CREATE PROCEDURE [dbo].[app_MGCodeBreaker_Update] (
	 @CBID int 
	,@MGID int 
	,@EasyString varchar (250)
	,@EnableMediumDifficulty bit 
	,@EnableHardDifficulty bit 
	,@MediumString varchar (250)
	,@HardString varchar (250)
	,@LastModDate datetime 
	,@LastModUser varchar (50)
	,@AddedDate datetime 
	,@AddedUser varchar (50)

) AS
	Update MGCodeBreaker
	Set 
		MGID =  @MGID
		,EasyString =  @EasyString
		,EnableMediumDifficulty =  @EnableMediumDifficulty
		,EnableHardDifficulty =  @EnableHardDifficulty
		,MediumString =  @MediumString
		,HardString =  @HardString
		,LastModDate =  @LastModDate
		,LastModUser =  @LastModUser
		,AddedDate =  @AddedDate
		,AddedUser =  @AddedUser

	Where CBID = @CBID




GO

/****** Object:  StoredProcedure [dbo].[app_MGHiddenPic_Delete]    Script Date: 12/05/2014 14:24:04 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO

 /****** Object:  StoredProcedure [dbo].[app_MGHiddenPic_Delete]    Script Date: 03/10/2014 14:43:21 ******/






--Create the Delete Proc
CREATE PROCEDURE [dbo].[app_MGHiddenPic_Delete]
@HPID int 
AS
   Delete from [MGHiddenPic] Where HPID = @HPID




GO

/****** Object:  StoredProcedure [dbo].[app_MGHiddenPic_GetAll]    Script Date: 12/05/2014 14:24:04 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO

 /****** Object:  StoredProcedure [dbo].[app_MGHiddenPic_GetAll]    Script Date: 03/10/2014 14:43:21 ******/






--Create the Select Proc
CREATE PROCEDURE [dbo].[app_MGHiddenPic_GetAll]
AS
   Select * from [MGHiddenPic]




GO

/****** Object:  StoredProcedure [dbo].[app_MGHiddenPic_GetByID]    Script Date: 12/05/2014 14:24:04 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO

 /****** Object:  StoredProcedure [dbo].[app_MGHiddenPic_GetByID]    Script Date: 03/10/2014 14:43:21 ******/






--Create the Select Proc
CREATE PROCEDURE [dbo].[app_MGHiddenPic_GetByID]
@HPID int 
AS
   Select * from [MGHiddenPic] Where HPID = @HPID




GO

/****** Object:  StoredProcedure [dbo].[app_MGHiddenPic_GetByIDWithParent]    Script Date: 12/05/2014 14:24:04 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO


CREATE PROCEDURE [dbo].[app_MGHiddenPic_GetByIDWithParent]
@MGID int 
AS
   Select 
	mg.*, 
	MiniGameTypeName, AdminName, GameName, isActive,NumberPoints, AwardedBadgeID, Acknowledgements
	from MGHiddenPic  mg 
		inner join dbo.Minigame g on mg.MGID = g.MGID
	Where g.MGID = @MGID


GO

/****** Object:  StoredProcedure [dbo].[app_MGHiddenPic_GetByMGID]    Script Date: 12/05/2014 14:24:04 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO

 /****** Object:  StoredProcedure [dbo].[app_MGHiddenPic_GetByMGID]    Script Date: 03/10/2014 14:43:21 ******/







create PROCEDURE [dbo].[app_MGHiddenPic_GetByMGID]
@MGID int 
AS
   Select * from MGHiddenPic Where MGID = @MGID
   




GO

/****** Object:  StoredProcedure [dbo].[app_MGHiddenPic_GetRandomBK]    Script Date: 12/05/2014 14:24:04 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO

 /****** Object:  StoredProcedure [dbo].[app_MGHiddenPic_GetRandomBK]    Script Date: 03/10/2014 14:43:21 ******/








CREATE PROCEDURE [dbo].[app_MGHiddenPic_GetRandomBK]
 @HPID int
,@HPBID int out
AS

	declare @a int
	select top 1	
		NEWID() as id, HPBID
	into #tmp
	from  dbo.MGHiddenPicBk
		Where HPID = @HPID
	order by id
	
	select @HPBID = HPBID from #tmp
	return @a




GO

/****** Object:  StoredProcedure [dbo].[app_MGHiddenPic_Insert]    Script Date: 12/05/2014 14:24:04 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO

 /****** Object:  StoredProcedure [dbo].[app_MGHiddenPic_Insert]    Script Date: 03/10/2014 14:43:21 ******/






--Create the Insert Proc
CREATE PROCEDURE [dbo].[app_MGHiddenPic_Insert] (
	 @MGID int 
	,@EnableMediumDifficulty bit 
	,@EnableHardDifficulty bit 
	,@EasyDictionary text 
	,@MediumDictionary text 
	,@HardDictionary text 
	,@LastModDate datetime 
	,@LastModUser varchar (50)
	,@AddedDate datetime 
	,@AddedUser varchar (50)
	,@HPID int output 
) AS
Begin
	Insert into MGHiddenPic
		(MGID
		,EnableMediumDifficulty
		,EnableHardDifficulty
		,EasyDictionary
		,MediumDictionary
		,HardDictionary
		,LastModDate
		,LastModUser
		,AddedDate
		,AddedUser
)
	VALUES
		(@MGID
		,@EnableMediumDifficulty
		,@EnableHardDifficulty
		,@EasyDictionary
		,@MediumDictionary
		,@HardDictionary
		,@LastModDate
		,@LastModUser
		,@AddedDate
		,@AddedUser
)
	Select @HPID = SCOPE_IDENTITY()
END




GO

/****** Object:  StoredProcedure [dbo].[app_MGHiddenPic_Update]    Script Date: 12/05/2014 14:24:04 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO

 /****** Object:  StoredProcedure [dbo].[app_MGHiddenPic_Update]    Script Date: 03/10/2014 14:43:21 ******/






--Create the Update Proc
CREATE PROCEDURE [dbo].[app_MGHiddenPic_Update] (
	 @HPID int 
	,@MGID int 
	,@EnableMediumDifficulty bit 
	,@EnableHardDifficulty bit 
	,@EasyDictionary text 
	,@MediumDictionary text 
	,@HardDictionary text 
	,@LastModDate datetime 
	,@LastModUser varchar (50)
	,@AddedDate datetime 
	,@AddedUser varchar (50)

) AS
	Update MGHiddenPic
	Set 
		MGID =  @MGID
		,EnableMediumDifficulty =  @EnableMediumDifficulty
		,EnableHardDifficulty =  @EnableHardDifficulty
		,EasyDictionary =  @EasyDictionary
		,MediumDictionary =  @MediumDictionary
		,HardDictionary =  @HardDictionary
		,LastModDate =  @LastModDate
		,LastModUser =  @LastModUser
		,AddedDate =  @AddedDate
		,AddedUser =  @AddedUser

	Where HPID = @HPID




GO

/****** Object:  StoredProcedure [dbo].[app_MGHiddenPicBk_Delete]    Script Date: 12/05/2014 14:24:04 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO

 /****** Object:  StoredProcedure [dbo].[app_MGHiddenPicBk_Delete]    Script Date: 03/10/2014 14:43:21 ******/






--Create the Delete Proc
CREATE PROCEDURE [dbo].[app_MGHiddenPicBk_Delete]
@HPBID int 
AS
   Delete from [MGHiddenPicBk] Where HPBID = @HPBID




GO

/****** Object:  StoredProcedure [dbo].[app_MGHiddenPicBk_GetAll]    Script Date: 12/05/2014 14:24:04 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO

 /****** Object:  StoredProcedure [dbo].[app_MGHiddenPicBk_GetAll]    Script Date: 03/10/2014 14:43:21 ******/








CREATE PROCEDURE [dbo].[app_MGHiddenPicBk_GetAll]
@MGID int = 0
AS 
   Select * from MGHiddenPicBk Where MGID = @MGID 






GO

/****** Object:  StoredProcedure [dbo].[app_MGHiddenPicBk_GetByID]    Script Date: 12/05/2014 14:24:04 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO

 /****** Object:  StoredProcedure [dbo].[app_MGHiddenPicBk_GetByID]    Script Date: 03/10/2014 14:43:21 ******/






--Create the Select Proc
CREATE PROCEDURE [dbo].[app_MGHiddenPicBk_GetByID]
@HPBID int 
AS
   Select * from [MGHiddenPicBk] Where HPBID = @HPBID




GO

/****** Object:  StoredProcedure [dbo].[app_MGHiddenPicBk_GetByIDWithParent]    Script Date: 12/05/2014 14:24:04 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO


CREATE PROCEDURE [dbo].[app_MGHiddenPicBk_GetByIDWithParent]
@MGID int 
AS
   Select 
	mg.*, 
	MiniGameTypeName, AdminName, GameName, isActive,NumberPoints, AwardedBadgeID, Acknowledgements
	from MGHiddenPicBk  mg 
		inner join dbo.Minigame g on mg.MGID = g.MGID
	Where g.MGID = @MGID


GO

/****** Object:  StoredProcedure [dbo].[app_MGHiddenPicBk_GetByMGID]    Script Date: 12/05/2014 14:24:04 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO

 /****** Object:  StoredProcedure [dbo].[app_MGHiddenPicBk_GetByMGID]    Script Date: 03/10/2014 14:43:21 ******/







create PROCEDURE [dbo].[app_MGHiddenPicBk_GetByMGID]
@MGID int 
AS
   Select * from MGHiddenPicBk Where MGID = @MGID
   




GO

/****** Object:  StoredProcedure [dbo].[app_MGHiddenPicBk_Insert]    Script Date: 12/05/2014 14:24:04 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO

 /****** Object:  StoredProcedure [dbo].[app_MGHiddenPicBk_Insert]    Script Date: 03/10/2014 14:43:21 ******/






--Create the Insert Proc
CREATE PROCEDURE [dbo].[app_MGHiddenPicBk_Insert] (
	 @HPID int 
	,@MGID int 
	,@LastModDate datetime 
	,@LastModUser varchar (50)
	,@AddedDate datetime 
	,@AddedUser varchar (50)
	,@HPBID int output 
) AS
Begin
	Insert into MGHiddenPicBk
		(HPID
		,MGID
		,LastModDate
		,LastModUser
		,AddedDate
		,AddedUser
)
	VALUES
		(@HPID
		,@MGID
		,@LastModDate
		,@LastModUser
		,@AddedDate
		,@AddedUser
)
	Select @HPBID = SCOPE_IDENTITY()
END




GO

/****** Object:  StoredProcedure [dbo].[app_MGHiddenPicBk_Update]    Script Date: 12/05/2014 14:24:04 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO

 /****** Object:  StoredProcedure [dbo].[app_MGHiddenPicBk_Update]    Script Date: 03/10/2014 14:43:21 ******/






--Create the Update Proc
CREATE PROCEDURE [dbo].[app_MGHiddenPicBk_Update] (
	 @HPBID int 
	,@HPID int 
	,@MGID int 
	,@LastModDate datetime 
	,@LastModUser varchar (50)
	,@AddedDate datetime 
	,@AddedUser varchar (50)

) AS
	Update MGHiddenPicBk
	Set 
		HPID =  @HPID
		,MGID =  @MGID
		,LastModDate =  @LastModDate
		,LastModUser =  @LastModUser
		,AddedDate =  @AddedDate
		,AddedUser =  @AddedUser

	Where HPBID = @HPBID




GO

/****** Object:  StoredProcedure [dbo].[app_MGMatchingGame_Delete]    Script Date: 12/05/2014 14:24:04 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO

 /****** Object:  StoredProcedure [dbo].[app_MGMatchingGame_Delete]    Script Date: 03/10/2014 14:43:21 ******/






--Create the Delete Proc
CREATE PROCEDURE [dbo].[app_MGMatchingGame_Delete]
@MAGID int 
AS
   Delete from [MGMatchingGame] Where MAGID = @MAGID




GO

/****** Object:  StoredProcedure [dbo].[app_MGMatchingGame_GetAll]    Script Date: 12/05/2014 14:24:04 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO

 /****** Object:  StoredProcedure [dbo].[app_MGMatchingGame_GetAll]    Script Date: 03/10/2014 14:43:21 ******/






--Create the Select Proc
CREATE PROCEDURE [dbo].[app_MGMatchingGame_GetAll]
AS
   Select * from [MGMatchingGame]




GO

/****** Object:  StoredProcedure [dbo].[app_MGMatchingGame_GetByID]    Script Date: 12/05/2014 14:24:04 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO

 /****** Object:  StoredProcedure [dbo].[app_MGMatchingGame_GetByID]    Script Date: 03/10/2014 14:43:21 ******/






--Create the Select Proc
CREATE PROCEDURE [dbo].[app_MGMatchingGame_GetByID]
@MAGID int 
AS
   Select * from [MGMatchingGame] Where MAGID = @MAGID




GO

/****** Object:  StoredProcedure [dbo].[app_MGMatchingGame_GetByIDWithParent]    Script Date: 12/05/2014 14:24:04 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO


CREATE PROCEDURE [dbo].[app_MGMatchingGame_GetByIDWithParent]
@MGID int 
AS
   Select 
	mg.*, 
	MiniGameTypeName, AdminName, GameName, isActive,NumberPoints, AwardedBadgeID, Acknowledgements
	from MGMatchingGame  mg 
		inner join dbo.Minigame g on mg.MGID = g.MGID
	Where g.MGID = @MGID


GO

/****** Object:  StoredProcedure [dbo].[app_MGMatchingGame_GetByMGID]    Script Date: 12/05/2014 14:24:04 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO

 /****** Object:  StoredProcedure [dbo].[app_MGMatchingGame_GetByMGID]    Script Date: 03/10/2014 14:43:21 ******/







create PROCEDURE [dbo].[app_MGMatchingGame_GetByMGID]
@MGID int 
AS
   Select * from MGMatchingGame Where MGID = @MGID
   




GO

/****** Object:  StoredProcedure [dbo].[app_MGMatchingGame_GetRandomPlayItems]    Script Date: 12/05/2014 14:24:04 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO

 /****** Object:  StoredProcedure [dbo].[app_MGMatchingGame_GetRandomPlayItems]    Script Date: 03/10/2014 14:43:21 ******/







CREATE PROCEDURE [dbo].[app_MGMatchingGame_GetRandomPlayItems]
@MAGID int
, @NumItems int
, @Difficulty int 
AS

declare @SQL varchar(8000)

CREATE TABLE #Temp1(
	[ID] uniqueidentifier ,
	[MAGTID] [int]  ,
	[MAGID] [int],
	[MGID] [int] ,
	[Tile1UseMedium] [bit] ,
	[Tile1UseHard] [bit] ,
	[Tile2UseMedium] [bit] ,
	[Tile2UseHard] [bit] ,
	[Tile3UseMedium] [bit] ,
	[Tile3UseHard] [bit] 
)

CREATE TABLE #Temp2( [MAGTID] [int], TileImage varchar(255))
	
select @SQL = 
	'insert into #Temp1 
	select top ' + convert(varchar,@NumItems) + ' NEWID() as ID, 
		[MAGTID], [MAGID], [MGID], [Tile1UseMedium], [Tile1UseHard], [Tile2UseMedium], [Tile2UseHard], [Tile3UseMedium],[Tile3UseHard]   from  dbo.MGMatchingGameTiles Where MAGID = ' + convert(varchar,@MAGID) + '  order by id'
EXEC(@SQL)

--select * from #Temp1 

insert into #Temp2
select MAGTID, 
	('t1_' + CONVERT(varchar, MAGTID) + '.png') as TileImage

from #Temp1

insert into #Temp2
select MAGTID, 
	(case 
		when @Difficulty = 1 
			then 't1_' + CONVERT(varchar, MAGTID) + '.png'
			
		when @Difficulty = 2 AND Tile1UseMedium = 1 and Tile2UseMedium =  0  
			then 't1_' + CONVERT(varchar, MAGTID) + '.png'
		when @Difficulty = 2 AND Tile2UseMedium = 1   
			then 't2_' + CONVERT(varchar, MAGTID) + '.png'		
			
		when @Difficulty = 3 AND Tile2UseHard = 0 and Tile3UseHard =  0  
			then 't1_' + CONVERT(varchar, MAGTID) + '.png'
		when @Difficulty = 3 AND Tile2UseHard = 1 and Tile3UseHard =  0  
			then 't2_' + CONVERT(varchar, MAGTID) + '.png'					
		when @Difficulty = 3 AND  Tile3UseHard =  1  
			then 't3_' + CONVERT(varchar, MAGTID) + '.png'
	end ) as TileImage
from #Temp1 



select NEWID() as ID, * from #Temp2 Order By ID
drop table #Temp1
drop table #Temp2




GO

/****** Object:  StoredProcedure [dbo].[app_MGMatchingGame_Insert]    Script Date: 12/05/2014 14:24:04 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO

 /****** Object:  StoredProcedure [dbo].[app_MGMatchingGame_Insert]    Script Date: 03/10/2014 14:43:21 ******/






--Create the Insert Proc
CREATE PROCEDURE [dbo].[app_MGMatchingGame_Insert] (
	 @MGID int 
	,@CorrectRoundsToWinCount int 
	,@EasyGameSize int 
	,@MediumGameSize int 
	,@HardGameSize int 
	,@EnableMediumDifficulty bit 
	,@EnableHardDifficulty bit 
	,@LastModDate datetime 
	,@LastModUser varchar (50)
	,@AddedDate datetime 
	,@AddedUser varchar (50)
	,@MAGID int output 
) AS
Begin
	Insert into MGMatchingGame
		(MGID
		,CorrectRoundsToWinCount
		,EasyGameSize
		,MediumGameSize
		,HardGameSize
		,EnableMediumDifficulty
		,EnableHardDifficulty
		,LastModDate
		,LastModUser
		,AddedDate
		,AddedUser
)
	VALUES
		(@MGID
		,@CorrectRoundsToWinCount
		,@EasyGameSize
		,@MediumGameSize
		,@HardGameSize
		,@EnableMediumDifficulty
		,@EnableHardDifficulty
		,@LastModDate
		,@LastModUser
		,@AddedDate
		,@AddedUser
)
	Select @MAGID = SCOPE_IDENTITY()
END




GO

/****** Object:  StoredProcedure [dbo].[app_MGMatchingGame_Update]    Script Date: 12/05/2014 14:24:04 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO

 /****** Object:  StoredProcedure [dbo].[app_MGMatchingGame_Update]    Script Date: 03/10/2014 14:43:22 ******/






--Create the Update Proc
CREATE PROCEDURE [dbo].[app_MGMatchingGame_Update] (
	 @MAGID int 
	,@MGID int 
	,@CorrectRoundsToWinCount int 
	,@EasyGameSize int 
	,@MediumGameSize int 
	,@HardGameSize int 
	,@EnableMediumDifficulty bit 
	,@EnableHardDifficulty bit 
	,@LastModDate datetime 
	,@LastModUser varchar (50)
	,@AddedDate datetime 
	,@AddedUser varchar (50)

) AS
	Update MGMatchingGame
	Set 
		MGID =  @MGID
		,CorrectRoundsToWinCount =  @CorrectRoundsToWinCount
		,EasyGameSize =  @EasyGameSize
		,MediumGameSize =  @MediumGameSize
		,HardGameSize =  @HardGameSize
		,EnableMediumDifficulty =  @EnableMediumDifficulty
		,EnableHardDifficulty =  @EnableHardDifficulty
		,LastModDate =  @LastModDate
		,LastModUser =  @LastModUser
		,AddedDate =  @AddedDate
		,AddedUser =  @AddedUser

	Where MAGID = @MAGID




GO

/****** Object:  StoredProcedure [dbo].[app_MGMatchingGameTiles_Delete]    Script Date: 12/05/2014 14:24:04 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO

 /****** Object:  StoredProcedure [dbo].[app_MGMatchingGameTiles_Delete]    Script Date: 03/10/2014 14:43:22 ******/






--Create the Delete Proc
CREATE PROCEDURE [dbo].[app_MGMatchingGameTiles_Delete]
@MAGTID int 
AS
   Delete from [MGMatchingGameTiles] Where MAGTID = @MAGTID




GO

/****** Object:  StoredProcedure [dbo].[app_MGMatchingGameTiles_GetAll]    Script Date: 12/05/2014 14:24:04 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO

 /****** Object:  StoredProcedure [dbo].[app_MGMatchingGameTiles_GetAll]    Script Date: 03/10/2014 14:43:22 ******/








CREATE PROCEDURE [dbo].[app_MGMatchingGameTiles_GetAll]
@MGID int = 0
AS 
   Select * from MGMatchingGameTiles Where MGID = @MGID 





GO

/****** Object:  StoredProcedure [dbo].[app_MGMatchingGameTiles_GetByID]    Script Date: 12/05/2014 14:24:04 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO

 /****** Object:  StoredProcedure [dbo].[app_MGMatchingGameTiles_GetByID]    Script Date: 03/10/2014 14:43:22 ******/






--Create the Select Proc
CREATE PROCEDURE [dbo].[app_MGMatchingGameTiles_GetByID]
@MAGTID int 
AS
   Select * from [MGMatchingGameTiles] Where MAGTID = @MAGTID




GO

/****** Object:  StoredProcedure [dbo].[app_MGMatchingGameTiles_Insert]    Script Date: 12/05/2014 14:24:04 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO

 /****** Object:  StoredProcedure [dbo].[app_MGMatchingGameTiles_Insert]    Script Date: 03/10/2014 14:43:22 ******/






--Create the Insert Proc
CREATE PROCEDURE [dbo].[app_MGMatchingGameTiles_Insert] (
	 @MAGID int 
	,@MGID int 
	,@Tile1UseMedium bit 
	,@Tile1UseHard bit 
	,@Tile2UseMedium bit 
	,@Tile2UseHard bit 
	,@Tile3UseMedium bit 
	,@Tile3UseHard bit 
	,@LastModDate datetime 
	,@LastModUser varchar (50)
	,@AddedDate datetime 
	,@AddedUser varchar (50)
	,@MAGTID int output 
) AS
Begin
	Insert into MGMatchingGameTiles
		(MAGID
		,MGID
		,Tile1UseMedium
		,Tile1UseHard
		,Tile2UseMedium
		,Tile2UseHard
		,Tile3UseMedium
		,Tile3UseHard
		,LastModDate
		,LastModUser
		,AddedDate
		,AddedUser
)
	VALUES
		(@MAGID
		,@MGID
		,@Tile1UseMedium
		,@Tile1UseHard
		,@Tile2UseMedium
		,@Tile2UseHard
		,@Tile3UseMedium
		,@Tile3UseHard
		,@LastModDate
		,@LastModUser
		,@AddedDate
		,@AddedUser
)
	Select @MAGTID = SCOPE_IDENTITY()
END




GO

/****** Object:  StoredProcedure [dbo].[app_MGMatchingGameTiles_Update]    Script Date: 12/05/2014 14:24:04 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO

 /****** Object:  StoredProcedure [dbo].[app_MGMatchingGameTiles_Update]    Script Date: 03/10/2014 14:43:22 ******/






--Create the Update Proc
CREATE PROCEDURE [dbo].[app_MGMatchingGameTiles_Update] (
	 @MAGTID int 
	,@MAGID int 
	,@MGID int 
	,@Tile1UseMedium bit 
	,@Tile1UseHard bit 
	,@Tile2UseMedium bit 
	,@Tile2UseHard bit 
	,@Tile3UseMedium bit 
	,@Tile3UseHard bit 
	,@LastModDate datetime 
	,@LastModUser varchar (50)
	,@AddedDate datetime 
	,@AddedUser varchar (50)

) AS
	Update MGMatchingGameTiles
	Set 
		MAGID =  @MAGID
		,MGID =  @MGID
		,Tile1UseMedium =  @Tile1UseMedium
		,Tile1UseHard =  @Tile1UseHard
		,Tile2UseMedium =  @Tile2UseMedium
		,Tile2UseHard =  @Tile2UseHard
		,Tile3UseMedium =  @Tile3UseMedium
		,Tile3UseHard =  @Tile3UseHard
		,LastModDate =  @LastModDate
		,LastModUser =  @LastModUser
		,AddedDate =  @AddedDate
		,AddedUser =  @AddedUser

	Where MAGTID = @MAGTID




GO

/****** Object:  StoredProcedure [dbo].[app_MGMixAndMatch_Delete]    Script Date: 12/05/2014 14:24:04 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO

 /****** Object:  StoredProcedure [dbo].[app_MGMixAndMatch_Delete]    Script Date: 03/10/2014 14:43:22 ******/






--Create the Delete Proc
CREATE PROCEDURE [dbo].[app_MGMixAndMatch_Delete]
@MMID int 
AS
   Delete from [MGMixAndMatch] Where MMID = @MMID




GO

/****** Object:  StoredProcedure [dbo].[app_MGMixAndMatch_GetAll]    Script Date: 12/05/2014 14:24:04 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO

 /****** Object:  StoredProcedure [dbo].[app_MGMixAndMatch_GetAll]    Script Date: 03/10/2014 14:43:22 ******/






--Create the Select Proc
CREATE PROCEDURE [dbo].[app_MGMixAndMatch_GetAll]
AS
   Select * from [MGMixAndMatch]




GO

/****** Object:  StoredProcedure [dbo].[app_MGMixAndMatch_GetByID]    Script Date: 12/05/2014 14:24:04 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO

 /****** Object:  StoredProcedure [dbo].[app_MGMixAndMatch_GetByID]    Script Date: 03/10/2014 14:43:22 ******/






--Create the Select Proc
CREATE PROCEDURE [dbo].[app_MGMixAndMatch_GetByID]
@MMID int 
AS
   Select * from [MGMixAndMatch] Where MMID = @MMID




GO

/****** Object:  StoredProcedure [dbo].[app_MGMixAndMatch_GetByIDWithParent]    Script Date: 12/05/2014 14:24:04 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO


CREATE PROCEDURE [dbo].[app_MGMixAndMatch_GetByIDWithParent]
@MGID int 
AS
   Select 
	mm.*, 
	MiniGameTypeName, AdminName, GameName, isActive,NumberPoints, AwardedBadgeID, Acknowledgements
	from MGMixAndMatch  mm 
		inner join dbo.Minigame g on mm.MGID = g.MGID
	Where g.MGID = @MGID


GO

/****** Object:  StoredProcedure [dbo].[app_MGMixAndMatch_GetByMGID]    Script Date: 12/05/2014 14:24:04 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO

 /****** Object:  StoredProcedure [dbo].[app_MGMixAndMatch_GetByMGID]    Script Date: 03/10/2014 14:43:22 ******/






--Create the Select Proc
CREATE PROCEDURE [dbo].[app_MGMixAndMatch_GetByMGID]
@MGID int 
AS
   Select * from [MGMixAndMatch] Where MGID = @MGID




GO

/****** Object:  StoredProcedure [dbo].[app_MGMixAndMatch_Insert]    Script Date: 12/05/2014 14:24:04 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO

 /****** Object:  StoredProcedure [dbo].[app_MGMixAndMatch_Insert]    Script Date: 03/10/2014 14:43:22 ******/






--Create the Insert Proc
CREATE PROCEDURE [dbo].[app_MGMixAndMatch_Insert] (
	 @MGID int 
	,@CorrectRoundsToWinCount int 
	,@EnableMediumDifficulty bit 
	,@EnableHardDifficulty bit 
	,@LastModDate datetime 
	,@LastModUser varchar (50)
	,@AddedDate datetime 
	,@AddedUser varchar (50)
	,@MMID int output 
) AS
Begin
	Insert into MGMixAndMatch
		(MGID
		,CorrectRoundsToWinCount
		,EnableMediumDifficulty
		,EnableHardDifficulty
		,LastModDate
		,LastModUser
		,AddedDate
		,AddedUser
)
	VALUES
		(@MGID
		,@CorrectRoundsToWinCount
		,@EnableMediumDifficulty
		,@EnableHardDifficulty
		,@LastModDate
		,@LastModUser
		,@AddedDate
		,@AddedUser
)
	Select @MMID = SCOPE_IDENTITY()
END




GO

/****** Object:  StoredProcedure [dbo].[app_MGMixAndMatch_Update]    Script Date: 12/05/2014 14:24:04 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO

 /****** Object:  StoredProcedure [dbo].[app_MGMixAndMatch_Update]    Script Date: 03/10/2014 14:43:22 ******/






--Create the Update Proc
CREATE PROCEDURE [dbo].[app_MGMixAndMatch_Update] (
	 @MMID int 
	,@MGID int 
	,@CorrectRoundsToWinCount int 
	,@EnableMediumDifficulty bit 
	,@EnableHardDifficulty bit 
	,@LastModDate datetime 
	,@LastModUser varchar (50)
	,@AddedDate datetime 
	,@AddedUser varchar (50)

) AS
	Update MGMixAndMatch
	Set 
		MGID =  @MGID
		,CorrectRoundsToWinCount =  @CorrectRoundsToWinCount
		,EnableMediumDifficulty =  @EnableMediumDifficulty
		,EnableHardDifficulty =  @EnableHardDifficulty
		,LastModDate =  @LastModDate
		,LastModUser =  @LastModUser
		,AddedDate =  @AddedDate
		,AddedUser =  @AddedUser

	Where MMID = @MMID




GO

/****** Object:  StoredProcedure [dbo].[app_MGMixAndMatchItems_Delete]    Script Date: 12/05/2014 14:24:04 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO

 /****** Object:  StoredProcedure [dbo].[app_MGMixAndMatchItems_Delete]    Script Date: 03/10/2014 14:43:22 ******/






--Create the Delete Proc
CREATE PROCEDURE [dbo].[app_MGMixAndMatchItems_Delete]
@MMIID int 
AS
   Delete from [MGMixAndMatchItems] Where MMIID = @MMIID




GO

/****** Object:  StoredProcedure [dbo].[app_MGMixAndMatchItems_GetAll]    Script Date: 12/05/2014 14:24:04 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO

 /****** Object:  StoredProcedure [dbo].[app_MGMixAndMatchItems_GetAll]    Script Date: 03/10/2014 14:43:22 ******/






--Create the Select Proc
CREATE PROCEDURE [dbo].[app_MGMixAndMatchItems_GetAll]
@MGID int = 0
AS 
   Select * from [MGMixAndMatchItems] Where MGID = @MGID 




GO

/****** Object:  StoredProcedure [dbo].[app_MGMixAndMatchItems_GetByID]    Script Date: 12/05/2014 14:24:04 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO

 /****** Object:  StoredProcedure [dbo].[app_MGMixAndMatchItems_GetByID]    Script Date: 03/10/2014 14:43:22 ******/






--Create the Select Proc
CREATE PROCEDURE [dbo].[app_MGMixAndMatchItems_GetByID]
@MMIID int 
AS
   Select * from [MGMixAndMatchItems] Where MMIID = @MMIID




GO

/****** Object:  StoredProcedure [dbo].[app_MGMixAndMatchItems_GetRandom3]    Script Date: 12/05/2014 14:24:04 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO

 /****** Object:  StoredProcedure [dbo].[app_MGMixAndMatchItems_GetRandom3]    Script Date: 03/10/2014 14:43:22 ******/







create PROCEDURE [dbo].[app_MGMixAndMatchItems_GetRandom3]
@MMID int 
AS
	select top 3	
		NEWID() as id, *
	from  dbo.MGMixAndMatchItems
		Where MMID = @MMID
	order by id




GO

/****** Object:  StoredProcedure [dbo].[app_MGMixAndMatchItems_Insert]    Script Date: 12/05/2014 14:24:04 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO

 /****** Object:  StoredProcedure [dbo].[app_MGMixAndMatchItems_Insert]    Script Date: 03/10/2014 14:43:22 ******/






--Create the Insert Proc
CREATE PROCEDURE [dbo].[app_MGMixAndMatchItems_Insert] (
	 @MMID int 
	,@MGID int 
	,@ItemImage varchar (150)
	,@EasyLabel varchar (150)
	,@MediumLabel varchar (150)
	,@HardLabel varchar (150)
	,@AudioEasy varchar (150)
	,@AudioMedium varchar (150)
	,@AudioHard varchar (150)
	,@LastModDate datetime 
	,@LastModUser varchar (50)
	,@AddedDate datetime 
	,@AddedUser varchar (50)
	,@MMIID int output 
) AS
Begin
	Insert into MGMixAndMatchItems
		(MMID
		,MGID
		,ItemImage
		,EasyLabel
		,MediumLabel
		,HardLabel
		,AudioEasy
		,AudioMedium
		,AudioHard
		,LastModDate
		,LastModUser
		,AddedDate
		,AddedUser
)
	VALUES
		(@MMID
		,@MGID
		,@ItemImage
		,@EasyLabel
		,@MediumLabel
		,@HardLabel
		,@AudioEasy
		,@AudioMedium
		,@AudioHard
		,@LastModDate
		,@LastModUser
		,@AddedDate
		,@AddedUser
)
	Select @MMIID = SCOPE_IDENTITY()
END




GO

/****** Object:  StoredProcedure [dbo].[app_MGMixAndMatchItems_Update]    Script Date: 12/05/2014 14:24:04 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO

 /****** Object:  StoredProcedure [dbo].[app_MGMixAndMatchItems_Update]    Script Date: 03/10/2014 14:43:22 ******/






--Create the Update Proc
CREATE PROCEDURE [dbo].[app_MGMixAndMatchItems_Update] (
	 @MMIID int 
	,@MMID int 
	,@MGID int 
	,@ItemImage varchar (150)
	,@EasyLabel varchar (150)
	,@MediumLabel varchar (150)
	,@HardLabel varchar (150)
	,@AudioEasy varchar (150)
	,@AudioMedium varchar (150)
	,@AudioHard varchar (150)
	,@LastModDate datetime 
	,@LastModUser varchar (50)
	,@AddedDate datetime 
	,@AddedUser varchar (50)

) AS
	Update MGMixAndMatchItems
	Set 
		MMID =  @MMID
		,MGID =  @MGID
		,ItemImage =  @ItemImage
		,EasyLabel =  @EasyLabel
		,MediumLabel =  @MediumLabel
		,HardLabel =  @HardLabel
		,AudioEasy =  @AudioEasy
		,AudioMedium =  @AudioMedium
		,AudioHard =  @AudioHard
		,LastModDate =  @LastModDate
		,LastModUser =  @LastModUser
		,AddedDate =  @AddedDate
		,AddedUser =  @AddedUser

	Where MMIID = @MMIID




GO

/****** Object:  StoredProcedure [dbo].[app_MGOnlineBook_Delete]    Script Date: 12/05/2014 14:24:04 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO


--Create the Delete Proc
CREATE PROCEDURE [dbo].[app_MGOnlineBook_Delete]
@OBID int 
AS
   Delete from [MGOnlineBook] Where OBID = @OBID


GO

/****** Object:  StoredProcedure [dbo].[app_MGOnlineBook_GetAll]    Script Date: 12/05/2014 14:24:04 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO


--Create the Select Proc
CREATE PROCEDURE [dbo].[app_MGOnlineBook_GetAll]
AS
   Select * from [MGOnlineBook]


GO

/****** Object:  StoredProcedure [dbo].[app_MGOnlineBook_GetByID]    Script Date: 12/05/2014 14:24:04 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO


--Create the Select Proc
CREATE PROCEDURE [dbo].[app_MGOnlineBook_GetByID]
@OBID int 
AS
   Select * from [MGOnlineBook] Where OBID = @OBID


GO

/****** Object:  StoredProcedure [dbo].[app_MGOnlineBook_GetByIDWithParent]    Script Date: 12/05/2014 14:24:04 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO


CREATE PROCEDURE [dbo].[app_MGOnlineBook_GetByIDWithParent]
@MGID int 
AS
   Select 
	ob.*, 
	MiniGameTypeName, AdminName, GameName, isActive,NumberPoints, AwardedBadgeID, Acknowledgements
	from [MGOnlineBook] ob 
		inner join dbo.Minigame g on ob.MGID = g.MGID
	Where g.MGID = @MGID


GO

/****** Object:  StoredProcedure [dbo].[app_MGOnlineBook_GetByMGID]    Script Date: 12/05/2014 14:24:04 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO



create PROCEDURE [dbo].[app_MGOnlineBook_GetByMGID]
@MGID int 
AS
   Select * from [MGOnlineBook] Where MGID = @MGID

GO

/****** Object:  StoredProcedure [dbo].[app_MGOnlineBook_Insert]    Script Date: 12/05/2014 14:24:04 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO


--Create the Insert Proc
CREATE PROCEDURE [dbo].[app_MGOnlineBook_Insert] (
	 @MGID int 
	,@EnableMediumDifficulty bit 
	,@EnableHardDifficulty bit 
	,@LastModDate datetime 
	,@LastModUser varchar (50)
	,@AddedDate datetime 
	,@AddedUser varchar (50)
	,@OBID int output 
) AS
Begin
	Insert into MGOnlineBook
		(MGID
		,EnableMediumDifficulty
		,EnableHardDifficulty
		,LastModDate
		,LastModUser
		,AddedDate
		,AddedUser
)
	VALUES
		(@MGID
		,@EnableMediumDifficulty
		,@EnableHardDifficulty
		,@LastModDate
		,@LastModUser
		,@AddedDate
		,@AddedUser
)
	Select @OBID = SCOPE_IDENTITY()
END


GO

/****** Object:  StoredProcedure [dbo].[app_MGOnlineBook_Update]    Script Date: 12/05/2014 14:24:05 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO


--Create the Update Proc
CREATE PROCEDURE [dbo].[app_MGOnlineBook_Update] (
	 @OBID int 
	,@MGID int 
	,@EnableMediumDifficulty bit 
	,@EnableHardDifficulty bit 
	,@LastModDate datetime 
	,@LastModUser varchar (50)
	,@AddedDate datetime 
	,@AddedUser varchar (50)

) AS
	Update MGOnlineBook
	Set 
		MGID =  @MGID
		,EnableMediumDifficulty =  @EnableMediumDifficulty
		,EnableHardDifficulty =  @EnableHardDifficulty
		,LastModDate =  @LastModDate
		,LastModUser =  @LastModUser
		,AddedDate =  @AddedDate
		,AddedUser =  @AddedUser

	Where OBID = @OBID


GO

/****** Object:  StoredProcedure [dbo].[app_MGOnlineBookPages_Delete]    Script Date: 12/05/2014 14:24:05 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO


--Create the Delete Proc
CREATE PROCEDURE [dbo].[app_MGOnlineBookPages_Delete]
@OBPGID int 
AS
  Declare @MGID int;
  Select @MGID = MGID from [MGOnlineBookPages] Where OBPGID = @OBPGID

   Delete from [MGOnlineBookPages] Where OBPGID = @OBPGID
   
   exec app_MGOnlineBookPages_Reorder @MGID


GO

/****** Object:  StoredProcedure [dbo].[app_MGOnlineBookPages_GetAll]    Script Date: 12/05/2014 14:24:05 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO


--Create the Select Proc
CREATE PROCEDURE [dbo].[app_MGOnlineBookPages_GetAll]
@MGID int = 0
AS
   Select * 
   , (Select isnull(Max(PageNumber),1) from [MGOnlineBookPages] where MGID = @MGID)  as 

MAX
	from [MGOnlineBookPages] 
   Where MGID = @MGID order by PageNumber


GO

/****** Object:  StoredProcedure [dbo].[app_MGOnlineBookPages_GetByID]    Script Date: 12/05/2014 14:24:05 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO


--Create the Select Proc
CREATE PROCEDURE [dbo].[app_MGOnlineBookPages_GetByID]
@OBPGID int 
AS
   Select * from [MGOnlineBookPages] Where OBPGID = @OBPGID order by PageNumber


GO

/****** Object:  StoredProcedure [dbo].[app_MGOnlineBookPages_GetByPage]    Script Date: 12/05/2014 14:24:05 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO


--Create the Select Proc
CREATE PROCEDURE [dbo].[app_MGOnlineBookPages_GetByPage]
@Page int
,@OBID int 
AS
   Select * from [MGOnlineBookPages] Where PageNumber = @Page and OBID = @OBID  
   


GO

/****** Object:  StoredProcedure [dbo].[app_MGOnlineBookPages_Insert]    Script Date: 12/05/2014 14:24:05 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO


--Create the Insert Proc
CREATE PROCEDURE [dbo].[app_MGOnlineBookPages_Insert] (
	 @OBID int 
	,@MGID int 
	,@PageNumber int 
	,@TextEasy text 
	,@TextMedium text 
	,@TextHard text 
	,@AudioEasy varchar (150)
	,@AudioMedium varchar (150)
	,@AudioHard varchar (150)
	,@LastModDate datetime 
	,@LastModUser varchar (50)
	,@AddedDate datetime 
	,@AddedUser varchar (50)
	,@OBPGID int output 
) AS
Begin
	Insert into MGOnlineBookPages
		(OBID
		,MGID
		,PageNumber
		,TextEasy
		,TextMedium
		,TextHard
		,AudioEasy
		,AudioMedium
		,AudioHard
		,LastModDate
		,LastModUser
		,AddedDate
		,AddedUser
)
	VALUES
		(@OBID
		,@MGID
		,(Select isnull(Max(PageNumber),0) +1 from MGOnlineBookPages where MGID 

= @MGID)
		,@TextEasy
		,@TextMedium
		,@TextHard
		,@AudioEasy
		,@AudioMedium
		,@AudioHard
		,@LastModDate
		,@LastModUser
		,@AddedDate
		,@AddedUser
)
	Select @OBPGID = SCOPE_IDENTITY()
END


GO

/****** Object:  StoredProcedure [dbo].[app_MGOnlineBookPages_MoveDn]    Script Date: 12/05/2014 14:24:05 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO




create PROCEDURE [dbo].[app_MGOnlineBookPages_MoveDn]
@OBPGID int 
AS

	Declare @CurrentRecordLocation int, @NextRecordID int, @MGID int
	Select @CurrentRecordLocation = PageNumber, @MGID = MGID from MGOnlineBookPages 

where OBPGID = @OBPGID
	exec [dbo].[app_MGOnlineBookPages_Reorder] @MGID
	if @CurrentRecordLocation < (Select MAX(PageNumber) from MGOnlineBookPages where 

MGID = @MGID)
	begin
		Select @NextRecordID = OBPGID from MGOnlineBookPages where PageNumber = 

(@CurrentRecordLocation + 1) AND MGID = @MGID
		
		update MGOnlineBookPages set PageNumber = @CurrentRecordLocation + 1
		where OBPGID = @OBPGID
	
		update MGOnlineBookPages set PageNumber = @CurrentRecordLocation 
		where OBPGID = @NextRecordID
	end




GO

/****** Object:  StoredProcedure [dbo].[app_MGOnlineBookPages_MoveUp]    Script Date: 12/05/2014 14:24:05 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO


create PROCEDURE [dbo].[app_MGOnlineBookPages_MoveUp]
@OBPGID int 
AS
	Declare @CurrentRecordLocation int, @PreviousRecordID int, @MGID int
	Select @CurrentRecordLocation = PageNumber, @MGID = MGID from MGOnlineBookPages 

where OBPGID = @OBPGID
	exec [dbo].[app_MGOnlineBookPages_Reorder] @MGID
	if @CurrentRecordLocation > 1
	begin
		Select @PreviousRecordID = OBPGID from MGOnlineBookPages where 

PageNumber = (@CurrentRecordLocation - 1) AND MGID = @MGID
		
		update MGOnlineBookPages set PageNumber = @CurrentRecordLocation - 1
		where OBPGID = @OBPGID
	
		update MGOnlineBookPages set PageNumber = @CurrentRecordLocation 
		where OBPGID = @PreviousRecordID
	end



GO

/****** Object:  StoredProcedure [dbo].[app_MGOnlineBookPages_Reorder]    Script Date: 12/05/2014 14:24:05 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO


create Procedure [dbo].[app_MGOnlineBookPages_Reorder]
@MGID int 
AS
	UPDATE MGOnlineBookPages 
	SET PageNumber = rowNumber 
	FROM MGOnlineBookPages
		INNER JOIN 
		(SELECT OBPGID, PageNumber, row_number() OVER (ORDER BY PageNumber Asc) as rowNumber
			FROM MGOnlineBookPages where MGID = @MGID) drRowNumbers 
			ON drRowNumbers.OBPGID = MGOnlineBookPages.OBPGID and MGID = @MGID
	where MGID = @MGID
GO

/****** Object:  StoredProcedure [dbo].[app_MGOnlineBookPages_Update]    Script Date: 12/05/2014 14:24:05 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO


--Create the Update Proc
CREATE PROCEDURE [dbo].[app_MGOnlineBookPages_Update] (
	 @OBPGID int 
	,@OBID int 
	,@MGID int 
	,@PageNumber int 
	,@TextEasy text 
	,@TextMedium text 
	,@TextHard text 
	,@AudioEasy varchar (150)
	,@AudioMedium varchar (150)
	,@AudioHard varchar (150)
	,@LastModDate datetime 
	,@LastModUser varchar (50)
	,@AddedDate datetime 
	,@AddedUser varchar (50)

) AS
	Update MGOnlineBookPages
	Set 
		OBID =  @OBID
		,MGID =  @MGID
		,PageNumber =  @PageNumber
		,TextEasy =  @TextEasy
		,TextMedium =  @TextMedium
		,TextHard =  @TextHard
		,AudioEasy =  @AudioEasy
		,AudioMedium =  @AudioMedium
		,AudioHard =  @AudioHard
		,LastModDate =  @LastModDate
		,LastModUser =  @LastModUser
		,AddedDate =  @AddedDate
		,AddedUser =  @AddedUser

	Where OBPGID = @OBPGID


GO

/****** Object:  StoredProcedure [dbo].[app_MGWordMatch_Delete]    Script Date: 12/05/2014 14:24:05 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO

 /****** Object:  StoredProcedure [dbo].[app_MGWordMatch_Delete]    Script Date: 03/10/2014 14:43:22 ******/






--Create the Delete Proc
CREATE PROCEDURE [dbo].[app_MGWordMatch_Delete]
@WMID int 
AS
   Delete from [MGWordMatch] Where WMID = @WMID




GO

/****** Object:  StoredProcedure [dbo].[app_MGWordMatch_GetAll]    Script Date: 12/05/2014 14:24:05 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO

 /****** Object:  StoredProcedure [dbo].[app_MGWordMatch_GetAll]    Script Date: 03/10/2014 14:43:22 ******/






--Create the Select Proc
CREATE PROCEDURE [dbo].[app_MGWordMatch_GetAll]
AS
   Select * from [MGWordMatch]




GO

/****** Object:  StoredProcedure [dbo].[app_MGWordMatch_GetByID]    Script Date: 12/05/2014 14:24:05 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO

 /****** Object:  StoredProcedure [dbo].[app_MGWordMatch_GetByID]    Script Date: 03/10/2014 14:43:22 ******/






--Create the Select Proc
CREATE PROCEDURE [dbo].[app_MGWordMatch_GetByID]
@WMID int 
AS
   Select * from [MGWordMatch] Where WMID = @WMID




GO

/****** Object:  StoredProcedure [dbo].[app_MGWordMatch_GetByIDWithParent]    Script Date: 12/05/2014 14:24:05 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO



CREATE PROCEDURE [dbo].[app_MGWordMatch_GetByIDWithParent]
@MGID int 
AS
   Select 
	mm.*, 
	MiniGameTypeName, AdminName, GameName, isActive,NumberPoints, AwardedBadgeID, Acknowledgements
	from MGWordMatch  mm 
		inner join dbo.Minigame g on mm.MGID = g.MGID
	Where g.MGID = @MGID


GO

/****** Object:  StoredProcedure [dbo].[app_MGWordMatch_GetByMGID]    Script Date: 12/05/2014 14:24:05 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO

 /****** Object:  StoredProcedure [dbo].[app_MGWordMatch_GetByMGID]    Script Date: 03/10/2014 14:43:22 ******/






--Create the Select Proc
create PROCEDURE [dbo].[app_MGWordMatch_GetByMGID]
@MGID int 
AS
   Select * from [MGWordMatch] Where MGID = @MGID




GO

/****** Object:  StoredProcedure [dbo].[app_MGWordMatch_GetRandomX]    Script Date: 12/05/2014 14:24:05 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO

 /****** Object:  StoredProcedure [dbo].[app_MGWordMatch_GetRandomX]    Script Date: 03/10/2014 14:43:22 ******/








CREATE PROCEDURE [dbo].[app_MGWordMatch_GetRandomX]
 @WMID int
,@Num int = 3
AS

declare @SQL varchar(8000)

select @SQL = 
	'select top ' + convert(varchar,@Num) + ' NEWID() as id, * from  dbo.MGWordMatchItems Where WMID = ' + convert(varchar,@WMID) + '  order by id'
	
	
EXEC(@SQL)




GO

/****** Object:  StoredProcedure [dbo].[app_MGWordMatch_Insert]    Script Date: 12/05/2014 14:24:05 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO

 /****** Object:  StoredProcedure [dbo].[app_MGWordMatch_Insert]    Script Date: 03/10/2014 14:43:22 ******/






--Create the Insert Proc
CREATE PROCEDURE [dbo].[app_MGWordMatch_Insert] (
	 @MGID int 
	,@CorrectRoundsToWinCount int 
	,@NumOptionsToChooseFrom int 
	,@EnableMediumDifficulty bit 
	,@EnableHardDifficulty bit 
	,@LastModDate datetime 
	,@LastModUser varchar (50)
	,@AddedDate datetime 
	,@AddedUser varchar (50)
	,@WMID int output 
) AS
Begin
	Insert into MGWordMatch
		(MGID
		,CorrectRoundsToWinCount
		,NumOptionsToChooseFrom
		,EnableMediumDifficulty
		,EnableHardDifficulty
		,LastModDate
		,LastModUser
		,AddedDate
		,AddedUser
)
	VALUES
		(@MGID
		,@CorrectRoundsToWinCount
		,@NumOptionsToChooseFrom
		,@EnableMediumDifficulty
		,@EnableHardDifficulty
		,@LastModDate
		,@LastModUser
		,@AddedDate
		,@AddedUser
)
	Select @WMID = SCOPE_IDENTITY()
END




GO

/****** Object:  StoredProcedure [dbo].[app_MGWordMatch_Update]    Script Date: 12/05/2014 14:24:05 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO

 /****** Object:  StoredProcedure [dbo].[app_MGWordMatch_Update]    Script Date: 03/10/2014 14:43:22 ******/






--Create the Update Proc
CREATE PROCEDURE [dbo].[app_MGWordMatch_Update] (
	 @WMID int 
	,@MGID int 
	,@CorrectRoundsToWinCount int 
	,@NumOptionsToChooseFrom int 
	,@EnableMediumDifficulty bit 
	,@EnableHardDifficulty bit 
	,@LastModDate datetime 
	,@LastModUser varchar (50)
	,@AddedDate datetime 
	,@AddedUser varchar (50)

) AS
	Update MGWordMatch
	Set 
		MGID =  @MGID
		,CorrectRoundsToWinCount =  @CorrectRoundsToWinCount
		,NumOptionsToChooseFrom =  @NumOptionsToChooseFrom
		,EnableMediumDifficulty =  @EnableMediumDifficulty
		,EnableHardDifficulty =  @EnableHardDifficulty
		,LastModDate =  @LastModDate
		,LastModUser =  @LastModUser
		,AddedDate =  @AddedDate
		,AddedUser =  @AddedUser

	Where WMID = @WMID




GO

/****** Object:  StoredProcedure [dbo].[app_MGWordMatchItems_Delete]    Script Date: 12/05/2014 14:24:05 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO

 /****** Object:  StoredProcedure [dbo].[app_MGWordMatchItems_Delete]    Script Date: 03/10/2014 14:43:22 ******/






--Create the Delete Proc
CREATE PROCEDURE [dbo].[app_MGWordMatchItems_Delete]
@WMIID int 
AS
   Delete from [MGWordMatchItems] Where WMIID = @WMIID




GO

/****** Object:  StoredProcedure [dbo].[app_MGWordMatchItems_GetAll]    Script Date: 12/05/2014 14:24:05 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO

 /****** Object:  StoredProcedure [dbo].[app_MGWordMatchItems_GetAll]    Script Date: 03/10/2014 14:43:22 ******/






--Create the Select Proc
CREATE PROCEDURE [dbo].[app_MGWordMatchItems_GetAll]
@MGID int
AS
   Select * from [MGWordMatchItems]
	where MGID = @MGID




GO

/****** Object:  StoredProcedure [dbo].[app_MGWordMatchItems_GetByID]    Script Date: 12/05/2014 14:24:05 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO

 /****** Object:  StoredProcedure [dbo].[app_MGWordMatchItems_GetByID]    Script Date: 03/10/2014 14:43:22 ******/






--Create the Select Proc
CREATE PROCEDURE [dbo].[app_MGWordMatchItems_GetByID]
@WMIID int 
AS
   Select * from [MGWordMatchItems] Where WMIID = @WMIID




GO

/****** Object:  StoredProcedure [dbo].[app_MGWordMatchItems_Insert]    Script Date: 12/05/2014 14:24:05 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO

 /****** Object:  StoredProcedure [dbo].[app_MGWordMatchItems_Insert]    Script Date: 03/10/2014 14:43:22 ******/






--Create the Insert Proc
CREATE PROCEDURE [dbo].[app_MGWordMatchItems_Insert] (
	 @WMID int 
	,@MGID int 
	,@ItemImage varchar (150)
	,@EasyLabel varchar (150)
	,@MediumLabel varchar (150)
	,@HardLabel varchar (150)
	,@AudioEasy varchar (150)
	,@AudioMedium varchar (150)
	,@AudioHard varchar (150)
	,@LastModDate datetime 
	,@LastModUser varchar (50)
	,@AddedDate datetime 
	,@AddedUser varchar (50)
	,@WMIID int output 
) AS
Begin
	Insert into MGWordMatchItems
		(WMID
		,MGID
		,ItemImage
		,EasyLabel
		,MediumLabel
		,HardLabel
		,AudioEasy
		,AudioMedium
		,AudioHard
		,LastModDate
		,LastModUser
		,AddedDate
		,AddedUser
)
	VALUES
		(@WMID
		,@MGID
		,@ItemImage
		,@EasyLabel
		,@MediumLabel
		,@HardLabel
		,@AudioEasy
		,@AudioMedium
		,@AudioHard
		,@LastModDate
		,@LastModUser
		,@AddedDate
		,@AddedUser
)
	Select @WMIID = SCOPE_IDENTITY()
END




GO

/****** Object:  StoredProcedure [dbo].[app_MGWordMatchItems_Update]    Script Date: 12/05/2014 14:24:05 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO

 /****** Object:  StoredProcedure [dbo].[app_MGWordMatchItems_Update]    Script Date: 03/10/2014 14:43:22 ******/






--Create the Update Proc
CREATE PROCEDURE [dbo].[app_MGWordMatchItems_Update] (
	 @WMIID int 
	,@WMID int 
	,@MGID int 
	,@ItemImage varchar (150)
	,@EasyLabel varchar (150)
	,@MediumLabel varchar (150)
	,@HardLabel varchar (150)
	,@AudioEasy varchar (150)
	,@AudioMedium varchar (150)
	,@AudioHard varchar (150)
	,@LastModDate datetime 
	,@LastModUser varchar (50)
	,@AddedDate datetime 
	,@AddedUser varchar (50)

) AS
	Update MGWordMatchItems
	Set 
		WMID =  @WMID
		,MGID =  @MGID
		,ItemImage =  @ItemImage
		,EasyLabel =  @EasyLabel
		,MediumLabel =  @MediumLabel
		,HardLabel =  @HardLabel
		,AudioEasy =  @AudioEasy
		,AudioMedium =  @AudioMedium
		,AudioHard =  @AudioHard
		,LastModDate =  @LastModDate
		,LastModUser =  @LastModUser
		,AddedDate =  @AddedDate
		,AddedUser =  @AddedUser

	Where WMIID = @WMIID




GO

/****** Object:  StoredProcedure [dbo].[app_Minigame_Delete]    Script Date: 12/05/2014 14:24:05 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO


--Create the Delete Proc
CREATE PROCEDURE [dbo].[app_Minigame_Delete]
@MGID int 
AS

	delete from dbo.MGOnlineBookPages  Where MGID = @MGID
	delete from dbo.MGOnlineBook  Where MGID = @MGID
	
	delete from dbo.MGMixAndMatchItems  Where MGID = @MGID
	delete from dbo.MGMixAndMatch  Where MGID = @MGID
	
	delete from dbo.MGCodeBreakerKey  Where MGID = @MGID
	delete from dbo.MGCodeBreaker  Where MGID = @MGID
	
	delete from dbo.MGMatchingGameTiles  Where MGID = @MGID
	delete from dbo.MGMatchingGame  Where MGID = @MGID
	
	delete from dbo.MGHiddenPicBk  Where MGID = @MGID
	delete from dbo.MGHiddenPic  Where MGID = @MGID
	
	delete from dbo.MGChooseAdvSlides  Where MGID = @MGID
	delete from dbo.MGChooseAdv  Where MGID = @MGID
	
	delete from dbo.MGWordMatchItems  Where MGID = @MGID
	delete from dbo.MGWordMatch  Where MGID = @MGID
	
Delete from [Minigame] Where MGID = @MGID


GO

/****** Object:  StoredProcedure [dbo].[app_Minigame_GetAll]    Script Date: 12/05/2014 14:24:05 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO


--Create the Select Proc
CREATE PROCEDURE [dbo].[app_Minigame_GetAll]
@TenID int = null
AS
   Select * from [Minigame] where (TenID = @TenID or @TenID is null)


GO

/****** Object:  StoredProcedure [dbo].[app_Minigame_GetByID]    Script Date: 12/05/2014 14:24:05 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO


--Create the Select Proc
CREATE PROCEDURE [dbo].[app_Minigame_GetByID]
@MGID int 
AS
   Select * from [Minigame] Where MGID = @MGID


GO

/****** Object:  StoredProcedure [dbo].[app_Minigame_GetList]    Script Date: 12/05/2014 14:24:05 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO

CREATE PROCEDURE [dbo].[app_Minigame_GetList]
@IDList varchar(1000) = ''
as
begin

declare  @tmp as table (Num int identity, Value int) 

insert into @tmp (value)
select  Value
from [dbo].[fnSplitBigInt](@IDList)

--select * from @tmp

select m.* 
	from Minigame m join @tmp t
		on m.MGID = t.Value
order by Num desc

end

GO

/****** Object:  StoredProcedure [dbo].[app_Minigame_Insert]    Script Date: 12/05/2014 14:24:05 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO


CREATE PROCEDURE [dbo].[app_Minigame_Insert] (
	 @MiniGameType int 
	,@MiniGameTypeName varchar (50)
	,@AdminName varchar (50)
	,@GameName varchar (50)
	,@isActive bit 
	,@NumberPoints int 
	,@AwardedBadgeID int 
	,@Acknowledgements text
	,@LastModDate datetime 
	,@LastModUser varchar (50)
	,@AddedDate datetime 
	,@AddedUser varchar (50)
	,@TenID int = 0
,@FldInt1 int = 0
,@FldInt2 int = 0
,@FldInt3 int = 0
,@FldBit1 bit = 0
,@FldBit2 bit = 0
,@FldBit3 bit = 0
,@FldText1 text = ''
,@FldText2 text = ''
,@FldText3 text = ''
	,@MGID int output 
) AS
Begin
	Insert into Minigame
		(MiniGameType
		,MiniGameTypeName
		,AdminName
		,GameName
		,isActive
		,NumberPoints
		,AwardedBadgeID, Acknowledgements
		,LastModDate
		,LastModUser
		,AddedDate
		,AddedUser
		,TenID, FldInt1, FldInt2, FldInt3, FldBit1, FldBit2, FldBit3, FldText1, FldText2, FldText3
)
	VALUES
		(@MiniGameType
		,@MiniGameTypeName
		,@AdminName
		,@GameName
		,@isActive
		,@NumberPoints
		,@AwardedBadgeID,@Acknowledgements
		,@LastModDate
		,@LastModUser
		,@AddedDate
		,@AddedUser
		,@TenID, @FldInt1, @FldInt2, @FldInt3, @FldBit1, @FldBit2, @FldBit3, @FldText1, @FldText2, @FldText3		
)
	Select @MGID = SCOPE_IDENTITY()
END


GO

/****** Object:  StoredProcedure [dbo].[app_Minigame_Update]    Script Date: 12/05/2014 14:24:05 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO



CREATE PROCEDURE [dbo].[app_Minigame_Update] (
	 @MGID int 
	,@MiniGameType int 
	,@MiniGameTypeName varchar (50)
	,@AdminName varchar (50)
	,@GameName varchar (50)
	,@isActive bit 
	,@NumberPoints int 
	,@AwardedBadgeID int 
	,@Acknowledgements text
	,@LastModDate datetime 
	,@LastModUser varchar (50)
	,@AddedDate datetime 
	,@AddedUser varchar (50)
,@TenID int = 0
,@FldInt1 int = 0
,@FldInt2 int = 0
,@FldInt3 int = 0
,@FldBit1 bit = 0
,@FldBit2 bit = 0
,@FldBit3 bit = 0
,@FldText1 text = ''
,@FldText2 text = ''
,@FldText3 text = ''
) AS
	Update Minigame
	Set 
		MiniGameType =  @MiniGameType
		,MiniGameTypeName =  @MiniGameTypeName
		,AdminName =  @AdminName
		,GameName =  @GameName
		,isActive =  @isActive
		,NumberPoints =  @NumberPoints
		,AwardedBadgeID =  @AwardedBadgeID
		,Acknowledgements = @Acknowledgements
		,LastModDate =  @LastModDate
		,LastModUser =  @LastModUser
		,AddedDate =  @AddedDate
		,AddedUser =  @AddedUser
,TenID = @TenID
,FldInt1 = @FldInt1 
,FldInt2 = @FldInt2
,FldInt3 = @FldInt3 
,FldBit1 = @FldBit1
,FldBit2 = @FldBit2
,FldBit3 = @FldBit3
,FldText1 = @FldText1
,FldText2 = @FldText2
,FldText3 = @FldText3
	Where MGID = @MGID AND TenID = @TenID


GO

/****** Object:  StoredProcedure [dbo].[app_Notifications_Delete]    Script Date: 12/05/2014 14:24:05 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO

 /****** Object:  StoredProcedure [dbo].[app_Notifications_Delete]    Script Date: 03/10/2014 14:43:23 ******/






--Create the Delete Proc
CREATE PROCEDURE [dbo].[app_Notifications_Delete]
@NID int 
AS
   Delete from [Notifications] Where NID = @NID




GO

/****** Object:  StoredProcedure [dbo].[app_Notifications_GetAll]    Script Date: 12/05/2014 14:24:05 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO

CREATE PROCEDURE [dbo].[app_Notifications_GetAll]
@TenID int = null
AS
   Select * from [Notifications] where (TenID = @TenID or @TenID is null) order by AddedDate desc




GO

/****** Object:  StoredProcedure [dbo].[app_Notifications_GetAllFromPatron]    Script Date: 12/05/2014 14:24:05 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO

 /****** Object:  StoredProcedure [dbo].[app_Notifications_GetAllFromPatron]    Script Date: 03/10/2014 14:43:23 ******/






--Create the Select Proc
CREATE PROCEDURE [dbo].[app_Notifications_GetAllFromPatron]
@PID int 
AS
   Select * from [Notifications] Where PID_From = @PID order by AddedDate desc




GO

/****** Object:  StoredProcedure [dbo].[app_Notifications_GetAllToPatron]    Script Date: 12/05/2014 14:24:05 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO


--Create the Select Proc
CREATE PROCEDURE [dbo].[app_Notifications_GetAllToPatron]
@PID int 
,@TenID int = null
AS
   Select n.*, isnull(p1.Username,'System') as ToUsername, isnull(p1.FirstName,'System') as ToFistName, isnull(p1.LastName,'System') as ToLastName
		, isnull(p2.Username,'System') as FromUsername, isnull(p2.FirstName,'System') as FromFistName, isnull(p2.LastName,'System') as FromLastName
   
   from [Notifications] n left outer join Patron p1
	on n.PID_To = p1.pid
		left outer join Patron p2
	on n.PID_From = p2.pid
   Where PID_To = @PID 
			AND n.TenID = @TenID
   order by AddedDate desc






GO

/****** Object:  StoredProcedure [dbo].[app_Notifications_GetAllUnreadToPatron]    Script Date: 12/05/2014 14:24:05 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO


--Create the Select Proc
CREATE PROCEDURE [dbo].[app_Notifications_GetAllUnreadToPatron]
@PID int 
,@TenID int = null
AS
   Select n.*, isnull(p1.Username,'System') as ToUsername, isnull(p1.FirstName,'System') as ToFistName, isnull(p1.LastName,'System') as ToLastName
		, isnull(p2.Username,'System') as FromUsername, isnull(p2.FirstName,'System') as FromFistName, isnull(p2.LastName,'System') as FromLastName
   
   from [Notifications] n left outer join Patron p1
	on n.PID_To = p1.pid
		left outer join Patron p2
	on n.PID_From = p2.pid
   Where PID_To = @PID 
			AND n.TenID = @TenID
			AND n.isUnread = 1
   order by AddedDate desc

GO

/****** Object:  StoredProcedure [dbo].[app_Notifications_GetByID]    Script Date: 12/05/2014 14:24:05 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO

 /****** Object:  StoredProcedure [dbo].[app_Notifications_GetByID]    Script Date: 03/10/2014 14:43:23 ******/






--Create the Select Proc
CREATE PROCEDURE [dbo].[app_Notifications_GetByID]
@NID int 
AS
   Select * from [Notifications] Where NID = @NID




GO

/****** Object:  StoredProcedure [dbo].[app_Notifications_Insert]    Script Date: 12/05/2014 14:24:05 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO

CREATE PROCEDURE [dbo].[app_Notifications_Insert] (
	 @PID_To int 
	,@PID_From int 
	,@isQuestion bit 
	,@Subject varchar (150)
	,@Body text 
	,@AddedDate datetime 
	,@AddedUser varchar (50)
	,@LastModDate datetime 
	,@LastModUser varchar (50)
,@TenID int = 0
,@FldInt1 int = 0
,@FldInt2 int = 0
,@FldInt3 int = 0
,@FldBit1 bit = 0
,@FldBit2 bit = 0
,@FldBit3 bit = 0
,@FldText1 text = ''
,@FldText2 text = ''
,@FldText3 text = ''
,@isUnread bit = 0
	,@NID int output 
) AS
Begin
	Insert into Notifications
		(PID_To
		,PID_From
		,isQuestion
		,Subject
		,Body
		,AddedDate
		,AddedUser
		,LastModDate
		,LastModUser
		,TenID, FldInt1, FldInt2, FldInt3, FldBit1, FldBit2, FldBit3, FldText1, FldText2, FldText3
		,isUnread
)
	VALUES
		(@PID_To
		,@PID_From
		,@isQuestion
		,@Subject
		,@Body
		,@AddedDate
		,@AddedUser
		,@LastModDate
		,@LastModUser
		,@TenID, @FldInt1, @FldInt2, @FldInt3, @FldBit1, @FldBit2, @FldBit3, @FldText1, @FldText2, @FldText3	
		,@isUnread	
)
	Select @NID = SCOPE_IDENTITY()
END




GO

/****** Object:  StoredProcedure [dbo].[app_Notifications_Update]    Script Date: 12/05/2014 14:24:05 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO

--Create the Update Proc
CREATE PROCEDURE [dbo].[app_Notifications_Update] (
	 @NID int 
	,@PID_To int 
	,@PID_From int 
	,@isQuestion bit 
	,@Subject varchar (150)
	,@Body text 
	,@AddedDate datetime 
	,@AddedUser varchar (50)
	,@LastModDate datetime 
	,@LastModUser varchar (50)
,@TenID int = 0
,@FldInt1 int = 0
,@FldInt2 int = 0
,@FldInt3 int = 0
,@FldBit1 bit = 0
,@FldBit2 bit = 0
,@FldBit3 bit = 0
,@FldText1 text = ''
,@FldText2 text = ''
,@FldText3 text = ''
,@isUnread bit = 0
) AS
	Update Notifications
	Set 
		PID_To =  @PID_To
		,PID_From =  @PID_From
		,isQuestion =  @isQuestion
		,Subject =  @Subject
		,Body =  @Body
		,AddedDate =  @AddedDate
		,AddedUser =  @AddedUser
		,LastModDate =  @LastModDate
		,LastModUser =  @LastModUser
,TenID = @TenID
,FldInt1 = @FldInt1 
,FldInt2 = @FldInt2
,FldInt3 = @FldInt3 
,FldBit1 = @FldBit1
,FldBit2 = @FldBit2
,FldBit3 = @FldBit3
,FldText1 = @FldText1
,FldText2 = @FldText2
,FldText3 = @FldText3
,isUnread = @isUnread
	Where NID = @NID AND TenID = @TenID




GO

/****** Object:  StoredProcedure [dbo].[app_Offer_Delete]    Script Date: 12/05/2014 14:24:05 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO

 /****** Object:  StoredProcedure [dbo].[app_Offer_Delete]    Script Date: 03/10/2014 14:43:23 ******/






--Create the Delete Proc
CREATE PROCEDURE [dbo].[app_Offer_Delete]
@OID int 
AS
   Delete from [Offer] Where OID = @OID




GO

/****** Object:  StoredProcedure [dbo].[app_Offer_GetAll]    Script Date: 12/05/2014 14:24:05 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO

--Create the Select Proc
CREATE PROCEDURE [dbo].[app_Offer_GetAll]
@TenID int = null
AS
   Select * 
   , (select AdminName from dbo.Programs p where o.ProgramId = p.PID ) as Program
   , (select Code from dbo.Code c where o.BranchId = c.CID ) as Branch
   from [Offer] o
   where (TenID = @TenID or @TenID is null)




GO

/****** Object:  StoredProcedure [dbo].[app_Offer_GetByID]    Script Date: 12/05/2014 14:24:05 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO

 /****** Object:  StoredProcedure [dbo].[app_Offer_GetByID]    Script Date: 03/10/2014 14:43:23 ******/






--Create the Select Proc
CREATE PROCEDURE [dbo].[app_Offer_GetByID]
@OID int 
AS
   Select * from [Offer] Where OID = @OID




GO

/****** Object:  StoredProcedure [dbo].[app_Offer_Insert]    Script Date: 12/05/2014 14:24:05 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO

--Create the Insert Proc
CREATE PROCEDURE [dbo].[app_Offer_Insert] (
	 @isEnabled bit 
	,@AdminName varchar (50)
	,@Title varchar (150)
	,@ExternalRedirectFlag bit 
	,@RedirectURL varchar (150)
	,@MaxImpressions int 
	,@TotalImpressions int 
	,@SerialPrefix varchar (50)
	,@ZipCode varchar (5)
	,@AgeStart int 
	,@AgeEnd int 
	,@ProgramId int 
	,@BranchId int 
	,@LastModDate datetime 
	,@LastModUser varchar (50)
	,@AddedDate datetime 
	,@AddedUser varchar (50)
	,@TenID int = 0
,@FldInt1 int = 0
,@FldInt2 int = 0
,@FldInt3 int = 0
,@FldBit1 bit = 0
,@FldBit2 bit = 0
,@FldBit3 bit = 0
,@FldText1 text = ''
,@FldText2 text = ''
,@FldText3 text = ''
	,@OID int output 
) AS
Begin
	Insert into Offer
		(isEnabled
		,AdminName
		,Title
		,ExternalRedirectFlag
		,RedirectURL
		,MaxImpressions
		,TotalImpressions
		,SerialPrefix
		,ZipCode
		,AgeStart
		,AgeEnd
		,ProgramId
		,BranchId
		,LastModDate
		,LastModUser
		,AddedDate
		,AddedUser
		,TenID, FldInt1, FldInt2, FldInt3, FldBit1, FldBit2, FldBit3, FldText1, FldText2, FldText3
)
	VALUES
		(@isEnabled
		,@AdminName
		,@Title
		,@ExternalRedirectFlag
		,@RedirectURL
		,@MaxImpressions
		,@TotalImpressions
		,@SerialPrefix
		,@ZipCode
		,@AgeStart
		,@AgeEnd
		,@ProgramId
		,@BranchId
		,@LastModDate
		,@LastModUser
		,@AddedDate
		,@AddedUser
		,@TenID, @FldInt1, @FldInt2, @FldInt3, @FldBit1, @FldBit2, @FldBit3, @FldText1, @FldText2, @FldText3		
)
	Select @OID = SCOPE_IDENTITY()
END




GO

/****** Object:  StoredProcedure [dbo].[app_Offer_Update]    Script Date: 12/05/2014 14:24:05 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO

--Create the Update Proc
CREATE PROCEDURE [dbo].[app_Offer_Update] (
	 @OID int 
	,@isEnabled bit 
	,@AdminName varchar (50)
	,@Title varchar (150)
	,@ExternalRedirectFlag bit 
	,@RedirectURL varchar (150)
	,@MaxImpressions int 
	,@TotalImpressions int 
	,@SerialPrefix varchar (50)
	,@ZipCode varchar (5)
	,@AgeStart int 
	,@AgeEnd int 
	,@ProgramId int 
	,@BranchId int 
	,@LastModDate datetime 
	,@LastModUser varchar (50)
	,@AddedDate datetime 
	,@AddedUser varchar (50)
,@TenID int = 0
,@FldInt1 int = 0
,@FldInt2 int = 0
,@FldInt3 int = 0
,@FldBit1 bit = 0
,@FldBit2 bit = 0
,@FldBit3 bit = 0
,@FldText1 text = ''
,@FldText2 text = ''
,@FldText3 text = ''
) AS
	Update Offer
	Set 
		isEnabled =  @isEnabled
		,AdminName =  @AdminName
		,Title =  @Title
		,ExternalRedirectFlag =  @ExternalRedirectFlag
		,RedirectURL =  @RedirectURL
		,MaxImpressions =  @MaxImpressions
		,TotalImpressions =  @TotalImpressions
		,SerialPrefix =  @SerialPrefix
		,ZipCode =  @ZipCode
		,AgeStart =  @AgeStart
		,AgeEnd =  @AgeEnd
		,ProgramId =  @ProgramId
		,BranchId =  @BranchId
		,LastModDate =  @LastModDate
		,LastModUser =  @LastModUser
		,AddedDate =  @AddedDate
		,AddedUser =  @AddedUser
,TenID = @TenID
,FldInt1 = @FldInt1 
,FldInt2 = @FldInt2
,FldInt3 = @FldInt3 
,FldBit1 = @FldBit1
,FldBit2 = @FldBit2
,FldBit3 = @FldBit3
,FldText1 = @FldText1
,FldText2 = @FldText2
,FldText3 = @FldText3
	Where OID = @OID AND TenID = @TenID




GO

/****** Object:  StoredProcedure [dbo].[app_Offers_GetForDisplay]    Script Date: 12/05/2014 14:24:05 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO


CREATE PROCEDURE [dbo].[app_Offers_GetForDisplay]
@PID  int = 0
,@TenID int = null
AS

--declare @PID int
--select @PID = 100000
if (@TenID is null) 
	select @TenID = TenID from Patron where PID = @PID
	
declare @Zip varchar(20)
declare @Age int, @ProgramId int, @BranchId int
select @Age = isnull(Age,0) , @Zip = isnull(ZipCode,''), @ProgramId = isnull(ProgID,0)
	, @BranchId = isnull(PrimaryLibrary,0)
from Patron
where PID = @PID
----------------------------------------------------------
--select @Age, @Zip, @Age-36, @ProgramId, @BranchId
--select  o.* 
--from Offer o
----------------------------------------------------------
	
select *
	into #temp
	from Offer
		where  TenID = @TenID AND
			Offer.isEnabled = 1  AND (Offer.MaxImpressions = 0 or Offer.MaxImpressions > Offer.TotalImpressions)

delete from #temp
where 
	AgeStart > 0 and AgeEnd = 0 and @Age < AgeStart	
delete from #temp
where 
	AgeEnd > 0 and AgeStart = 0 and @Age > AgeEnd	
delete from #temp
where 
	AgeEnd > 0 and AgeStart > 0 and (@Age < AgeStart or @Age > AgeEnd)
delete from #temp
where 
	ProgramId <> 0 and ProgramId <> @ProgramId
if @BranchId <> 0
delete from #temp
where
BranchId <> 0 and BranchId <> @BranchId
if @Zip	<> ''
delete from #temp
where
ZipCode <> '' and ZipCode <> left(@Zip,5)

select ROW_NUMBER() over (order by OID) as Rank,
*
from #temp


GO

/****** Object:  StoredProcedure [dbo].[app_Patron_CanManageSubAccount]    Script Date: 12/05/2014 14:24:05 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO

/****** Object:  StoredProcedure [dbo].[app_Patron_CanManageSubAccount]    Script Date: 03/10/2014 14:43:23 ******/






CREATE PROCEDURE [dbo].[app_Patron_CanManageSubAccount]
@MainAccount	int=0
, @SubAccount		int=0

AS
SET NOCOUNT ON
SET TRANSACTION ISOLATION LEVEL READ UNCOMMITTED

Declare   @Count int
, @UID int

SELECT
@Count = isnull(Count(*),0)
FROM
dbo.Patron
WHERE
PID = @SubAccount
AND MasterAcctPID = @MainAccount

GROUP BY PID

IF @Count = 0 OR @Count is null
BEGIN
select 0
END
ELSE
BEGIN
select 1
END
return 0





GO

/****** Object:  StoredProcedure [dbo].[app_Patron_CheckIfFinisher]    Script Date: 12/05/2014 14:24:05 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO


CREATE PROCEDURE [dbo].[app_Patron_CheckIfFinisher]
@PID int = null
AS

Select isnull(dbo.fx_IsFinisher (p.PID, p.ProgID),0) as IsFinisher
from Patron p
where p.PID = @PID



GO

/****** Object:  StoredProcedure [dbo].[app_Patron_Delete]    Script Date: 12/05/2014 14:24:05 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO

CREATE PROCEDURE [dbo].[app_Patron_Delete]
@PID int
AS
delete from dbo.Notifications where PID_To = @PID OR PID_From = @PID
delete from dbo.PatronBadges where PID = @PID
delete from dbo.PatronBookLists where PID = @PID
delete from dbo.PatronPoints where PID = @PID
delete from dbo.PatronPrizes where PID = @PID
delete from dbo.PatronReadingLog where PID = @PID
delete from dbo.PatronReview where PID = @PID
delete from dbo.PatronRewardCodes where PID = @PID
delete from dbo.PrizeDrawingWinners where PatronID = @PID
update Patron set MasterAcctPID = 0 where MasterAcctPID = @PID
Delete from [Patron] Where PID = @PID
GO

/****** Object:  StoredProcedure [dbo].[app_Patron_GetAll]    Script Date: 12/05/2014 14:24:05 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO


--Create the Select Proc
CREATE PROCEDURE [dbo].[app_Patron_GetAll]
@TenID int = null
AS
Select p.*, pg.AdminName as Program
from [Patron] p
left outer join Programs pg
on p.ProgID = pg.PID
where (p.TenID = @TenID or @TenID is null)



GO

/****** Object:  StoredProcedure [dbo].[app_Patron_GetByEmail]    Script Date: 12/05/2014 14:24:05 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO

/****** Object:  StoredProcedure [dbo].[app_Patron_GetByEmail]    Script Date: 03/10/2014 14:43:23 ******/






create PROCEDURE [dbo].[app_Patron_GetByEmail]
@Email		varchar(50)
AS
SET NOCOUNT ON
SET TRANSACTION ISOLATION LEVEL READ UNCOMMITTED

SELECT *
FROM Patron
WHERE
EmailAddress = @Email




GO

/****** Object:  StoredProcedure [dbo].[app_Patron_GetByID]    Script Date: 12/05/2014 14:24:05 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO

/****** Object:  StoredProcedure [dbo].[app_Patron_GetByID]    Script Date: 03/10/2014 14:43:23 ******/






--Create the Select Proc
CREATE PROCEDURE [dbo].[app_Patron_GetByID]
@PID int
AS
Select * from [Patron] Where PID = @PID




GO

/****** Object:  StoredProcedure [dbo].[app_Patron_GetByUsername]    Script Date: 12/05/2014 14:24:05 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO

------------------------------------------------------------------------
CREATE PROCEDURE [dbo].[app_Patron_GetByUsername]
@Username		varchar(50)
AS
SET NOCOUNT ON
SET TRANSACTION ISOLATION LEVEL READ UNCOMMITTED

SELECT *
FROM Patron
WHERE
Username = @Username




GO

/****** Object:  StoredProcedure [dbo].[app_Patron_GetPatronForEdit]    Script Date: 12/05/2014 14:24:05 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO



CREATE PROCEDURE [dbo].[app_Patron_GetPatronForEdit]
@PID	int=0
,@TenID int = null
AS
SET NOCOUNT ON
SET TRANSACTION ISOLATION LEVEL READ UNCOMMITTED

SELECT
isNull(p.[PID], 0) as PID,
isNull(p.[IsMasterAccount], 0) as IsMasterAccount,
isNull(p.MasterAcctPID, 0) as  [MasterAcctPID] ,
isNull(p.Username, '') as  [Username] ,
isNull(p.Password, '') as  [Password] ,
isNull(p.DOB, null) as  [DOB] ,
isNull(p.Age, '') as  [Age] ,
isNull(p.SchoolGrade, '') as  [SchoolGrade] ,
isNull(p.ProgID, 0) as  [ProgID] ,
isNull(p.FirstName, '') as  [FirstName] ,
isNull(p.MiddleName, '') as  [MiddleName] ,
isNull(p.LastName, '') as  [LastName] ,
isNull(p.Gender, '') as    [Gender]   ,
isNull(p.EmailAddress, '') as   [EmailAddress]  ,
isNull(p.PhoneNumber, '') as   [PhoneNumber]  ,
isNull(p.StreetAddress1, '') as   [StreetAddress1]  ,
isNull(p.StreetAddress2, '') as    [StreetAddress2]   ,
isNull(p.City, '') as   [City]  ,
isNull(p.State, '') as   [State]  ,
isNull(p.ZipCode, '') as   [ZipCode]  ,
isNull(p.Country, '') as  [Country] ,
isNull(p.County, '') as  [County] ,
isNull(p.ParentGuardianFirstName, '') as  [ParentGuardianFirstName] ,
isNull(p.ParentGuardianLastName, '') as  [ParentGuardianLastName] ,
isNull(p.ParentGuardianMiddleName, '') as  [ParentGuardianMiddleName] ,
isNull(p.PrimaryLibrary, 0) as  [PrimaryLibrary] ,
isNull(p.LibraryCard, '') as   [LibraryCard]  ,
isNull(p.SchoolName, '') as  [SchoolName] ,
isNull(p.District, '') as  [District] ,
isNull(p.Teacher, '') as   [Teacher]  ,
isNull(p.GroupTeamName, '') as   [GroupTeamName]  ,
isNull(p.SchoolType, '') as  [SchoolType] ,
isNull(p.LiteracyLevel1, '') as  [LiteracyLevel1] ,
isNull(p.LiteracyLevel2, '') as  [LiteracyLevel2] ,
isNull(p.ParentPermFlag, 0) as   [ParentPermFlag]  ,
isNull(p.Over18Flag, 0) as    [Over18Flag]   ,
isNull(p.ShareFlag, 0) as    [ShareFlag]   ,
isNull(p.TermsOfUseflag, 0) as  [TermsOfUseflag] ,
isNull(p.Custom1, '') as  [Custom1] ,
isNull(p.Custom2, '') as  [Custom2] ,
isNull(p.Custom3, '') as  [Custom3] ,
isNull(p.Custom4, '') as  [Custom4] ,
isNull(p.Custom5, '') as  [Custom5] ,
isNull(p.AvatarID, 0) as  [AvatarID] ,
isNull(p.RegistrationDate, null) as   [RegistrationDate]  ,
ISNULL(p.SDistrict,0) as SDistrict ,
rs.*
FROM
dbo.Patron p right outer join RegistrationSettings rs
on p.PID = @PID
where rs.TenID = @TenID

GO

/****** Object:  StoredProcedure [dbo].[app_Patron_GetScoreRank]    Script Date: 12/05/2014 14:24:05 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO



CREATE PROCEDURE [dbo].[app_Patron_GetScoreRank]
@PID int
,@WhichScore int = 1
AS
if  @WhichScore = 1
begin
select
convert(decimal(18,2),(select COUNT(*) from Patron p1 where p1.ProgID = p.ProgID and p1.Score1 <= p.Score1)-1) * 100.00
/ convert(decimal(18,2),(select COUNT(*) from Patron p1 where p1.ProgID = p.ProgID)) as Percentile
,(select COUNT(*) from Patron p1 where p1.ProgID = p.ProgID) as T
,(select COUNT(*) from Patron p1 where p1.ProgID = p.ProgID and p1.Score1 <= p.Score1)-1 as R
, Score1 as Score
from Patron p
where p.PID = @PID
end
else
begin
select
convert(decimal(18,2),(select COUNT(*) from Patron p1 where p1.ProgID = p.ProgID and p1.Score2 <= p.Score2)-1) * 100.00
/ convert(decimal(18,2),(select COUNT(*) from Patron p1 where p1.ProgID = p.ProgID)) as Percentile
,(select COUNT(*) from Patron p1 where p1.ProgID = p.ProgID) as T
,(select COUNT(*) from Patron p1 where p1.ProgID = p.ProgID and p1.Score2 <= p.Score2)-1 as R
, Score2 as Score
from Patron p
where p.PID = @PID
end


GO

/****** Object:  StoredProcedure [dbo].[app_Patron_GetSubAccountList]    Script Date: 12/05/2014 14:24:05 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO

/****** Object:  StoredProcedure [dbo].[app_Patron_GetSubAccountList]    Script Date: 03/10/2014 14:43:23 ******/






CREATE PROCEDURE [dbo].[app_Patron_GetSubAccountList]
@PID	int=0
AS
SET NOCOUNT ON
SET TRANSACTION ISOLATION LEVEL READ UNCOMMITTED

SELECT
subs.*, pg.AdminName as Program
FROM
dbo.Patron subs inner join dbo.Patron mast
on subs.MasterAcctPID = mast.PID
and mast.PID = @PID
and mast.IsMasterAccount = 1
left outer join Programs pg
on subs.ProgID = pg.PID
--order BY subs.PID desc





GO

/****** Object:  StoredProcedure [dbo].[app_Patron_Insert]    Script Date: 12/05/2014 14:24:05 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO

CREATE PROCEDURE [dbo].[app_Patron_Insert] (
@IsMasterAccount bit
,@MasterAcctPID int
,@Username varchar (50)
,@Password varchar (50)
,@DOB datetime
,@Age int
,@SchoolGrade varchar (5)
,@ProgID int
,@FirstName varchar (50)
,@MiddleName varchar (50)
,@LastName varchar (50)
,@Gender varchar (1)
,@EmailAddress varchar (150)
,@PhoneNumber varchar (20)
,@StreetAddress1 varchar (80)
,@StreetAddress2 varchar (80)
,@City varchar (20)
,@State varchar (2)
,@ZipCode varchar (10)
,@Country varchar (50)
,@County varchar (50)
,@ParentGuardianFirstName varchar (50)
,@ParentGuardianLastName varchar (50)
,@ParentGuardianMiddleName varchar (50)
,@PrimaryLibrary int
,@LibraryCard varchar (20)
,@SchoolName varchar (50)
,@District varchar (50)
,@Teacher varchar (20)
,@GroupTeamName varchar (20)
,@SchoolType int
,@LiteracyLevel1 int
,@LiteracyLevel2 int
,@ParentPermFlag bit
,@Over18Flag bit
,@ShareFlag bit
,@TermsOfUseflag bit
,@Custom1 varchar (50)
,@Custom2 varchar (50)
,@Custom3 varchar (50)
,@Custom4 varchar (50)
,@Custom5 varchar (50)
,@AvatarID int
,@SDistrict int
,@TenID int = 0
,@FldInt1 int = 0
,@FldInt2 int = 0
,@FldInt3 int = 0
,@FldBit1 bit = 0
,@FldBit2 bit = 0
,@FldBit3 bit = 0
,@FldText1 text = ''
,@FldText2 text = ''
,@FldText3 text = ''
,@Score1	int	= 0
,@Score2	int	= 0
,@Score1Pct	decimal(18, 2) = 0
,@Score2Pct	decimal(18, 2)	=0
,@Score1Date	datetime
,@Score2Date	datetime
,@PID int output
) AS
Begin
Insert into Patron
(IsMasterAccount
,MasterAcctPID
,Username
,Password
,DOB
,Age
,SchoolGrade
,ProgID
,FirstName
,MiddleName
,LastName
,Gender
,EmailAddress
,PhoneNumber
,StreetAddress1
,StreetAddress2
,City
,State
,ZipCode
,Country
,County
,ParentGuardianFirstName
,ParentGuardianLastName
,ParentGuardianMiddleName
,PrimaryLibrary
,LibraryCard
,SchoolName
,District
,Teacher
,GroupTeamName
,SchoolType
,LiteracyLevel1
,LiteracyLevel2
,ParentPermFlag
,Over18Flag
,ShareFlag
,TermsOfUseflag
,Custom1
,Custom2
,Custom3
,Custom4
,Custom5
,AvatarID
,SDistrict
,TenID, FldInt1, FldInt2, FldInt3, FldBit1, FldBit2, FldBit3, FldText1, FldText2, FldText3
,Score1,Score2,Score1Pct,Score2Pct,Score1Date,Score2Date
)
VALUES
(@IsMasterAccount
,@MasterAcctPID
,@Username
,@Password
,@DOB
,@Age
,@SchoolGrade
,@ProgID
,@FirstName
,@MiddleName
,@LastName
,@Gender
,@EmailAddress
,@PhoneNumber
,@StreetAddress1
,@StreetAddress2
,@City
,@State
,@ZipCode
,@Country
,@County
,@ParentGuardianFirstName
,@ParentGuardianLastName
,@ParentGuardianMiddleName
,@PrimaryLibrary
,@LibraryCard
,@SchoolName
,@District
,@Teacher
,@GroupTeamName
,@SchoolType
,@LiteracyLevel1
,@LiteracyLevel2
,@ParentPermFlag
,@Over18Flag
,@ShareFlag
,@TermsOfUseflag
,@Custom1
,@Custom2
,@Custom3
,@Custom4
,@Custom5
,@AvatarID
,@SDistrict
,@TenID, @FldInt1, @FldInt2, @FldInt3, @FldBit1, @FldBit2, @FldBit3, @FldText1, @FldText2, @FldText3
,@Score1,@Score2,@Score1Pct,@Score2Pct,@Score1Date,@Score2Date
)
Select @PID = SCOPE_IDENTITY()
END


GO

/****** Object:  StoredProcedure [dbo].[app_Patron_Login]    Script Date: 12/05/2014 14:24:05 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO


CREATE PROCEDURE [dbo].[app_Patron_Login]
@UserName		varchar(50)
, @Password		varchar(50)
, @SessionID		varchar(128)
AS
SET NOCOUNT ON
SET TRANSACTION ISOLATION LEVEL READ UNCOMMITTED

Declare   @Count int
, @UID int

SELECT
@Count = isnull(Count(*),0)
, @UID = PID
FROM
dbo.Patron
WHERE
Username = @UserName
AND Password = @Password

GROUP BY PID

IF @Count = 0 OR @Count is null
BEGIN
select 0
END
ELSE
BEGIN
select 1
END
return 0

GO

/****** Object:  StoredProcedure [dbo].[app_Patron_Update]    Script Date: 12/05/2014 14:24:05 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO

CREATE PROCEDURE [dbo].[app_Patron_Update] (
@PID int
,@IsMasterAccount bit
,@MasterAcctPID int
,@Username varchar (50)
,@Password varchar (50)
,@DOB datetime
,@Age int
,@SchoolGrade varchar (5)
,@ProgID int
,@FirstName varchar (50)
,@MiddleName varchar (50)
,@LastName varchar (50)
,@Gender varchar (1)
,@EmailAddress varchar (150)
,@PhoneNumber varchar (20)
,@StreetAddress1 varchar (80)
,@StreetAddress2 varchar (80)
,@City varchar (20)
,@State varchar (2)
,@ZipCode varchar (10)
,@Country varchar (50)
,@County varchar (50)
,@ParentGuardianFirstName varchar (50)
,@ParentGuardianLastName varchar (50)
,@ParentGuardianMiddleName varchar (50)
,@PrimaryLibrary int
,@LibraryCard varchar (20)
,@SchoolName varchar (50)
,@District varchar (50)
,@Teacher varchar (20)
,@GroupTeamName varchar (20)
,@SchoolType int
,@LiteracyLevel1 int
,@LiteracyLevel2 int
,@ParentPermFlag bit
,@Over18Flag bit
,@ShareFlag bit
,@TermsOfUseflag bit
,@Custom1 varchar (50)
,@Custom2 varchar (50)
,@Custom3 varchar (50)
,@Custom4 varchar (50)
,@Custom5 varchar (50)
,@AvatarID int
,@SDistrict int
,@TenID int = 0
,@FldInt1 int = 0
,@FldInt2 int = 0
,@FldInt3 int = 0
,@FldBit1 bit = 0
,@FldBit2 bit = 0
,@FldBit3 bit = 0
,@FldText1 text = ''
,@FldText2 text = ''
,@FldText3 text = ''
,@Score1	int	= 0
,@Score2	int	= 0
,@Score1Pct	decimal(18, 2) = 0
,@Score2Pct	decimal(18, 2)	=0
,@Score1Date	datetime
,@Score2Date	datetime
) AS
Update Patron
Set
IsMasterAccount =  @IsMasterAccount
,MasterAcctPID =  @MasterAcctPID
,Username =  @Username
,Password =  @Password
,DOB =  @DOB
,Age =  @Age
,SchoolGrade =  @SchoolGrade
,ProgID =  @ProgID
,FirstName =  @FirstName
,MiddleName =  @MiddleName
,LastName =  @LastName
,Gender =  @Gender
,EmailAddress =  @EmailAddress
,PhoneNumber =  @PhoneNumber
,StreetAddress1 =  @StreetAddress1
,StreetAddress2 =  @StreetAddress2
,City =  @City
,State =  @State
,ZipCode =  @ZipCode
,Country =  @Country
,County =  @County
,ParentGuardianFirstName =  @ParentGuardianFirstName
,ParentGuardianLastName =  @ParentGuardianLastName
,ParentGuardianMiddleName =  @ParentGuardianMiddleName
,PrimaryLibrary =  @PrimaryLibrary
,LibraryCard =  @LibraryCard
,SchoolName =  @SchoolName
,District =  @District
,Teacher =  @Teacher
,GroupTeamName =  @GroupTeamName
,SchoolType =  @SchoolType
,LiteracyLevel1 =  @LiteracyLevel1
,LiteracyLevel2 =  @LiteracyLevel2
,ParentPermFlag =  @ParentPermFlag
,Over18Flag =  @Over18Flag
,ShareFlag =  @ShareFlag
,TermsOfUseflag =  @TermsOfUseflag
,Custom1 =  @Custom1
,Custom2 =  @Custom2
,Custom3 =  @Custom3
,Custom4 =  @Custom4
,Custom5 =  @Custom5
,AvatarID =  @AvatarID
,SDistrict = @SDistrict
,TenID = @TenID
,FldInt1 = @FldInt1
,FldInt2 = @FldInt2
,FldInt3 = @FldInt3
,FldBit1 = @FldBit1
,FldBit2 = @FldBit2
,FldBit3 = @FldBit3
,FldText1 = @FldText1
,FldText2 = @FldText2
,FldText3 = @FldText3
,Score1		= @Score1
,Score2		= @Score2
,Score1Pct	 = @Score1Pct
,Score2Pct		=@Score2Pct
,Score1Date	 = @Score1Date
,Score2Date	 = @Score2Date

Where PID = @PID AND TenID = @TenID


GO

/****** Object:  StoredProcedure [dbo].[app_PatronBadges_Delete]    Script Date: 12/05/2014 14:24:06 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO

/****** Object:  StoredProcedure [dbo].[app_PatronBadges_Delete]    Script Date: 03/10/2014 14:43:23 ******/






--Create the Delete Proc
CREATE PROCEDURE [dbo].[app_PatronBadges_Delete]
@PBID int
AS
Delete from [PatronBadges] Where PBID = @PBID




GO

/****** Object:  StoredProcedure [dbo].[app_PatronBadges_GetAll]    Script Date: 12/05/2014 14:24:06 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO


CREATE PROCEDURE [dbo].[app_PatronBadges_GetAll]
@PID int = 0
AS
Select
ROW_NUMBER() over (order by DateEarned, PBID) as Rank,
pb.*, b.UserName as Title
from [PatronBadges] pb left join Badge b
on pb.BadgeID = b.BID
where PID = @PID
order by DateEarned, PBID

GO

/****** Object:  StoredProcedure [dbo].[app_PatronBadges_GetByID]    Script Date: 12/05/2014 14:24:06 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO

/****** Object:  StoredProcedure [dbo].[app_PatronBadges_GetByID]    Script Date: 03/10/2014 14:43:23 ******/






--Create the Select Proc
CREATE PROCEDURE [dbo].[app_PatronBadges_GetByID]
@PBID int
AS
Select * from [PatronBadges] Where PBID = @PBID




GO

/****** Object:  StoredProcedure [dbo].[app_PatronBadges_Insert]    Script Date: 12/05/2014 14:24:06 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO

/****** Object:  StoredProcedure [dbo].[app_PatronBadges_Insert]    Script Date: 03/10/2014 14:43:23 ******/






--Create the Insert Proc
CREATE PROCEDURE [dbo].[app_PatronBadges_Insert] (
@PID int
,@BadgeID int
,@DateEarned datetime
,@PBID int output
) AS
Begin
Insert into PatronBadges
(PID
,BadgeID
,DateEarned
)
VALUES
(@PID
,@BadgeID
,@DateEarned
)
Select @PBID = SCOPE_IDENTITY()
END




GO

/****** Object:  StoredProcedure [dbo].[app_PatronBadges_Update]    Script Date: 12/05/2014 14:24:06 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO

/****** Object:  StoredProcedure [dbo].[app_PatronBadges_Update]    Script Date: 03/10/2014 14:43:23 ******/






--Create the Update Proc
CREATE PROCEDURE [dbo].[app_PatronBadges_Update] (
@PBID int
,@PID int
,@BadgeID int
,@DateEarned datetime

) AS
Update PatronBadges
Set
PID =  @PID
,BadgeID =  @BadgeID
,DateEarned =  @DateEarned

Where PBID = @PBID




GO

/****** Object:  StoredProcedure [dbo].[app_PatronBookLists_Delete]    Script Date: 12/05/2014 14:24:06 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO

/****** Object:  StoredProcedure [dbo].[app_PatronBookLists_Delete]    Script Date: 03/10/2014 14:43:23 ******/






--Create the Delete Proc
CREATE PROCEDURE [dbo].[app_PatronBookLists_Delete]
@PBLBID int
AS
Delete from [PatronBookLists] Where PBLBID = @PBLBID




GO

/****** Object:  StoredProcedure [dbo].[app_PatronBookLists_GetAll]    Script Date: 12/05/2014 14:24:06 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO

/****** Object:  StoredProcedure [dbo].[app_PatronBookLists_GetAll]    Script Date: 03/10/2014 14:43:23 ******/






--Create the Select Proc
CREATE PROCEDURE [dbo].[app_PatronBookLists_GetAll]
AS
Select * from [PatronBookLists]




GO

/****** Object:  StoredProcedure [dbo].[app_PatronBookLists_GetByID]    Script Date: 12/05/2014 14:24:06 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO

/****** Object:  StoredProcedure [dbo].[app_PatronBookLists_GetByID]    Script Date: 03/10/2014 14:43:23 ******/






--Create the Select Proc
CREATE PROCEDURE [dbo].[app_PatronBookLists_GetByID]
@PBLBID int
AS
Select * from [PatronBookLists] Where PBLBID = @PBLBID




GO

/****** Object:  StoredProcedure [dbo].[app_PatronBookLists_Insert]    Script Date: 12/05/2014 14:24:06 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO

/****** Object:  StoredProcedure [dbo].[app_PatronBookLists_Insert]    Script Date: 03/10/2014 14:43:23 ******/






--Create the Insert Proc
CREATE PROCEDURE [dbo].[app_PatronBookLists_Insert] (
@PID int
,@BLBID int
,@BLID int
,@HasReadFlag bit
,@LastModDate datetime
,@PBLBID int output
) AS
Begin
Insert into PatronBookLists
(PID
,BLBID
,BLID
,HasReadFlag
,LastModDate
)
VALUES
(@PID
,@BLBID
,@BLID
,@HasReadFlag
,@LastModDate
)
Select @PBLBID = SCOPE_IDENTITY()
END




GO

/****** Object:  StoredProcedure [dbo].[app_PatronBookLists_Update]    Script Date: 12/05/2014 14:24:06 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO

/****** Object:  StoredProcedure [dbo].[app_PatronBookLists_Update]    Script Date: 03/10/2014 14:43:23 ******/






--Create the Update Proc
CREATE PROCEDURE [dbo].[app_PatronBookLists_Update] (
@PBLBID int
,@PID int
,@BLBID int
,@BLID int
,@HasReadFlag bit
,@LastModDate datetime

) AS
Update PatronBookLists
Set
PID =  @PID
,BLBID =  @BLBID
,BLID =  @BLID
,HasReadFlag =  @HasReadFlag
,LastModDate =  @LastModDate

Where PBLBID = @PBLBID




GO

/****** Object:  StoredProcedure [dbo].[app_PatronPoints_Delete]    Script Date: 12/05/2014 14:24:06 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO

/****** Object:  StoredProcedure [dbo].[app_PatronPoints_Delete]    Script Date: 03/10/2014 14:43:23 ******/






--Create the Delete Proc
CREATE PROCEDURE [dbo].[app_PatronPoints_Delete]
@PPID int
AS
Delete from [PatronPoints] Where PPID = @PPID




GO

/****** Object:  StoredProcedure [dbo].[app_PatronPoints_GetAll]    Script Date: 12/05/2014 14:24:06 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO

--Create the Select Proc
CREATE PROCEDURE [dbo].[app_PatronPoints_GetAll]
@PID int = 0
AS
Select pp.*
,ISNULL(pl.Author,'') as Author, ISNULL(pl.Title,'') as Title
,ISNULL(pr.Review,'') as Review, ISNULL(isApproved,0) as isApproved
,ISNULL(ev.EventTitle,'') as EventTitle
,ISNULL(bl.ListName,'') as ListName
,ISNULL(mg.GameName,'') as GameName
,ISNULL(pr.PRID,0) as PRID
,ISNULL(pl.ReadingTypeLabel,'') ReadingType
,ISNULL(pl.ReadingAmount,'') ReadingAmount
from [PatronPoints] pp left outer join [PatronReadingLog] pl
on pl.PRLID = pp.LogID
left outer join [PatronReview] pr
on pl.PRLID = pr.PRLID
left outer join [Event] ev
on pp.EventID = ev.EID
left outer join [BookList] bl
on pp.BookListID = bl.BLID
left outer join [Minigame] mg
on pp.GameLevelActivityID = mg.MGID

where @PID = pp.PID
order by AwardDate Desc

GO

/****** Object:  StoredProcedure [dbo].[app_PatronPoints_GetByID]    Script Date: 12/05/2014 14:24:06 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO

/****** Object:  StoredProcedure [dbo].[app_PatronPoints_GetByID]    Script Date: 03/10/2014 14:43:23 ******/






--Create the Select Proc
CREATE PROCEDURE [dbo].[app_PatronPoints_GetByID]
@PPID int
AS
Select * from [PatronPoints] Where PPID = @PPID




GO

/****** Object:  StoredProcedure [dbo].[app_PatronPoints_GetLastPatronEntryID]    Script Date: 12/05/2014 14:24:06 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO



Create PROCEDURE [dbo].[app_PatronPoints_GetLastPatronEntryID]
@PID int
AS
Select isnull(MAX(PPID),0) from [PatronPoints] Where PID = @PID


GO

/****** Object:  StoredProcedure [dbo].[app_PatronPoints_GetPatronPointsBookList]    Script Date: 12/05/2014 14:24:06 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO

/****** Object:  StoredProcedure [dbo].[app_PatronPoints_GetPatronPointsBookList]    Script Date: 03/10/2014 14:43:23 ******/








CREATE PROCEDURE [dbo].[app_PatronPoints_GetPatronPointsBookList] (
@PID int , @BLID int = 0
) AS
Begin

Select * from PatronPoints where PID = @PID AND BookListID = @BLID and AwardReasonCd = 2

end





GO

/****** Object:  StoredProcedure [dbo].[app_PatronPoints_GetPatronPointsByKeyword]    Script Date: 12/05/2014 14:24:06 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO

/****** Object:  StoredProcedure [dbo].[app_PatronPoints_GetPatronPointsByKeyword]    Script Date: 03/10/2014 14:43:23 ******/






CREATE PROCEDURE [dbo].[app_PatronPoints_GetPatronPointsByKeyword] (
@PID int , @Key varchar(50) = ''
) AS
Begin

Select * from PatronPoints where PID = @PID AND EventCode = @Key and AwardReasonCd = 1

end





GO

/****** Object:  StoredProcedure [dbo].[app_PatronPoints_GetPatronPointsByMGID]    Script Date: 12/05/2014 14:24:06 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO

/****** Object:  StoredProcedure [dbo].[app_PatronPoints_GetPatronPointsByMGID]    Script Date: 03/10/2014 14:43:23 ******/







CREATE PROCEDURE [dbo].[app_PatronPoints_GetPatronPointsByMGID] (
@PID int , @MGID int = 0
) AS
Begin

Select * from PatronPoints where PID = @PID AND GameLevelActivityID = @MGID and AwardReasonCd = 4

end





GO

/****** Object:  StoredProcedure [dbo].[app_PatronPoints_GetProgramLeaderboard]    Script Date: 12/05/2014 14:24:06 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO


CREATE PROCEDURE [dbo].[app_PatronPoints_GetProgramLeaderboard]
@ProgId int = 0
,@TenID int = null
AS
if @TenID is null
select @TenID = TenID from Programs where PID = @ProgId

select top 10 pp.PID, isnull(SUM(isnull(convert(bigint,NumPoints),0)),0) as TotalPoints, p.Username, p.AvatarID
into #TempLB
from PatronPoints pp join Patron p
on pp.PID = p.PID AND p.TenID = @TenID
where p.ProgID = @ProgId
group by pp.PID, p.Username, p.AvatarID
order by TotalPoints desc

update #TempLB set TotalPoints = 20000000 where TotalPoints > 20000000

select  PID, Username, AvatarID, CONVERT(int, TotalPoints) as TotalPoints, ROW_NUMBER() over (order by TotalPoints desc) as Rank
from #TempLB
order by TotalPoints desc

GO

/****** Object:  StoredProcedure [dbo].[app_PatronPoints_GetTotalPatronPoints]    Script Date: 12/05/2014 14:24:06 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO

/****** Object:  StoredProcedure [dbo].[app_PatronPoints_GetTotalPatronPoints]    Script Date: 03/10/2014 14:43:23 ******/






--Create the Insert Proc
CREATE PROCEDURE [dbo].[app_PatronPoints_GetTotalPatronPoints] (
@PID int
) AS
Begin

if (exists (select isnull(SUM(isnull(NumPoints,0)),0) as TotalPoints from PatronPoints where PID = @PID))
select isnull(SUM(isnull(NumPoints,0)),0) as TotalPoints from PatronPoints where PID = @PID
else
select 0 as TotalPoints

end



GO

/****** Object:  StoredProcedure [dbo].[app_PatronPoints_GetTotalPatronPointsOnDate]    Script Date: 12/05/2014 14:24:06 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO



CREATE PROCEDURE [dbo].[app_PatronPoints_GetTotalPatronPointsOnDate] (
@PID int
,@Date datetime = null
) AS
Begin

if @Date is null select @Date = GETDATE()
if (exists (select isnull(SUM(isnull(NumPoints,0)),0) as TotalPoints from PatronPoints where PID = @PID
--And convert(varchar, AwardDate, 101) = convert(varchar, @Date, 101)
))
select isnull(SUM(isnull(NumPoints,0)),0) as TotalPoints
from PatronPoints
where
PID = @PID
And convert(varchar, AwardDate, 101) = convert(varchar, @Date, 101)
else
select 0 as TotalPoints

end


GO

/****** Object:  StoredProcedure [dbo].[app_PatronPoints_Insert]    Script Date: 12/05/2014 14:24:06 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO

/****** Object:  StoredProcedure [dbo].[app_PatronPoints_Insert]    Script Date: 03/10/2014 14:43:23 ******/






--Create the Insert Proc
CREATE PROCEDURE [dbo].[app_PatronPoints_Insert] (
@PID int
,@NumPoints int
,@AwardDate datetime
,@AwardReason varchar (50)
,@AwardReasonCd int
,@BadgeAwardedFlag bit
,@BadgeID int
,@PBID int
,@isReading bit
,@LogID int
,@isEvent bit
,@EventID int
,@EventCode varchar (50)
,@isBookList bit
,@BookListID int
,@isGame bit
,@isGameLevelActivity bit
,@GameID int
,@GameLevel int
,@GameLevelID int
,@GameLevelActivityID int
,@PPID int output
) AS
Begin
Insert into PatronPoints
(PID
,NumPoints
,AwardDate
,AwardReason
,AwardReasonCd
,BadgeAwardedFlag
,BadgeID
,PBID
,isReading
,LogID
,isEvent
,EventID
,EventCode
,isBookList
,BookListID
,isGame
,isGameLevelActivity
,GameID
,GameLevel
,GameLevelID
,GameLevelActivityID
)
VALUES
(@PID
,@NumPoints
,@AwardDate
,@AwardReason
,@AwardReasonCd
,@BadgeAwardedFlag
,@BadgeID
,@PBID
,@isReading
,@LogID
,@isEvent
,@EventID
,@EventCode
,@isBookList
,@BookListID
,@isGame
,@isGameLevelActivity
,@GameID
,@GameLevel
,@GameLevelID
,@GameLevelActivityID
)
Select @PPID = SCOPE_IDENTITY()
END




GO

/****** Object:  StoredProcedure [dbo].[app_PatronPoints_Update]    Script Date: 12/05/2014 14:24:06 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO

/****** Object:  StoredProcedure [dbo].[app_PatronPoints_Update]    Script Date: 03/10/2014 14:43:23 ******/






--Create the Update Proc
CREATE PROCEDURE [dbo].[app_PatronPoints_Update] (
@PPID int
,@PID int
,@NumPoints int
,@AwardDate datetime
,@AwardReason varchar (50)
,@AwardReasonCd int
,@BadgeAwardedFlag bit
,@BadgeID int
,@PBID int
,@isReading bit
,@LogID int
,@isEvent bit
,@EventID int
,@EventCode varchar (50)
,@isBookList bit
,@BookListID int
,@isGame bit
,@isGameLevelActivity bit
,@GameID int
,@GameLevel int
,@GameLevelID int
,@GameLevelActivityID int

) AS
Update PatronPoints
Set
PID =  @PID
,NumPoints =  @NumPoints
,AwardDate =  @AwardDate
,AwardReason =  @AwardReason
,AwardReasonCd =  @AwardReasonCd
,BadgeAwardedFlag =  @BadgeAwardedFlag
,BadgeID =  @BadgeID
,PBID =  @PBID
,isReading =  @isReading
,LogID =  @LogID
,isEvent =  @isEvent
,EventID =  @EventID
,EventCode =  @EventCode
,isBookList =  @isBookList
,BookListID =  @BookListID
,isGame =  @isGame
,isGameLevelActivity =  @isGameLevelActivity
,GameID =  @GameID
,GameLevel =  @GameLevel
,GameLevelID =  @GameLevelID
,GameLevelActivityID =  @GameLevelActivityID

Where PPID = @PPID




GO

/****** Object:  StoredProcedure [dbo].[app_PatronPrizes_Delete]    Script Date: 12/05/2014 14:24:06 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO

/****** Object:  StoredProcedure [dbo].[app_PatronPrizes_Delete]    Script Date: 03/10/2014 14:43:23 ******/






--Create the Delete Proc
CREATE PROCEDURE [dbo].[app_PatronPrizes_Delete]
@PPID int
AS
Delete from [PatronPrizes] Where PPID = @PPID




GO

/****** Object:  StoredProcedure [dbo].[app_PatronPrizes_GetAll]    Script Date: 12/05/2014 14:24:06 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO

/****** Object:  StoredProcedure [dbo].[app_PatronPrizes_GetAll]    Script Date: 03/10/2014 14:43:23 ******/






--Create the Select Proc
CREATE PROCEDURE [dbo].[app_PatronPrizes_GetAll]
@PID int
AS
Select pp.*, ISNULL(b.AdminName,'') as Badge
from [PatronPrizes] pp
left outer join Badge b
on pp.BadgeID = b.BID
where pp.PID=@PID




GO

/****** Object:  StoredProcedure [dbo].[app_PatronPrizes_GetByDrawingID]    Script Date: 12/05/2014 14:24:06 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO

/****** Object:  StoredProcedure [dbo].[app_PatronPrizes_GetByDrawingID]    Script Date: 03/10/2014 14:43:23 ******/






CREATE PROCEDURE [dbo].[app_PatronPrizes_GetByDrawingID]
@DrawingID int
AS
Select * from [PatronPrizes] Where DrawingID = @DrawingID




GO

/****** Object:  StoredProcedure [dbo].[app_PatronPrizes_GetByID]    Script Date: 12/05/2014 14:24:06 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO

/****** Object:  StoredProcedure [dbo].[app_PatronPrizes_GetByID]    Script Date: 03/10/2014 14:43:23 ******/






--Create the Select Proc
CREATE PROCEDURE [dbo].[app_PatronPrizes_GetByID]
@PPID int
AS
Select * from [PatronPrizes] Where PPID = @PPID




GO

/****** Object:  StoredProcedure [dbo].[app_PatronPrizes_Insert]    Script Date: 12/05/2014 14:24:06 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO

/****** Object:  StoredProcedure [dbo].[app_PatronPrizes_Insert]    Script Date: 03/10/2014 14:43:24 ******/






--Create the Insert Proc
CREATE PROCEDURE [dbo].[app_PatronPrizes_Insert] (
@PID int
,@PrizeSource int
,@BadgeID int
,@DrawingID int
,@PrizeName varchar (50)
,@RedeemedFlag bit
,@LastModDate datetime
,@LastModUser varchar (50)
,@AddedDate datetime
,@AddedUser varchar (50)
,@PPID int output
) AS
Begin
Insert into PatronPrizes
(PID
,PrizeSource
,BadgeID
,DrawingID
,PrizeName
,RedeemedFlag
,LastModDate
,LastModUser
,AddedDate
,AddedUser
)
VALUES
(@PID
,@PrizeSource
,@BadgeID
,@DrawingID
,@PrizeName
,@RedeemedFlag
,@LastModDate
,@LastModUser
,@AddedDate
,@AddedUser
)
Select @PPID = SCOPE_IDENTITY()
END




GO

/****** Object:  StoredProcedure [dbo].[app_PatronPrizes_Update]    Script Date: 12/05/2014 14:24:06 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO

/****** Object:  StoredProcedure [dbo].[app_PatronPrizes_Update]    Script Date: 03/10/2014 14:43:24 ******/






--Create the Update Proc
CREATE PROCEDURE [dbo].[app_PatronPrizes_Update] (
@PPID int
,@PID int
,@PrizeSource int
,@BadgeID int
,@DrawingID int
,@PrizeName varchar (50)
,@RedeemedFlag bit
,@LastModDate datetime
,@LastModUser varchar (50)
,@AddedDate datetime
,@AddedUser varchar (50)

) AS
Update PatronPrizes
Set
PID =  @PID
,PrizeSource =  @PrizeSource
,BadgeID =  @BadgeID
,DrawingID =  @DrawingID
,PrizeName =  @PrizeName
,RedeemedFlag =  @RedeemedFlag
,LastModDate =  @LastModDate
,LastModUser =  @LastModUser
,AddedDate =  @AddedDate
,AddedUser =  @AddedUser

Where PPID = @PPID




GO

/****** Object:  StoredProcedure [dbo].[app_PatronReadingLog_Delete]    Script Date: 12/05/2014 14:24:06 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO

/****** Object:  StoredProcedure [dbo].[app_PatronReadingLog_Delete]    Script Date: 03/10/2014 14:43:24 ******/






--Create the Delete Proc
CREATE PROCEDURE [dbo].[app_PatronReadingLog_Delete]
@PRLID int
AS
Delete from [PatronReadingLog] Where PRLID = @PRLID




GO

/****** Object:  StoredProcedure [dbo].[app_PatronReadingLog_GetAll]    Script Date: 12/05/2014 14:24:06 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO

/****** Object:  StoredProcedure [dbo].[app_PatronReadingLog_GetAll]    Script Date: 03/10/2014 14:43:24 ******/






--Create the Select Proc
CREATE PROCEDURE [dbo].[app_PatronReadingLog_GetAll]
@PID int = 0
AS
Select * from [PatronReadingLog] where @PID = PID
order by LoggingDate desc




GO

/****** Object:  StoredProcedure [dbo].[app_PatronReadingLog_GetByID]    Script Date: 12/05/2014 14:24:06 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO

/****** Object:  StoredProcedure [dbo].[app_PatronReadingLog_GetByID]    Script Date: 03/10/2014 14:43:24 ******/






--Create the Select Proc
CREATE PROCEDURE [dbo].[app_PatronReadingLog_GetByID]
@PRLID int
AS
Select * from [PatronReadingLog] Where PRLID = @PRLID




GO

/****** Object:  StoredProcedure [dbo].[app_PatronReadingLog_Insert]    Script Date: 12/05/2014 14:24:06 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO

/****** Object:  StoredProcedure [dbo].[app_PatronReadingLog_Insert]    Script Date: 03/10/2014 14:43:24 ******/






--Create the Insert Proc
CREATE PROCEDURE [dbo].[app_PatronReadingLog_Insert] (
@PID int
,@ReadingType int
,@ReadingTypeLabel varchar (50)
,@ReadingAmount int
,@ReadingPoints int
,@LoggingDate varchar (50)
,@Author varchar (50)
,@Title varchar (150)
,@HasReview bit
,@ReviewID int
,@PRLID int output
) AS
Begin
Insert into PatronReadingLog
(PID
,ReadingType
,ReadingTypeLabel
,ReadingAmount
,ReadingPoints
,LoggingDate
,Author
,Title
,HasReview
,ReviewID
)
VALUES
(@PID
,@ReadingType
,@ReadingTypeLabel
,@ReadingAmount
,@ReadingPoints
,@LoggingDate
,@Author
,@Title
,@HasReview
,@ReviewID
)
Select @PRLID = SCOPE_IDENTITY()
END




GO

/****** Object:  StoredProcedure [dbo].[app_PatronReadingLog_Update]    Script Date: 12/05/2014 14:24:06 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO

/****** Object:  StoredProcedure [dbo].[app_PatronReadingLog_Update]    Script Date: 03/10/2014 14:43:24 ******/






--Create the Update Proc
CREATE PROCEDURE [dbo].[app_PatronReadingLog_Update] (
@PRLID int
,@PID int
,@ReadingType int
,@ReadingTypeLabel varchar (50)
,@ReadingAmount int
,@ReadingPoints int
,@LoggingDate varchar (50)
,@Author varchar (50)
,@Title varchar (150)
,@HasReview bit
,@ReviewID int

) AS
Update PatronReadingLog
Set
PID =  @PID
,ReadingType =  @ReadingType
,ReadingTypeLabel =  @ReadingTypeLabel
,ReadingAmount =  @ReadingAmount
,ReadingPoints =  @ReadingPoints
,LoggingDate =  @LoggingDate
,Author =  @Author
,Title =  @Title
,HasReview =  @HasReview
,ReviewID =  @ReviewID

Where PRLID = @PRLID




GO

/****** Object:  StoredProcedure [dbo].[app_PatronReview_Delete]    Script Date: 12/05/2014 14:24:06 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO

/****** Object:  StoredProcedure [dbo].[app_PatronReview_Delete]    Script Date: 03/10/2014 14:43:24 ******/






--Create the Delete Proc
CREATE PROCEDURE [dbo].[app_PatronReview_Delete]
@PRID int
AS
Delete from [PatronReview] Where PRID = @PRID




GO

/****** Object:  StoredProcedure [dbo].[app_PatronReview_GetAll]    Script Date: 12/05/2014 14:24:06 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO

/****** Object:  StoredProcedure [dbo].[app_PatronReview_GetAll]    Script Date: 03/10/2014 14:43:24 ******/






--Create the Select Proc
CREATE PROCEDURE [dbo].[app_PatronReview_GetAll]
@pid INT = 0
AS
Select * from [PatronReview] WHERE @PID = PID




GO

/****** Object:  StoredProcedure [dbo].[app_PatronReview_GetByID]    Script Date: 12/05/2014 14:24:06 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO

/****** Object:  StoredProcedure [dbo].[app_PatronReview_GetByID]    Script Date: 03/10/2014 14:43:24 ******/






--Create the Select Proc
CREATE PROCEDURE [dbo].[app_PatronReview_GetByID]
@PRID int
AS
Select * from [PatronReview] Where PRID = @PRID




GO

/****** Object:  StoredProcedure [dbo].[app_PatronReview_GetByLogID]    Script Date: 12/05/2014 14:24:06 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO

/****** Object:  StoredProcedure [dbo].[app_PatronReview_GetByLogID]    Script Date: 03/10/2014 14:43:24 ******/






--Create the Select Proc
CREATE PROCEDURE [dbo].[app_PatronReview_GetByLogID]
@PRLID int
AS
Select * from [PatronReview] Where PRLID = @PRLID




GO

/****** Object:  StoredProcedure [dbo].[app_PatronReview_Insert]    Script Date: 12/05/2014 14:24:06 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO

/****** Object:  StoredProcedure [dbo].[app_PatronReview_Insert]    Script Date: 03/10/2014 14:43:24 ******/






--Create the Insert Proc
CREATE PROCEDURE [dbo].[app_PatronReview_Insert] (
@PID int
,@PRLID int
,@Author varchar (50)
,@Title varchar (150)
,@Review text
,@isApproved bit
,@ReviewDate datetime
,@ApprovalDate datetime
,@ApprovedBy varchar (50)
,@PRID int output
) AS
Begin
Insert into PatronReview
(PID
,PRLID
,Author
,Title
,Review
,isApproved
,ReviewDate
,ApprovalDate
,ApprovedBy
)
VALUES
(@PID
,@PRLID
,@Author
,@Title
,@Review
,@isApproved
,@ReviewDate
,@ApprovalDate
,@ApprovedBy
)
Select @PRID = SCOPE_IDENTITY()
END




GO

/****** Object:  StoredProcedure [dbo].[app_PatronReview_Update]    Script Date: 12/05/2014 14:24:06 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO

/****** Object:  StoredProcedure [dbo].[app_PatronReview_Update]    Script Date: 03/10/2014 14:43:24 ******/






--Create the Update Proc
CREATE PROCEDURE [dbo].[app_PatronReview_Update] (
@PRID int
,@PID int
,@PRLID int
,@Author varchar (50)
,@Title varchar (150)
,@Review text
,@isApproved bit
,@ReviewDate datetime
,@ApprovalDate datetime
,@ApprovedBy varchar (50)

) AS
Update PatronReview
Set
PID =  @PID
,PRLID =  @PRLID
,Author =  @Author
,Title =  @Title
,Review =  @Review
,isApproved =  @isApproved
,ReviewDate =  @ReviewDate
,ApprovalDate =  @ApprovalDate
,ApprovedBy =  @ApprovedBy

Where PRID = @PRID




GO

/****** Object:  StoredProcedure [dbo].[app_PatronRewardCodes_Delete]    Script Date: 12/05/2014 14:24:06 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO

/****** Object:  StoredProcedure [dbo].[app_PatronRewardCodes_Delete]    Script Date: 03/10/2014 14:43:24 ******/






--Create the Delete Proc
CREATE PROCEDURE [dbo].[app_PatronRewardCodes_Delete]
@PRCID int
AS
Delete from [PatronRewardCodes] Where PRCID = @PRCID




GO

/****** Object:  StoredProcedure [dbo].[app_PatronRewardCodes_GetAll]    Script Date: 12/05/2014 14:24:06 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO

/****** Object:  StoredProcedure [dbo].[app_PatronRewardCodes_GetAll]    Script Date: 03/10/2014 14:43:24 ******/






--Create the Select Proc
CREATE PROCEDURE [dbo].[app_PatronRewardCodes_GetAll]
@PID int
AS
Select * from [PatronRewardCodes] Where PID = @PID




GO

/****** Object:  StoredProcedure [dbo].[app_PatronRewardCodes_GetByID]    Script Date: 12/05/2014 14:24:06 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO

/****** Object:  StoredProcedure [dbo].[app_PatronRewardCodes_GetByID]    Script Date: 03/10/2014 14:43:24 ******/






--Create the Select Proc
CREATE PROCEDURE [dbo].[app_PatronRewardCodes_GetByID]
@PRCID int
AS
Select * from [PatronRewardCodes] Where PRCID = @PRCID




GO

/****** Object:  StoredProcedure [dbo].[app_PatronRewardCodes_Insert]    Script Date: 12/05/2014 14:24:06 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO

/****** Object:  StoredProcedure [dbo].[app_PatronRewardCodes_Insert]    Script Date: 03/10/2014 14:43:24 ******/






--Create the Insert Proc
CREATE PROCEDURE [dbo].[app_PatronRewardCodes_Insert] (
@PID int
,@BadgeID int
,@ProgID int
,@RewardCode varchar (100)
,@LastModDate datetime
,@LastModUser varchar (50)
,@AddedDate datetime
,@AddedUser varchar (50)
,@PRCID int output
) AS
Begin
Insert into PatronRewardCodes
(PID
,BadgeID
,ProgID
,RewardCode
,LastModDate
,LastModUser
,AddedDate
,AddedUser
)
VALUES
(@PID
,@BadgeID
,@ProgID
,@RewardCode
,@LastModDate
,@LastModUser
,@AddedDate
,@AddedUser
)
Select @PRCID = SCOPE_IDENTITY()
END




GO

/****** Object:  StoredProcedure [dbo].[app_PatronRewardCodes_Update]    Script Date: 12/05/2014 14:24:06 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO

/****** Object:  StoredProcedure [dbo].[app_PatronRewardCodes_Update]    Script Date: 03/10/2014 14:43:24 ******/






--Create the Update Proc
CREATE PROCEDURE [dbo].[app_PatronRewardCodes_Update] (
@PRCID int
,@PID int
,@BadgeID int
,@ProgID int
,@RewardCode varchar (100)
,@LastModDate datetime
,@LastModUser varchar (50)
,@AddedDate datetime
,@AddedUser varchar (50)

) AS
Update PatronRewardCodes
Set
PID =  @PID
,BadgeID =  @BadgeID
,ProgID =  @ProgID
,RewardCode =  @RewardCode
,LastModDate =  @LastModDate
,LastModUser =  @LastModUser
,AddedDate =  @AddedDate
,AddedUser =  @AddedUser

Where PRCID = @PRCID




GO

/****** Object:  StoredProcedure [dbo].[app_PrizeDrawing_Delete]    Script Date: 12/05/2014 14:24:06 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO

/****** Object:  StoredProcedure [dbo].[app_PrizeDrawing_Delete]    Script Date: 03/10/2014 14:43:24 ******/






--Create the Delete Proc
CREATE PROCEDURE [dbo].[app_PrizeDrawing_Delete]
@PDID int
AS
Delete from [PrizeDrawing] Where PDID = @PDID




GO

/****** Object:  StoredProcedure [dbo].[app_PrizeDrawing_DrawWinners]    Script Date: 12/05/2014 14:24:06 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO

CREATE PROCEDURE [dbo].[app_PrizeDrawing_DrawWinners]
@PDID int = 0
,@NumWinners int = 1
,@Additional int = 0
AS

declare @TID int
declare @TenID int

select @TID = TID, @TenID = TenID
from dbo.PrizeDrawing
where PDID = @PDID

declare @Gender varchar(1), @SchoolName varchar(50)
declare @ProgID int, @PrimaryLibrary int
declare @IncPrevWinnersFlag bit
declare @MinP int, @MaxP int, @MinR int, @MaxR int

select @ProgID = ProgID, @PrimaryLibrary = PrimaryLibrary, @Gender = Gender, @SchoolName = SchoolName, @IncPrevWinnersFlag = IncPrevWinnersFlag
,@MinP = MinPoints, @MaxP = MaxPoints, @MinR = MinReviews, @MaxR = MaxReviews
from dbo.PrizeTemplate
where TID = @TID


select PID , p.ProgID, p.PrimaryLibrary, p.SchoolName, p.Gender

,isnull((Select SUM(NumPoints) from dbo.PatronPoints pp where pp.PID = p.PID
and  (AwardDate >= t.LogDateStart or t.LogDateStart is null)
and  (AwardDate <= t.LogDateEnd or t.LogDateEnd is null)
),0) as PatronPoints
,isnull((Select count(PRID) from dbo.PatronReview pr where pr.PID = p.PID
and  (ReviewDate >= t.ReviewDateStart or t.ReviewDateStart is null)
and  (ReviewDate <= t.ReviewDateEnd or t.ReviewDateEnd is null)
),0) as PatronReviews
, NEWID() as Random
into #TEMP
from Patron p
join dbo.PrizeTemplate t
on t.TID = @TID
where p.TenID = @TenID
if (@ProgID <> 0) delete from #TEMP where ProgID <> @ProgID
if (@PrimaryLibrary <> 0) delete from #TEMP where PrimaryLibrary <> @PrimaryLibrary
if (@Gender <> '') delete from #TEMP where Gender <> @Gender
if (@SchoolName <> '') delete from #TEMP where SchoolName <> @SchoolName

if (@MinP <> 0) delete from #TEMP where PatronPoints < @MinP
if (@MaxP <> 0) delete from #TEMP where PatronPoints > @MaxP
if (@MinR <> 0) delete from #TEMP where PatronReviews < @MinR
if (@MaxR <> 0) delete from #TEMP where PatronReviews > @MaxR

if (@IncPrevWinnersFlag = 0) delete from #TEMP where PID in (Select distinct PatronID from dbo.PrizeDrawingWinners)
if (@Additional = 1) delete from #TEMP where PID in (Select distinct PatronID from dbo.PrizeDrawingWinners where PDID = @PDID)

insert into PrizeDrawingWinners (PDID, PatronID, NotificationID, PrizePickedUpFlag, LastModDate, LastModUser, AddedDate, AddedUser)
select top (@NumWinners) @PDID, PID, 0, 0, GETDATE(), 'N/A', GETDATE(), 'N/A'
from #TEMP
order by Random

select * from  PrizeDrawingWinners where   PDID = @PDID and NotificationID = 0





GO

/****** Object:  StoredProcedure [dbo].[app_PrizeDrawing_GetAll]    Script Date: 12/05/2014 14:24:06 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO




--Create the Select Proc
CREATE PROCEDURE [dbo].[app_PrizeDrawing_GetAll]
@TenID int = null
AS
Select pd.*, t.TName
from [PrizeDrawing] pd
left outer join PrizeTemplate t
on pd.TID = t.TID and pd.TenID = t.TenID
where pd.TenID = @TenID
order by  PDID desc




GO

/****** Object:  StoredProcedure [dbo].[app_PrizeDrawing_GetAllWinners]    Script Date: 12/05/2014 14:24:06 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO

/****** Object:  StoredProcedure [dbo].[app_PrizeDrawing_GetAllWinners]    Script Date: 03/10/2014 14:43:24 ******/






CREATE PROCEDURE [dbo].[app_PrizeDrawing_GetAllWinners]
@PDID int = 0
AS
Select pdw.*, p.Username, p.FirstName, p.LastName
from  dbo.PrizeDrawingWinners pdw
left outer join Patron p
on pdw.PatronID= p.PID
where PDID = @PDID
order by  PDID desc




GO

/****** Object:  StoredProcedure [dbo].[app_PrizeDrawing_GetByID]    Script Date: 12/05/2014 14:24:06 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO

/****** Object:  StoredProcedure [dbo].[app_PrizeDrawing_GetByID]    Script Date: 03/10/2014 14:43:24 ******/






--Create the Select Proc
CREATE PROCEDURE [dbo].[app_PrizeDrawing_GetByID]
@PDID int
AS
Select * from [PrizeDrawing] Where PDID = @PDID




GO

/****** Object:  StoredProcedure [dbo].[app_PrizeDrawing_Insert]    Script Date: 12/05/2014 14:24:06 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO


--Create the Insert Proc
CREATE PROCEDURE [dbo].[app_PrizeDrawing_Insert] (
@PrizeName varchar (250)
,@TID int
,@DrawingDateTime datetime
,@NumWinners int
,@LastModDate datetime
,@LastModUser varchar (50)
,@AddedDate datetime
,@AddedUser varchar (50)
,@TenID int = 0
,@FldInt1 int = 0
,@FldInt2 int = 0
,@FldInt3 int = 0
,@FldBit1 bit = 0
,@FldBit2 bit = 0
,@FldBit3 bit = 0
,@FldText1 text = ''
,@FldText2 text = ''
,@FldText3 text = ''
,@PDID int output
) AS
Begin
Insert into PrizeDrawing
(PrizeName
,TID
,DrawingDateTime
,NumWinners
,LastModDate
,LastModUser
,AddedDate
,AddedUser
,TenID, FldInt1, FldInt2, FldInt3, FldBit1, FldBit2, FldBit3, FldText1, FldText2, FldText3
)
VALUES
(@PrizeName
,@TID
,@DrawingDateTime
,@NumWinners
,@LastModDate
,@LastModUser
,@AddedDate
,@AddedUser
,@TenID, @FldInt1, @FldInt2, @FldInt3, @FldBit1, @FldBit2, @FldBit3, @FldText1, @FldText2, @FldText3
)
Select @PDID = SCOPE_IDENTITY()
END




GO

/****** Object:  StoredProcedure [dbo].[app_PrizeDrawing_Update]    Script Date: 12/05/2014 14:24:06 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO

--Create the Update Proc
CREATE PROCEDURE [dbo].[app_PrizeDrawing_Update] (
@PDID int
,@PrizeName varchar (250)
,@TID int
,@DrawingDateTime datetime
,@NumWinners int
,@LastModDate datetime
,@LastModUser varchar (50)
,@AddedDate datetime
,@AddedUser varchar (50)
,@TenID int = 0
,@FldInt1 int = 0
,@FldInt2 int = 0
,@FldInt3 int = 0
,@FldBit1 bit = 0
,@FldBit2 bit = 0
,@FldBit3 bit = 0
,@FldText1 text = ''
,@FldText2 text = ''
,@FldText3 text = ''
) AS
Update PrizeDrawing
Set
PrizeName =  @PrizeName
,TID =  @TID
,DrawingDateTime =  @DrawingDateTime
,NumWinners =  @NumWinners
,LastModDate =  @LastModDate
,LastModUser =  @LastModUser
,AddedDate =  @AddedDate
,AddedUser =  @AddedUser
,TenID = @TenID
,FldInt1 = @FldInt1
,FldInt2 = @FldInt2
,FldInt3 = @FldInt3
,FldBit1 = @FldBit1
,FldBit2 = @FldBit2
,FldBit3 = @FldBit3
,FldText1 = @FldText1
,FldText2 = @FldText2
,FldText3 = @FldText3
Where PDID = @PDID AND TenID = @TenID




GO

/****** Object:  StoredProcedure [dbo].[app_PrizeDrawingWinners_Delete]    Script Date: 12/05/2014 14:24:06 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO

/****** Object:  StoredProcedure [dbo].[app_PrizeDrawingWinners_Delete]    Script Date: 03/10/2014 14:43:24 ******/






--Create the Delete Proc
CREATE PROCEDURE [dbo].[app_PrizeDrawingWinners_Delete]
@PDWID int
AS
Delete from [PrizeDrawingWinners] Where PDWID = @PDWID




GO

/****** Object:  StoredProcedure [dbo].[app_PrizeDrawingWinners_GetAll]    Script Date: 12/05/2014 14:24:06 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO

/****** Object:  StoredProcedure [dbo].[app_PrizeDrawingWinners_GetAll]    Script Date: 03/10/2014 14:43:24 ******/






--Create the Select Proc
CREATE PROCEDURE [dbo].[app_PrizeDrawingWinners_GetAll]
AS
Select * from [PrizeDrawingWinners]




GO

/****** Object:  StoredProcedure [dbo].[app_PrizeDrawingWinners_GetByID]    Script Date: 12/05/2014 14:24:06 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO

/****** Object:  StoredProcedure [dbo].[app_PrizeDrawingWinners_GetByID]    Script Date: 03/10/2014 14:43:24 ******/






--Create the Select Proc
CREATE PROCEDURE [dbo].[app_PrizeDrawingWinners_GetByID]
@PDWID int
AS
Select * from [PrizeDrawingWinners] Where PDWID = @PDWID




GO

/****** Object:  StoredProcedure [dbo].[app_PrizeDrawingWinners_Insert]    Script Date: 12/05/2014 14:24:06 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO

/****** Object:  StoredProcedure [dbo].[app_PrizeDrawingWinners_Insert]    Script Date: 03/10/2014 14:43:24 ******/






--Create the Insert Proc
CREATE PROCEDURE [dbo].[app_PrizeDrawingWinners_Insert] (
@PDID int
,@PatronID int
,@NotificationID int
,@PrizePickedUpFlag bit
,@LastModDate datetime
,@LastModUser varchar (50)
,@AddedDate datetime
,@AddedUser varchar (50)
,@PDWID int output
) AS
Begin
Insert into PrizeDrawingWinners
(PDID
,PatronID
,NotificationID
,PrizePickedUpFlag
,LastModDate
,LastModUser
,AddedDate
,AddedUser
)
VALUES
(@PDID
,@PatronID
,@NotificationID
,@PrizePickedUpFlag
,@LastModDate
,@LastModUser
,@AddedDate
,@AddedUser
)
Select @PDWID = SCOPE_IDENTITY()
END




GO

/****** Object:  StoredProcedure [dbo].[app_PrizeDrawingWinners_Update]    Script Date: 12/05/2014 14:24:06 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO

/****** Object:  StoredProcedure [dbo].[app_PrizeDrawingWinners_Update]    Script Date: 03/10/2014 14:43:24 ******/






--Create the Update Proc
CREATE PROCEDURE [dbo].[app_PrizeDrawingWinners_Update] (
@PDWID int
,@PDID int
,@PatronID int
,@NotificationID int
,@PrizePickedUpFlag bit
,@LastModDate datetime
,@LastModUser varchar (50)
,@AddedDate datetime
,@AddedUser varchar (50)

) AS
Update PrizeDrawingWinners
Set
PDID =  @PDID
,PatronID =  @PatronID
,NotificationID =  @NotificationID
,PrizePickedUpFlag =  @PrizePickedUpFlag
,LastModDate =  @LastModDate
,LastModUser =  @LastModUser
,AddedDate =  @AddedDate
,AddedUser =  @AddedUser

Where PDWID = @PDWID




GO

/****** Object:  StoredProcedure [dbo].[app_PrizeTemplate_Delete]    Script Date: 12/05/2014 14:24:06 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO

/****** Object:  StoredProcedure [dbo].[app_PrizeTemplate_Delete]    Script Date: 03/10/2014 14:43:24 ******/






--Create the Delete Proc
CREATE PROCEDURE [dbo].[app_PrizeTemplate_Delete]
@TID int
AS
Delete from [PrizeTemplate] Where TID = @TID




GO

/****** Object:  StoredProcedure [dbo].[app_PrizeTemplate_GetAll]    Script Date: 12/05/2014 14:24:06 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO

--Create the Select Proc
CREATE PROCEDURE [dbo].[app_PrizeTemplate_GetAll]
@TenID int
AS
Select t.* , ISNULL(p.AdminName,'') as ProgName,  ISNULL(c.Code,'') as Library
from [PrizeTemplate] t
left outer join Programs p
on t.ProgID = p.PID
left outer join Code c
on t.PrimaryLibrary = c.CID
where (t.TenID = @TenID or @TenID is null)
order by TID desc




GO

/****** Object:  StoredProcedure [dbo].[app_PrizeTemplate_GetByID]    Script Date: 12/05/2014 14:24:06 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO


--Create the Select Proc
CREATE PROCEDURE [dbo].[app_PrizeTemplate_GetByID]
@TID int
AS
Select * from [PrizeTemplate] Where TID = @TID




GO

/****** Object:  StoredProcedure [dbo].[app_PrizeTemplate_Insert]    Script Date: 12/05/2014 14:24:06 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO

--Create the Insert Proc
CREATE PROCEDURE [dbo].[app_PrizeTemplate_Insert] (
@TName varchar (150)
,@NumPrizes int
,@IncPrevWinnersFlag bit
,@SendNotificationFlag bit
,@NotificationSubject varchar (250)
,@NotificationMessage text
,@ProgID int
,@Gender varchar (1)
,@SchoolName varchar (50)
,@PrimaryLibrary int
,@MinPoints int
,@MaxPoints int
,@LogDateStart datetime
,@LogDateEnd datetime
,@MinReviews int
,@MaxReviews int
,@ReviewDateStart datetime
,@ReviewDateEnd datetime
,@LastModDate datetime
,@LastModUser varchar (50)
,@AddedDate datetime
,@AddedUser varchar (50)
,@TenID int = 0
,@FldInt1 int = 0
,@FldInt2 int = 0
,@FldInt3 int = 0
,@FldBit1 bit = 0
,@FldBit2 bit = 0
,@FldBit3 bit = 0
,@FldText1 text = ''
,@FldText2 text = ''
,@FldText3 text = ''
,@TID int output
) AS
Begin
Insert into PrizeTemplate
(TName
,NumPrizes
,IncPrevWinnersFlag
,SendNotificationFlag
,NotificationSubject
,NotificationMessage
,ProgID
,Gender
,SchoolName
,PrimaryLibrary
,MinPoints
,MaxPoints
,LogDateStart
,LogDateEnd
,MinReviews
,MaxReviews
,ReviewDateStart
,ReviewDateEnd
,LastModDate
,LastModUser
,AddedDate
,AddedUser
,TenID, FldInt1, FldInt2, FldInt3, FldBit1, FldBit2, FldBit3, FldText1, FldText2, FldText3
)
VALUES
(@TName
,@NumPrizes
,@IncPrevWinnersFlag
,@SendNotificationFlag
,@NotificationSubject
,@NotificationMessage
,@ProgID
,@Gender
,@SchoolName
,@PrimaryLibrary
,@MinPoints
,@MaxPoints
,@LogDateStart
,@LogDateEnd
,@MinReviews
,@MaxReviews
,@ReviewDateStart
,@ReviewDateEnd
,@LastModDate
,@LastModUser
,@AddedDate
,@AddedUser
,@TenID, @FldInt1, @FldInt2, @FldInt3, @FldBit1, @FldBit2, @FldBit3, @FldText1, @FldText2, @FldText3
)
Select @TID = SCOPE_IDENTITY()
END




GO

/****** Object:  StoredProcedure [dbo].[app_PrizeTemplate_Update]    Script Date: 12/05/2014 14:24:06 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO


--Create the Update Proc
CREATE PROCEDURE [dbo].[app_PrizeTemplate_Update] (
@TID int
,@TName varchar (150)
,@NumPrizes int
,@IncPrevWinnersFlag bit
,@SendNotificationFlag bit
,@NotificationSubject varchar (250)
,@NotificationMessage text
,@ProgID int
,@Gender varchar (1)
,@SchoolName varchar (50)
,@PrimaryLibrary int
,@MinPoints int
,@MaxPoints int
,@LogDateStart datetime
,@LogDateEnd datetime
,@MinReviews int
,@MaxReviews int
,@ReviewDateStart datetime
,@ReviewDateEnd datetime
,@LastModDate datetime
,@LastModUser varchar (50)
,@AddedDate datetime
,@AddedUser varchar (50)
,@TenID int = 0
,@FldInt1 int = 0
,@FldInt2 int = 0
,@FldInt3 int = 0
,@FldBit1 bit = 0
,@FldBit2 bit = 0
,@FldBit3 bit = 0
,@FldText1 text = ''
,@FldText2 text = ''
,@FldText3 text = ''
) AS
Update PrizeTemplate
Set
TName =  @TName
,NumPrizes =  @NumPrizes
,IncPrevWinnersFlag =  @IncPrevWinnersFlag
,SendNotificationFlag =  @SendNotificationFlag
,NotificationSubject =  @NotificationSubject
,NotificationMessage =  @NotificationMessage
,ProgID =  @ProgID
,Gender =  @Gender
,SchoolName =  @SchoolName
,PrimaryLibrary =  @PrimaryLibrary
,MinPoints =  @MinPoints
,MaxPoints =  @MaxPoints
,LogDateStart =  @LogDateStart
,LogDateEnd =  @LogDateEnd
,MinReviews =  @MinReviews
,MaxReviews =  @MaxReviews
,ReviewDateStart =  @ReviewDateStart
,ReviewDateEnd =  @ReviewDateEnd
,LastModDate =  @LastModDate
,LastModUser =  @LastModUser
,AddedDate =  @AddedDate
,AddedUser =  @AddedUser
,TenID = @TenID
,FldInt1 = @FldInt1
,FldInt2 = @FldInt2
,FldInt3 = @FldInt3
,FldBit1 = @FldBit1
,FldBit2 = @FldBit2
,FldBit3 = @FldBit3
,FldText1 = @FldText1
,FldText2 = @FldText2
,FldText3 = @FldText3
Where TID = @TID AND TenID = @TenID




GO

/****** Object:  StoredProcedure [dbo].[app_ProgramCodes_AssignCodeForPatron]    Script Date: 12/05/2014 14:24:07 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO


CREATE PROCEDURE [dbo].[app_ProgramCodes_AssignCodeForPatron] (
@PID int
,@PatronId int

) AS
declare 	 @PCID int

select
top 1
@PCID = PCID from ProgramCodes where PID =  @PID and isUsed = 0 order by PCID



Update ProgramCodes
Set
isUsed =  1
,DateUsed =  GETDATE()
,PatronId =  @PatronId

Where PCID = @PCID

select *, 0 from ProgramCodes where PCID = @PCID
union
select *, 1 from ProgramCodes where PCID = @PCID
GO

/****** Object:  StoredProcedure [dbo].[app_ProgramCodes_Delete]    Script Date: 12/05/2014 14:24:07 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO

/****** Object:  StoredProcedure [dbo].[app_ProgramCodes_Delete]    Script Date: 03/10/2014 14:43:24 ******/






--Create the Delete Proc
CREATE PROCEDURE [dbo].[app_ProgramCodes_Delete]
@PCID int
AS
Delete from [ProgramCodes] Where PCID = @PCID




GO

/****** Object:  StoredProcedure [dbo].[app_ProgramCodes_Generate]    Script Date: 12/05/2014 14:24:07 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO

CREATE PROCEDURE [dbo].[app_ProgramCodes_Generate]
@start INT = 1
,@end INT = 10000
,@PID int = 1
AS

-- generate x rows/numbers
--DECLARE @start INT = 1;
--DECLARE @end INT = 10000;

WITH numbers AS (
SELECT @start AS Number, NEWID() as Code
where Substring(CONVERT(varchar(36), NEWID()),4,20) not in (select ShortCode from ProgramCodes)
UNION ALL
SELECT number + 1, NEWID()
FROM  numbers
WHERE number < @end
)
insert into ProgramCodes(PID, CodeNumber, CodeValue, isUsed, DateCreated, DateUsed, PatronId, ShortCode)
SELECT @PID, Number, Code, 0, GETDATE(),null,0, Substring(CONVERT(varchar(36), Code),4,20)
FROM numbers
OPTION (MAXRECURSION 0)

GO

/****** Object:  StoredProcedure [dbo].[app_ProgramCodes_GetAll]    Script Date: 12/05/2014 14:24:07 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO

 /****** Object:  StoredProcedure [dbo].[app_ProgramCodes_GetAll]    Script Date: 03/10/2014 14:43:24 ******/






--Create the Select Proc
CREATE PROCEDURE [dbo].[app_ProgramCodes_GetAll]
AS
   Select * from [ProgramCodes]




GO

/****** Object:  StoredProcedure [dbo].[app_ProgramCodes_GetAllByProgram]    Script Date: 12/05/2014 14:24:07 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO

 /****** Object:  StoredProcedure [dbo].[app_ProgramCodes_GetAllByProgram]    Script Date: 03/10/2014 14:43:24 ******/






--Create the Select Proc
CREATE PROCEDURE [dbo].[app_ProgramCodes_GetAllByProgram]
@PID int 
AS
   Select * from [ProgramCodes] where PID = @PID




GO

/****** Object:  StoredProcedure [dbo].[app_ProgramCodes_GetAllForPatron]    Script Date: 12/05/2014 14:24:07 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO

 /****** Object:  StoredProcedure [dbo].[app_ProgramCodes_GetAllForPatron]    Script Date: 03/10/2014 14:43:24 ******/






--Create the Select Proc
CREATE PROCEDURE [dbo].[app_ProgramCodes_GetAllForPatron]
@PID int 
AS
   Select * from [ProgramCodes] where PatronId = @PID




GO

/****** Object:  StoredProcedure [dbo].[app_ProgramCodes_GetByID]    Script Date: 12/05/2014 14:24:07 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO

 /****** Object:  StoredProcedure [dbo].[app_ProgramCodes_GetByID]    Script Date: 03/10/2014 14:43:24 ******/






--Create the Select Proc
CREATE PROCEDURE [dbo].[app_ProgramCodes_GetByID]
@PCID int 
AS
   Select * from [ProgramCodes] Where PCID = @PCID




GO

/****** Object:  StoredProcedure [dbo].[app_ProgramCodes_GetExportList]    Script Date: 12/05/2014 14:24:07 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO

CREATE PROCEDURE [dbo].[app_ProgramCodes_GetExportList]
@PID int = 1
AS
   
select 
	 CodeNumber as "Code Number"
	,ShortCode as "Code Value"
	,case isUsed when 1 then 'Yes' else 'No' end as "Code Was Assigned"
	,DateUsed as "Date Used"
	,p.FirstName as "Assigned to First Name"
	,p.LastName as "Assigned to Last Name"
	,p.Username as "Assigned to Username"
from ProgramCodes pc
			left outer join Patron p 
				on pc.PatronId = p.PID
where pc.PID = @PID
order by PCID

GO

/****** Object:  StoredProcedure [dbo].[app_ProgramCodes_Insert]    Script Date: 12/05/2014 14:24:07 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO

CREATE PROCEDURE [dbo].[app_ProgramCodes_Insert] (
	 @PID int 
	,@CodeNumber int 
	,@CodeValue uniqueidentifier 
	,@ShortCode varchar(20) = ''
	,@isUsed bit 
	,@DateCreated datetime 
	,@DateUsed datetime 
	,@PatronId int 
	,@PCID int output 
) AS
Begin
	Insert into ProgramCodes
		(PID
		,CodeNumber
		,CodeValue
		,ShortCode
		,isUsed
		,DateCreated
		,DateUsed
		,PatronId
)
	VALUES
		(@PID
		,@CodeNumber
		,@CodeValue
		,@ShortCode
		,@isUsed
		,@DateCreated
		,@DateUsed
		,@PatronId
)
	Select @PCID = SCOPE_IDENTITY()
END

GO

/****** Object:  StoredProcedure [dbo].[app_ProgramCodes_Stats]    Script Date: 12/05/2014 14:24:07 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO

CREATE PROCEDURE [dbo].[app_ProgramCodes_Stats]
@PID int = 1
AS
   
select isnull((select COUNT(*) from ProgramCodes where PID = @PID),0) as TotalCodes
	,isnull((select COUNT(*) from ProgramCodes where PID = @PID and isUsed=1),0) as UsedCodes
	,isnull((select COUNT(*) from ProgramCodes where PID = @PID and isUsed=0),0) as RemainingCodes
	--,isnull((select Top 1 convert(varchar(64),CodeValue) from ProgramCodes where PID = @PID and isUsed=1 order by PCID desc),'') as LastUsedCode
	,isnull((select Top 1 ShortCode from ProgramCodes where PID = @PID and isUsed=1 order by PCID desc),'') as LastUsedCode

GO

/****** Object:  StoredProcedure [dbo].[app_ProgramCodes_Update]    Script Date: 12/05/2014 14:24:07 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO

CREATE PROCEDURE [dbo].[app_ProgramCodes_Update] (
	 @PCID int 
	,@PID int 
	,@CodeNumber int 
	,@CodeValue uniqueidentifier 
	,@ShortCode varchar(20) = ''	
	,@isUsed bit 
	,@DateCreated datetime 
	,@DateUsed datetime 
	,@PatronId int 

) AS
	Update ProgramCodes
	Set 
		PID =  @PID
		,CodeNumber =  @CodeNumber
		,CodeValue =  @CodeValue
		,ShortCode = @ShortCode
		,isUsed =  @isUsed
		,DateCreated =  @DateCreated
		,DateUsed =  @DateUsed
		,PatronId =  @PatronId

	Where PCID = @PCID

GO

/****** Object:  StoredProcedure [dbo].[app_ProgramGame_Delete]    Script Date: 12/05/2014 14:24:07 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO

 /****** Object:  StoredProcedure [dbo].[app_ProgramGame_Delete]    Script Date: 03/10/2014 14:43:24 ******/






--Create the Delete Proc
CREATE PROCEDURE [dbo].[app_ProgramGame_Delete]
@PGID int 
AS

   Delete ProgramGameLevel Where PGID = @PGID
   Delete from [ProgramGame] Where PGID = @PGID




GO

/****** Object:  StoredProcedure [dbo].[app_ProgramGame_GetAll]    Script Date: 12/05/2014 14:24:07 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO

--Create the Select Proc
CREATE PROCEDURE [dbo].[app_ProgramGame_GetAll]
@TenID int = null
AS
   Select * from [ProgramGame] where (TenID = @TenID or @TenID is null)




GO

/****** Object:  StoredProcedure [dbo].[app_ProgramGame_GetByID]    Script Date: 12/05/2014 14:24:07 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO

 /****** Object:  StoredProcedure [dbo].[app_ProgramGame_GetByID]    Script Date: 03/10/2014 14:43:24 ******/






--Create the Select Proc
CREATE PROCEDURE [dbo].[app_ProgramGame_GetByID]
@PGID int 
AS
   Select * from [ProgramGame] Where PGID = @PGID




GO

/****** Object:  StoredProcedure [dbo].[app_ProgramGame_Insert]    Script Date: 12/05/2014 14:24:07 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO

--Create the Insert Proc
CREATE PROCEDURE [dbo].[app_ProgramGame_Insert] (
	 @GameName varchar (50)
	,@MapImage varchar (50)
	,@BonusMapImage varchar (50)
	,@BoardWidth int 
	,@BoardHeight int 
	,@BonusLevelPointMultiplier money 
	,@LevelCompleteImage varchar (50)
	,@LastModUser varchar (50)
	,@AddedDate datetime 
	,@AddedUser varchar (50)
	,@LastModDate datetime 
	,@TenID int = 0
,@FldInt1 int = 0
,@FldInt2 int = 0
,@FldInt3 int = 0
,@FldBit1 bit = 0
,@FldBit2 bit = 0
,@FldBit3 bit = 0
,@FldText1 text = ''
,@FldText2 text = ''
,@FldText3 text = ''
	,@Minigame1ID int = 0
	,@Minigame2ID int = 0
	,@PGID int output 
) AS
Begin
	Insert into ProgramGame
		(GameName
		,MapImage
		,BonusMapImage
		,BoardWidth
		,BoardHeight
		,BonusLevelPointMultiplier
		,LevelCompleteImage
		,LastModUser
		,AddedDate
		,AddedUser
		,LastModDate
		,TenID, FldInt1, FldInt2, FldInt3, FldBit1, FldBit2, FldBit3, FldText1, FldText2, FldText3
		,Minigame1ID,Minigame2ID
)
	VALUES
		(@GameName
		,@MapImage
		,@BonusMapImage
		,@BoardWidth
		,@BoardHeight
		,@BonusLevelPointMultiplier
		,@LevelCompleteImage
		,@LastModUser
		,@AddedDate
		,@AddedUser
		,@LastModDate
		,@TenID, @FldInt1, @FldInt2, @FldInt3, @FldBit1, @FldBit2, @FldBit3, @FldText1, @FldText2, @FldText3
		,@Minigame1ID,@Minigame2ID		
)
	Select @PGID = SCOPE_IDENTITY()
END


GO

/****** Object:  StoredProcedure [dbo].[app_ProgramGame_Update]    Script Date: 12/05/2014 14:24:07 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO


--Create the Update Proc
CREATE PROCEDURE [dbo].[app_ProgramGame_Update] (
	 @PGID int 
	,@GameName varchar (50)
	,@MapImage varchar (50)
	,@BonusMapImage varchar (50)
	,@BoardWidth int 
	,@BoardHeight int 
	,@BonusLevelPointMultiplier money 
	,@LevelCompleteImage varchar (50)
	,@LastModUser varchar (50)
	,@AddedDate datetime 
	,@AddedUser varchar (50)
	,@LastModDate datetime 
,@TenID int = 0
,@FldInt1 int = 0
,@FldInt2 int = 0
,@FldInt3 int = 0
,@FldBit1 bit = 0
,@FldBit2 bit = 0
,@FldBit3 bit = 0
,@FldText1 text = ''
,@FldText2 text = ''
,@FldText3 text = ''
	,@Minigame1ID int = 0
	,@Minigame2ID int = 0
) AS
	Update ProgramGame
	Set 
		GameName =  @GameName
		,MapImage =  @MapImage
		,BonusMapImage =  @BonusMapImage
		,BoardWidth =  @BoardWidth
		,BoardHeight =  @BoardHeight
		,BonusLevelPointMultiplier =  @BonusLevelPointMultiplier
		,LevelCompleteImage =  @LevelCompleteImage
		,LastModUser =  @LastModUser
		,AddedDate =  @AddedDate
		,AddedUser =  @AddedUser
		,LastModDate =  @LastModDate
,TenID = @TenID
,FldInt1 = @FldInt1 
,FldInt2 = @FldInt2
,FldInt3 = @FldInt3 
,FldBit1 = @FldBit1
,FldBit2 = @FldBit2
,FldBit3 = @FldBit3
,FldText1 = @FldText1
,FldText2 = @FldText2
,FldText3 = @FldText3
,Minigame1ID = @Minigame1ID 
,Minigame2ID = @Minigame2ID 
	Where PGID = @PGID AND TenID = @TenID




GO

/****** Object:  StoredProcedure [dbo].[app_ProgramGameLevel_Delete]    Script Date: 12/05/2014 14:24:07 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO

 /****** Object:  StoredProcedure [dbo].[app_ProgramGameLevel_Delete]    Script Date: 03/10/2014 14:43:24 ******/






	
CREATE PROCEDURE [dbo].[app_ProgramGameLevel_Delete]
@PGLID int 
AS
  Declare @PGID int
  Select @PGID = PGID from [ProgramGameLevel] Where PGLID = @PGLID
   Delete from [ProgramGameLevel] Where PGLID = @PGLID
   exec [app_ProgramGameLevel_Reorder] @PGID




GO

/****** Object:  StoredProcedure [dbo].[app_ProgramGameLevel_GetAll]    Script Date: 12/05/2014 14:24:07 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO

 /****** Object:  StoredProcedure [dbo].[app_ProgramGameLevel_GetAll]    Script Date: 03/10/2014 14:43:25 ******/







CREATE PROCEDURE [dbo].[app_ProgramGameLevel_GetAll]
@PGID int = 0
AS
   Select * 
   , (Select isnull(Max(LevelNumber),1) from [ProgramGameLevel] where PGID = @PGID)  as MAX
   from [ProgramGameLevel]
   where PGID = @PGID
	order by LevelNumber




GO

/****** Object:  StoredProcedure [dbo].[app_ProgramGameLevel_GetByID]    Script Date: 12/05/2014 14:24:07 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO

 /****** Object:  StoredProcedure [dbo].[app_ProgramGameLevel_GetByID]    Script Date: 03/10/2014 14:43:25 ******/






--Create the Select Proc
CREATE PROCEDURE [dbo].[app_ProgramGameLevel_GetByID]
@PGLID int 
AS
   Select * from [ProgramGameLevel] Where PGLID = @PGLID




GO

/****** Object:  StoredProcedure [dbo].[app_ProgramGameLevel_Insert]    Script Date: 12/05/2014 14:24:07 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO

 /****** Object:  StoredProcedure [dbo].[app_ProgramGameLevel_Insert]    Script Date: 03/10/2014 14:43:25 ******/






--Create the Insert Proc
CREATE PROCEDURE [dbo].[app_ProgramGameLevel_Insert] (
	 @PGID int 
	,@LevelNumber int 
	,@LocationX int 
	,@LocationY int 
	,@PointNumber int 
	,@Minigame1ID int 
	,@Minigame2ID int 
	,@AwardBadgeID int 
	,@LastModDate datetime 
	,@LastModUser varchar (50)
	,@AddedDate datetime 
	,@AddedUser varchar (50)
	,@LocationXBonus int 
	,@LocationYBonus int 
	,@Minigame1IDBonus int 
	,@Minigame2IDBonus int 
	,@AwardBadgeIDBonus int 	
	,@PGLID int output 
) AS
Begin
	Insert into ProgramGameLevel
		(PGID
		,LevelNumber
		,LocationX
		,LocationY
		,PointNumber
		,Minigame1ID
		,Minigame2ID
		,AwardBadgeID
		,LastModDate
		,LastModUser
		,AddedDate
		,AddedUser
	,LocationXBonus  
	,LocationYBonus  
	,Minigame1IDBonus  
	,Minigame2IDBonus  
	,AwardBadgeIDBonus 		
)
	VALUES
		(@PGID
		,(Select isnull(Max(LevelNumber),0) +1 from ProgramGameLevel where PGID = @PGID)
		,@LocationX
		,@LocationY
		,@PointNumber
		,@Minigame1ID
		,@Minigame2ID
		,@AwardBadgeID
		,@LastModDate
		,@LastModUser
		,@AddedDate
		,@AddedUser
	,@LocationXBonus  
	,@LocationYBonus  
	,@Minigame1IDBonus  
	,@Minigame2IDBonus  
	,@AwardBadgeIDBonus 				
)
	Select @PGLID = SCOPE_IDENTITY()
END




GO

/****** Object:  StoredProcedure [dbo].[app_ProgramGameLevel_MoveDn]    Script Date: 12/05/2014 14:24:07 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO

 /****** Object:  StoredProcedure [dbo].[app_ProgramGameLevel_MoveDn]    Script Date: 03/10/2014 14:43:25 ******/







CREATE PROCEDURE [dbo].[app_ProgramGameLevel_MoveDn]
@PGLID int 
AS

	Declare @CurrentRecordLocation int, @NextRecordID int, @PGID int
	Select @CurrentRecordLocation = LevelNumber, @PGID = PGID from ProgramGameLevel where PGLID = @PGLID
	exec [dbo].[app_ProgramGameLevel_Reorder] @PGID
	if @CurrentRecordLocation < (Select MAX(LevelNumber) from ProgramGameLevel where PGID = @PGID)
	begin
		Select @NextRecordID = PGLID from ProgramGameLevel where LevelNumber = (@CurrentRecordLocation + 1) AND PGID = @PGID
		
		update ProgramGameLevel set LevelNumber = @CurrentRecordLocation + 1
		where PGLID = @PGLID
	
		update ProgramGameLevel set LevelNumber = @CurrentRecordLocation 
		where PGLID = @NextRecordID
	end




GO

/****** Object:  StoredProcedure [dbo].[app_ProgramGameLevel_MoveUp]    Script Date: 12/05/2014 14:24:07 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO

 /****** Object:  StoredProcedure [dbo].[app_ProgramGameLevel_MoveUp]    Script Date: 03/10/2014 14:43:25 ******/







CREATE PROCEDURE [dbo].[app_ProgramGameLevel_MoveUp]
@PGLID int 
AS
	Declare @CurrentRecordLocation int, @PreviousRecordID int, @PGID int
	Select @CurrentRecordLocation = LevelNumber, @PGID = PGID from ProgramGameLevel where PGLID = @PGLID
	exec [dbo].[app_ProgramGameLevel_Reorder] @PGID
	if @CurrentRecordLocation > 1
	begin
		Select @PreviousRecordID = PGLID from ProgramGameLevel where LevelNumber = (@CurrentRecordLocation - 1) AND PGID = @PGID
		
		update ProgramGameLevel set LevelNumber = @CurrentRecordLocation - 1
		where PGLID = @PGLID
	
		update ProgramGameLevel set LevelNumber = @CurrentRecordLocation 
		where PGLID = @PreviousRecordID
	end




GO

/****** Object:  StoredProcedure [dbo].[app_ProgramGameLevel_Reorder]    Script Date: 12/05/2014 14:24:07 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO


CREATE Procedure [dbo].[app_ProgramGameLevel_Reorder]
@PGID int 
AS
	UPDATE ProgramGameLevel 
	SET LevelNumber = rowNumber 
	FROM ProgramGameLevel
		INNER JOIN 
		(SELECT PGLID, LevelNumber, row_number() OVER (ORDER BY LevelNumber Asc) as rowNumber
			FROM ProgramGameLevel where PGID = @PGID) drRowNumbers 
			ON drRowNumbers.PGLID = ProgramGameLevel.PGLID and PGID = @PGID
	where PGID = @PGID

GO

/****** Object:  StoredProcedure [dbo].[app_ProgramGameLevel_Update]    Script Date: 12/05/2014 14:24:07 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO

 /****** Object:  StoredProcedure [dbo].[app_ProgramGameLevel_Update]    Script Date: 03/10/2014 14:43:25 ******/






--Create the Update Proc
CREATE PROCEDURE [dbo].[app_ProgramGameLevel_Update] (
	 @PGLID int 
	,@PGID int 
	,@LevelNumber int 
	,@LocationX int 
	,@LocationY int 
	,@PointNumber int 
	,@Minigame1ID int 
	,@Minigame2ID int 
	,@AwardBadgeID int 
	,@LastModDate datetime 
	,@LastModUser varchar (50)
	,@AddedDate datetime 
	,@AddedUser varchar (50)

	,@LocationXBonus int 
	,@LocationYBonus int 
	,@Minigame1IDBonus int 
	,@Minigame2IDBonus int 
	,@AwardBadgeIDBonus int 

) AS
	Update ProgramGameLevel
	Set 
		PGID =  @PGID
		,LevelNumber =  @LevelNumber
		,LocationX =  @LocationX
		,LocationY =  @LocationY
		,PointNumber =  @PointNumber
		,Minigame1ID =  @Minigame1ID
		,Minigame2ID =  @Minigame2ID
		,AwardBadgeID =  @AwardBadgeID
		,LastModDate =  @LastModDate
		,LastModUser =  @LastModUser
		,AddedDate =  @AddedDate
		,AddedUser =  @AddedUser
	,LocationXBonus = @LocationXBonus 
	,LocationYBonus = @LocationYBonus 
	,Minigame1IDBonus = @Minigame1IDBonus 
	,Minigame2IDBonus = @Minigame2IDBonus 
	,AwardBadgeIDBonus = @AwardBadgeIDBonus 
	Where PGLID = @PGLID




GO

/****** Object:  StoredProcedure [dbo].[app_ProgramGamePointConversion_Delete]    Script Date: 12/05/2014 14:24:07 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO

 /****** Object:  StoredProcedure [dbo].[app_ProgramGamePointConversion_Delete]    Script Date: 03/10/2014 14:43:25 ******/






--Create the Delete Proc
CREATE PROCEDURE [dbo].[app_ProgramGamePointConversion_Delete]
@PGCID int 
AS
   Delete from [ProgramGamePointConversion] Where PGCID = @PGCID




GO

/****** Object:  StoredProcedure [dbo].[app_ProgramGamePointConversion_GetAll]    Script Date: 12/05/2014 14:24:07 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO

 /****** Object:  StoredProcedure [dbo].[app_ProgramGamePointConversion_GetAll]    Script Date: 03/10/2014 14:43:25 ******/






--Create the Select Proc
CREATE PROCEDURE [dbo].[app_ProgramGamePointConversion_GetAll]
@PGID int = 0
AS
   Select * from [ProgramGamePointConversion]
   where PGID = @PGID




GO

/****** Object:  StoredProcedure [dbo].[app_ProgramGamePointConversion_GetByActivityType]    Script Date: 12/05/2014 14:24:07 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO

 /****** Object:  StoredProcedure [dbo].[app_ProgramGamePointConversion_GetByActivityType]    Script Date: 03/10/2014 14:43:25 ******/






--Create the Select Proc
CREATE PROCEDURE [dbo].[app_ProgramGamePointConversion_GetByActivityType]
@PGID int,@ActivityTypeID int 
AS
   Select * from [ProgramGamePointConversion] Where ActivityTypeId = @ActivityTypeID and PGID = @PGID




GO

/****** Object:  StoredProcedure [dbo].[app_ProgramGamePointConversion_GetByID]    Script Date: 12/05/2014 14:24:07 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO

 /****** Object:  StoredProcedure [dbo].[app_ProgramGamePointConversion_GetByID]    Script Date: 03/10/2014 14:43:25 ******/






--Create the Select Proc
CREATE PROCEDURE [dbo].[app_ProgramGamePointConversion_GetByID]
@PGCID int 
AS
   Select * from [ProgramGamePointConversion] Where PGCID = @PGCID




GO

/****** Object:  StoredProcedure [dbo].[app_ProgramGamePointConversion_Insert]    Script Date: 12/05/2014 14:24:07 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO

 /****** Object:  StoredProcedure [dbo].[app_ProgramGamePointConversion_Insert]    Script Date: 03/10/2014 14:43:25 ******/






--Create the Insert Proc
CREATE PROCEDURE [dbo].[app_ProgramGamePointConversion_Insert] (
	 @PGID int 
	,@ActivityTypeId int 
	,@ActivityCount int 
	,@PointCount int 
	,@LastModDate datetime 
	,@LastModUser varchar (50)
	,@AddedDate datetime 
	,@AddedUser varchar (50)
	,@PGCID int output 
) AS
Begin
	Insert into ProgramGamePointConversion
		(PGID
		,ActivityTypeId
		,ActivityCount
		,PointCount
		,LastModDate
		,LastModUser
		,AddedDate
		,AddedUser
)
	VALUES
		(@PGID
		,@ActivityTypeId
		,@ActivityCount
		,@PointCount
		,@LastModDate
		,@LastModUser
		,@AddedDate
		,@AddedUser
)
	Select @PGCID = SCOPE_IDENTITY()
END




GO

/****** Object:  StoredProcedure [dbo].[app_ProgramGamePointConversion_Update]    Script Date: 12/05/2014 14:24:07 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO

 /****** Object:  StoredProcedure [dbo].[app_ProgramGamePointConversion_Update]    Script Date: 03/10/2014 14:43:25 ******/






--Create the Update Proc
CREATE PROCEDURE [dbo].[app_ProgramGamePointConversion_Update] (
	 @PGCID int 
	,@PGID int 
	,@ActivityTypeId int 
	,@ActivityCount int 
	,@PointCount int 
	,@LastModDate datetime 
	,@LastModUser varchar (50)
	,@AddedDate datetime 
	,@AddedUser varchar (50)

) AS
	Update ProgramGamePointConversion
	Set 
		PGID =  @PGID
		,ActivityTypeId =  @ActivityTypeId
		,ActivityCount =  @ActivityCount
		,PointCount =  @PointCount
		,LastModDate =  @LastModDate
		,LastModUser =  @LastModUser
		,AddedDate =  @AddedDate
		,AddedUser =  @AddedUser

	Where PGCID = @PGCID




GO

/****** Object:  StoredProcedure [dbo].[app_Programs_Delete]    Script Date: 12/05/2014 14:24:07 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO

--Create the Delete Proc
CREATE PROCEDURE [dbo].[app_Programs_Delete]
@PID int,
@PatronProgram int = 0,
@PrizeProgram int = 0,
@OfferProgram int = 0,
@BookListProgram int = 0

AS

UPDATE Patron set ProgID = @PatronProgram where ProgID = @PID  	
UPDATE PrizeTemplate set ProgID = @PatronProgram where ProgID = @PID  	
UPDATE Offer set ProgramId = @PatronProgram where ProgramId = @PID  	
UPDATE BookList set ProgID = @PatronProgram where ProgID = @PID  	

DELETE from ProgramCodes where PID = @PID
DELETE from ProgramGamePointConversion where PGID = @PID
--DELETE from ProgramCodes where PID = @PID

	Declare @TenID int
	select @TenID = TenID from Programs where PID = @PID


	Delete from [Programs] Where PID = @PID

	exec [app_Programs_Reorder] @TenID

GO

/****** Object:  StoredProcedure [dbo].[app_Programs_GetAll]    Script Date: 12/05/2014 14:24:07 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO

--Create the Select Proc
CREATE PROCEDURE [dbo].[app_Programs_GetAll]
@TenID int = null
AS
   Select * , (select COUNT(1) from Patron where Patron.ProgID = Programs.PID) as ParticipantCount
   from [Programs] where (TenID = @TenID or @TenID is null)




GO

/****** Object:  StoredProcedure [dbo].[app_Programs_GetAllActive]    Script Date: 12/05/2014 14:24:07 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO

CREATE PROCEDURE [dbo].[app_Programs_GetAllActive]
@TenID int = null
AS
   Select * , (select COUNT(1) from Patron where Patron.ProgID = Programs.PID) as ParticipantCount
   , (Select isnull(Max(POrder),1) from Programs)  as MAX
   from [Programs]
   where 
	IsActive = 1
	AND (TenID = @TenID or @TenID is null)
   order by POrder Asc
   
   




GO

/****** Object:  StoredProcedure [dbo].[app_Programs_GetAllOrdered]    Script Date: 12/05/2014 14:24:07 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO

--Create the Select Proc
CREATE PROCEDURE [dbo].[app_Programs_GetAllOrdered]
@TenID int = null
AS
   Select * , (select COUNT(1) from Patron where Patron.ProgID = Programs.PID) as ParticipantCount
   , (Select isnull(Max(POrder),1) from Programs)  as MAX
   from [Programs] where (TenID = @TenID or @TenID is null)
   order by POrder Asc




GO

/****** Object:  StoredProcedure [dbo].[app_Programs_GetAllTabs]    Script Date: 12/05/2014 14:24:07 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO

CREATE PROCEDURE [dbo].[app_Programs_GetAllTabs]
@TenID int = null
AS
   Select * , (select COUNT(1) from Patron where Patron.ProgID = Programs.PID) as ParticipantCount
   , (Select isnull(Max(POrder),1) from Programs)  as MAX
   from [Programs]
   where 
	IsActive = 1
	and IsHidden = 0  
	AND (TenID = @TenID or @TenID is null)
   order by POrder Asc
   
   




GO

/****** Object:  StoredProcedure [dbo].[app_Programs_GetByID]    Script Date: 12/05/2014 14:24:07 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO

 /****** Object:  StoredProcedure [dbo].[app_Programs_GetByID]    Script Date: 03/10/2014 14:43:25 ******/






--Create the Select Proc
CREATE PROCEDURE [dbo].[app_Programs_GetByID]
@PID int 
AS
   Select * from [Programs] Where PID = @PID




GO

/****** Object:  StoredProcedure [dbo].[app_Programs_GetDefaultProgramForAgeAndGrade]    Script Date: 12/05/2014 14:24:07 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO


CREATE PROCEDURE [dbo].[app_Programs_GetDefaultProgramForAgeAndGrade]
 @Age int = -1
,@Grade int = -1
,@TenID int = null
AS

declare @ID int

select PID, Porder, MaxAge, MaxGrade, TabName
into #Temp
from [Programs] where (TenID = @TenID or @TenID is null)

if (@Grade = -1 And @Age > -1)
begin
   Select top 1 @ID= PID
   from #Temp
   where 
	MaxAge >= @Age
   order by  MaxAge asc, POrder Asc
   --select @ID

end
else
if (@Grade > -1 And @Age = -1)
begin
   Select top 1 @ID= PID
   from #Temp
   where 
	MaxGrade >= @Grade
   order by  MaxAge asc, POrder Asc
   --select @ID
end
else
begin
   Select top 1 @ID= PID
   from [Programs]
   where 
	IsActive = 1
	and IsHidden = 0  
   order by POrder Asc
   --select @ID
end

if (@ID is null) 
   Select top 1 @ID= PID
   from [Programs]
   where 
	IsActive = 1
	and IsHidden = 0  
   order by POrder Asc
   --select @ID

select @ID
select * from #temp order by  MaxAge asc, POrder Asc
   return 0

GO

/****** Object:  StoredProcedure [dbo].[app_Programs_GetDefaultProgramID]    Script Date: 12/05/2014 14:24:07 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO

CREATE PROCEDURE [dbo].[app_Programs_GetDefaultProgramID]
@TenID int = null
AS
	declare @ID int
   Select top 1 @ID= PID
   from [Programs]
   where 
	IsActive = 1
	and IsHidden = 0  
	AND (TenID = @TenID or @TenID is null)
   order by POrder Asc
   select @ID
   return 0




GO

/****** Object:  StoredProcedure [dbo].[app_Programs_GetProgramMinigames]    Script Date: 12/05/2014 14:24:07 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO

CREATE PROCEDURE [dbo].[app_Programs_GetProgramMinigames]
 @LevelIDs varchar(1000) = ''
,@WhichMG int = 0
,@DefaultMG int = 0
AS

if @WhichMG = 0

	select distinct x.MGID, x.GameName
	from (
		select mg.MGID, mg.GameName
			, -1 as LevelNumber from Minigame mg where mg.MGID = @DefaultMG
		union
		select mg.MGID, mg.GameName
			, pg.LevelNumber
			from Minigame mg join dbo.ProgramGameLevel pg
				on mg.MGID = pg.Minigame1ID 
			where pg.PGLID in
					(select * from [dbo].[fnSplitBigInt](@LevelIDs))
		--order by LevelNumber
	) as x
else
	select distinct x.MGID, x.GameName
	from (
		select mg.MGID, mg.GameName
			, -1 as LevelNumber from Minigame mg where mg.MGID = @DefaultMG
		union
		select mg.MGID, mg.GameName
			, pg.LevelNumber
			from Minigame mg join dbo.ProgramGameLevel pg
				on mg.MGID = pg.Minigame2ID 
			where pg.PGLID in
					(select * from [dbo].[fnSplitBigInt](@LevelIDs))
		--order by LevelNumber
	) as x
/*
-- deprecated when added the default board game minigames
		select mg.* 
			from Minigame mg join dbo.ProgramGameLevel pg
				on mg.MGID = pg.Minigame2ID 
			where pg.PGLID in 
					(select * from [dbo].[fnSplitBigInt](@LevelIDs))
		order by pg.LevelNumber					
*/

GO

/****** Object:  StoredProcedure [dbo].[app_Programs_Insert]    Script Date: 12/05/2014 14:24:07 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO


CREATE PROCEDURE [dbo].[app_Programs_Insert] (
	 @AdminName varchar (50)
	,@Title varchar (50)
	,@TabName varchar (20)
	,@POrder int 
	,@IsActive bit 
	,@IsHidden bit 
	,@StartDate datetime 
	,@EndDate datetime 
	,@MaxAge int 
	,@MaxGrade int 
	,@LoggingStart datetime 
	,@LoggingEnd datetime 
	,@ParentalConsentFlag bit 
	,@ParentalConsentText text 
	,@PatronReviewFlag bit 
	,@LogoutURL varchar (150)
	,@ProgramGameID int 
	,@HTML1 text 
	,@HTML2 text 
	,@HTML3 text 
	,@HTML4 text 
	,@HTML5 text 
	,@HTML6 text 
	,@BannerImage varchar (150)
	,@RegistrationBadgeID int 
	,@CompletionPoints int = 0
	,@LastModUser varchar (50)
	,@AddedDate datetime 
	,@AddedUser varchar (50)
	,@LastModDate datetime 
	,@TenID int = 0
,@FldInt1 int = 0
,@FldInt2 int = 0
,@FldInt3 int = 0
,@FldBit1 bit = 0
,@FldBit2 bit = 0
,@FldBit3 bit = 0
,@FldText1 text = ''
,@FldText2 text = ''
,@FldText3 text = ''
,@PreTestID int = 0
,@PostTestID int = 0
,@PreTestMandatory int = 0
,@PretestEndDate datetime 
,@PostTestStartDate datetime
	,@PID int output 
) AS
Begin
	Insert into Programs
		(AdminName
		,Title
		,TabName
		,POrder
		,IsActive
		,IsHidden
		,StartDate
		,EndDate
		,MaxAge
		,MaxGrade
		,LoggingStart
		,LoggingEnd
		,ParentalConsentFlag
		,ParentalConsentText
		,PatronReviewFlag
		,LogoutURL
		,ProgramGameID
		,HTML1
		,HTML2
		,HTML3
		,HTML4
		,HTML5
		,HTML6
		,BannerImage
		,RegistrationBadgeID,CompletionPoints
		,LastModUser
		,AddedDate
		,AddedUser
		,LastModDate
		,TenID, FldInt1, FldInt2, FldInt3, FldBit1, FldBit2, FldBit3, FldText1, FldText2, FldText3
		,PreTestID ,PostTestID ,PreTestMandatory ,PretestEndDate ,PostTestStartDate 
)
	VALUES
		(@AdminName
		,@Title
		,@TabName
		,(Select isnull(Max(POrder),0) +1 from Programs)
		,@IsActive
		,@IsHidden
		,@StartDate
		,@EndDate
		,@MaxAge
		,@MaxGrade
		,@LoggingStart
		,@LoggingEnd
		,@ParentalConsentFlag
		,@ParentalConsentText
		,@PatronReviewFlag
		,@LogoutURL
		,@ProgramGameID
		,@HTML1
		,@HTML2
		,@HTML3
		,@HTML4
		,@HTML5
		,@HTML6
		,@BannerImage
		,@RegistrationBadgeID,@CompletionPoints
		,@LastModUser
		,@AddedDate
		,@AddedUser
		,@LastModDate
		,@TenID, @FldInt1, @FldInt2, @FldInt3, @FldBit1, @FldBit2, @FldBit3, @FldText1, @FldText2, @FldText3	
		,@PreTestID ,@PostTestID ,@PreTestMandatory ,@PretestEndDate ,@PostTestStartDate	
)
	Select @PID = SCOPE_IDENTITY()
END

GO

/****** Object:  StoredProcedure [dbo].[app_Programs_MoveDn]    Script Date: 12/05/2014 14:24:07 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO

CREATE PROCEDURE [dbo].[app_Programs_MoveDn]
@PID int 
AS
	Declare @TenID int
	select @TenID = TenID from Programs where PID = @PID
	exec [dbo].[app_Programs_Reorder] @TenID
	
	Declare @CurrentRecordLocation int, @NextRecordID int
	Select @CurrentRecordLocation = POrder from Programs where PID = @PID
	if @CurrentRecordLocation < (Select MAX(POrder) from Programs Where  TenID = @TenID)
	begin
		Select @NextRecordID = PID from Programs where POrder = (@CurrentRecordLocation + 1) AND TenID = @TenID
		
		update Programs set POrder = @CurrentRecordLocation + 1
		where PID = @PID
	
		update Programs set POrder = @CurrentRecordLocation 
		where PID = @NextRecordID
	end

GO

/****** Object:  StoredProcedure [dbo].[app_Programs_MoveUp]    Script Date: 12/05/2014 14:24:07 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO

CREATE PROCEDURE [dbo].[app_Programs_MoveUp]
@PID int 
AS
	Declare @TenID int
	select @TenID = TenID from Programs where PID = @PID
	exec [dbo].[app_Programs_Reorder] @TenID
	
	Declare @CurrentRecordLocation int, @PreviousRecordID int
	Select @CurrentRecordLocation = POrder from Programs where PID = @PID
	if @CurrentRecordLocation > 1
	begin
		Select @PreviousRecordID = PID from Programs where POrder = (@CurrentRecordLocation - 1)  AND TenID = @TenID
		
		update Programs set POrder = @CurrentRecordLocation - 1
		where PID = @PID
	
		update Programs set POrder = @CurrentRecordLocation 
		where PID = @PreviousRecordID
	end

GO

/****** Object:  StoredProcedure [dbo].[app_Programs_Reorder]    Script Date: 12/05/2014 14:24:07 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO

CREATE Procedure [dbo].[app_Programs_Reorder]
@TenID int 
AS
	
	UPDATE Programs 
	SET POrder = rowNumber 
	FROM Programs
		INNER JOIN 
		(SELECT PID, POrder, row_number() OVER (ORDER BY POrder Asc) as rowNumber
			FROM Programs where TenID = @TenID) drRowNumbers ON drRowNumbers.PID = Programs.PID and TenID = @TenID
	

GO

/****** Object:  StoredProcedure [dbo].[app_Programs_Update]    Script Date: 12/05/2014 14:24:07 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO


CREATE PROCEDURE [dbo].[app_Programs_Update] (
	 @PID int 
	,@AdminName varchar (50)
	,@Title varchar (50)
	,@TabName varchar (20)
	,@POrder int 
	,@IsActive bit 
	,@IsHidden bit 
	,@StartDate datetime 
	,@EndDate datetime 
	,@MaxAge int 
	,@MaxGrade int 
	,@LoggingStart datetime 
	,@LoggingEnd datetime 
	,@ParentalConsentFlag bit 
	,@ParentalConsentText text 
	,@PatronReviewFlag bit 
	,@LogoutURL varchar (150)
	,@ProgramGameID int 
	,@HTML1 text 
	,@HTML2 text 
	,@HTML3 text 
	,@HTML4 text 
	,@HTML5 text 
	,@HTML6 text 
	,@BannerImage varchar (150)
	,@RegistrationBadgeID int
	,@CompletionPoints int = 0
	,@LastModUser varchar (50)
	,@AddedDate datetime 
	,@AddedUser varchar (50)
	,@LastModDate datetime 
,@TenID int = 0
,@FldInt1 int = 0
,@FldInt2 int = 0
,@FldInt3 int = 0
,@FldBit1 bit = 0
,@FldBit2 bit = 0
,@FldBit3 bit = 0
,@FldText1 text = ''
,@FldText2 text = ''
,@FldText3 text = ''
,@PreTestID int = 0
,@PostTestID int = 0
,@PreTestMandatory int = 0
,@PretestEndDate datetime 
,@PostTestStartDate datetime
) AS
	Update Programs
	Set 
		AdminName =  @AdminName
		,Title =  @Title
		,TabName =  @TabName
		,POrder =  @POrder
		,IsActive =  @IsActive
		,IsHidden =  @IsHidden
		,StartDate =  @StartDate
		,EndDate =  @EndDate
		,MaxAge =  @MaxAge
		,MaxGrade =  @MaxGrade
		,LoggingStart =  @LoggingStart
		,LoggingEnd =  @LoggingEnd
		,ParentalConsentFlag =  @ParentalConsentFlag
		,ParentalConsentText =  @ParentalConsentText
		,PatronReviewFlag =  @PatronReviewFlag
		,LogoutURL =  @LogoutURL
		,ProgramGameID =  @ProgramGameID
		,HTML1 =  @HTML1
		,HTML2 =  @HTML2
		,HTML3 =  @HTML3
		,HTML4 =  @HTML4
		,HTML5 =  @HTML5
		,HTML6 =  @HTML6
		,BannerImage =  @BannerImage
		,RegistrationBadgeID =  @RegistrationBadgeID
		,CompletionPoints = @CompletionPoints
		,LastModUser =  @LastModUser
		,AddedDate =  @AddedDate
		,AddedUser =  @AddedUser
		,LastModDate =  @LastModDate
,TenID = @TenID
,FldInt1 = @FldInt1 
,FldInt2 = @FldInt2
,FldInt3 = @FldInt3 
,FldBit1 = @FldBit1
,FldBit2 = @FldBit2
,FldBit3 = @FldBit3
,FldText1 = @FldText1
,FldText2 = @FldText2
,FldText3 = @FldText3 
,PreTestID = @PreTestID
,PostTestID = @PostTestID 
,PreTestMandatory = @PreTestMandatory 
,PretestEndDate = @PretestEndDate  
,PostTestStartDate = @PostTestStartDate 
	Where PID = @PID AND TenID = @TenID

GO

/****** Object:  StoredProcedure [dbo].[app_RegistrationSettings_Delete]    Script Date: 12/05/2014 14:24:07 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO

 /****** Object:  StoredProcedure [dbo].[app_RegistrationSettings_Delete]    Script Date: 03/10/2014 14:43:25 ******/






--Create the Delete Proc
CREATE PROCEDURE [dbo].[app_RegistrationSettings_Delete]
@RID int 
AS
   Delete from [RegistrationSettings] Where RID = @RID




GO

/****** Object:  StoredProcedure [dbo].[app_RegistrationSettings_GetAll]    Script Date: 12/05/2014 14:24:07 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO

 /****** Object:  StoredProcedure [dbo].[app_RegistrationSettings_GetAll]    Script Date: 03/10/2014 14:43:25 ******/






--Create the Select Proc
CREATE PROCEDURE [dbo].[app_RegistrationSettings_GetAll]
@TenID int = null
AS
   Select * from [RegistrationSettings] where (TenID = @TenID or @TenID is null)




GO

/****** Object:  StoredProcedure [dbo].[app_RegistrationSettings_GetByID]    Script Date: 12/05/2014 14:24:07 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO

 /****** Object:  StoredProcedure [dbo].[app_RegistrationSettings_GetByID]    Script Date: 03/10/2014 14:43:25 ******/






--Create the Select Proc
CREATE PROCEDURE [dbo].[app_RegistrationSettings_GetByID]
@TenID int 
AS
   Select * from [RegistrationSettings] Where TenID = @TenID




GO

/****** Object:  StoredProcedure [dbo].[app_RegistrationSettings_Insert]    Script Date: 12/05/2014 14:24:07 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO



CREATE PROCEDURE [dbo].[app_RegistrationSettings_Insert] (
	 @Literacy1Label varchar (50)
	,@Literacy2Label varchar (50)
	,@DOB_Prompt bit 
	,@Age_Prompt bit 
	,@SchoolGrade_Prompt bit 
	,@FirstName_Prompt bit 
	,@MiddleName_Prompt bit 
	,@LastName_Prompt bit 
	,@Gender_Prompt bit 
	,@EmailAddress_Prompt bit 
	,@PhoneNumber_Prompt bit 
	,@StreetAddress1_Prompt bit 
	,@StreetAddress2_Prompt bit 
	,@City_Prompt bit 
	,@State_Prompt bit 
	,@ZipCode_Prompt bit 
	,@Country_Prompt bit 
	,@County_Prompt bit 
	,@ParentGuardianFirstName_Prompt bit 
	,@ParentGuardianLastName_Prompt bit 
	,@ParentGuardianMiddleName_Prompt bit 
	,@PrimaryLibrary_Prompt bit 
	,@LibraryCard_Prompt bit 
	,@SchoolName_Prompt bit 
	,@District_Prompt bit 
	,@Teacher_Prompt bit 
	,@GroupTeamName_Prompt bit 
	,@SchoolType_Prompt bit 
	,@LiteracyLevel1_Prompt bit 
	,@LiteracyLevel2_Prompt bit 
	,@ParentPermFlag_Prompt bit 
	,@Over18Flag_Prompt bit 
	,@ShareFlag_Prompt bit 
	,@TermsOfUseflag_Prompt bit 
	,@Custom1_Prompt bit 
	,@Custom2_Prompt bit 
	,@Custom3_Prompt bit 
	,@Custom4_Prompt bit 
	,@Custom5_Prompt bit 
	,@DOB_Req bit 
	,@Age_Req bit 
	,@SchoolGrade_Req bit 
	,@FirstName_Req bit 
	,@MiddleName_Req bit 
	,@LastName_Req bit 
	,@Gender_Req bit 
	,@EmailAddress_Req bit 
	,@PhoneNumber_Req bit 
	,@StreetAddress1_Req bit 
	,@StreetAddress2_Req bit 
	,@City_Req bit 
	,@State_Req bit 
	,@ZipCode_Req bit 
	,@Country_Req bit 
	,@County_Req bit 
	,@ParentGuardianFirstName_Req bit 
	,@ParentGuardianLastName_Req bit 
	,@ParentGuardianMiddleName_Req bit 
	,@PrimaryLibrary_Req bit 
	,@LibraryCard_Req bit 
	,@SchoolName_Req bit 
	,@District_Req bit 
	,@Teacher_Req bit 
	,@GroupTeamName_Req bit 
	,@SchoolType_Req bit 
	,@LiteracyLevel1_Req bit 
	,@LiteracyLevel2_Req bit 
	,@ParentPermFlag_Req bit 
	,@Over18Flag_Req bit 
	,@ShareFlag_Req bit 
	,@TermsOfUseflag_Req bit 
	,@Custom1_Req bit 
	,@Custom2_Req bit 
	,@Custom3_Req bit 
	,@Custom4_Req bit 
	,@Custom5_Req bit 
	,@DOB_Show bit 
	,@Age_Show bit 
	,@SchoolGrade_Show bit 
	,@FirstName_Show bit 
	,@MiddleName_Show bit 
	,@LastName_Show bit 
	,@Gender_Show bit 
	,@EmailAddress_Show bit 
	,@PhoneNumber_Show bit 
	,@StreetAddress1_Show bit 
	,@StreetAddress2_Show bit 
	,@City_Show bit 
	,@State_Show bit 
	,@ZipCode_Show bit 
	,@Country_Show bit 
	,@County_Show bit 
	,@ParentGuardianFirstName_Show bit 
	,@ParentGuardianLastName_Show bit 
	,@ParentGuardianMiddleName_Show bit 
	,@PrimaryLibrary_Show bit 
	,@LibraryCard_Show bit 
	,@SchoolName_Show bit 
	,@District_Show bit 
	,@Teacher_Show bit 
	,@GroupTeamName_Show bit 
	,@SchoolType_Show bit 
	,@LiteracyLevel1_Show bit 
	,@LiteracyLevel2_Show bit 
	,@ParentPermFlag_Show bit 
	,@Over18Flag_Show bit 
	,@ShareFlag_Show bit 
	,@TermsOfUseflag_Show bit 
	,@Custom1_Show bit 
	,@Custom2_Show bit 
	,@Custom3_Show bit 
	,@Custom4_Show bit 
	,@Custom5_Show bit 
	,@DOB_Edit bit 
	,@Age_Edit bit 
	,@SchoolGrade_Edit bit 
	,@FirstName_Edit bit 
	,@MiddleName_Edit bit 
	,@LastName_Edit bit 
	,@Gender_Edit bit 
	,@EmailAddress_Edit bit 
	,@PhoneNumber_Edit bit 
	,@StreetAddress1_Edit bit 
	,@StreetAddress2_Edit bit 
	,@City_Edit bit 
	,@State_Edit bit 
	,@ZipCode_Edit bit 
	,@Country_Edit bit 
	,@County_Edit bit 
	,@ParentGuardianFirstName_Edit bit 
	,@ParentGuardianLastName_Edit bit 
	,@ParentGuardianMiddleName_Edit bit 
	,@PrimaryLibrary_Edit bit 
	,@LibraryCard_Edit bit 
	,@SchoolName_Edit bit 
	,@District_Edit bit 
	,@Teacher_Edit bit 
	,@GroupTeamName_Edit bit 
	,@SchoolType_Edit bit 
	,@LiteracyLevel1_Edit bit 
	,@LiteracyLevel2_Edit bit 
	,@ParentPermFlag_Edit bit 
	,@Over18Flag_Edit bit 
	,@ShareFlag_Edit bit 
	,@TermsOfUseflag_Edit bit 
	,@Custom1_Edit bit 
	,@Custom2_Edit bit 
	,@Custom3_Edit bit 
	,@Custom4_Edit bit 
	,@Custom5_Edit bit 
	,@LastModDate datetime 
	,@LastModUser varchar (50)
	,@AddedDate datetime 
	,@AddedUser varchar (50)
	,@SDistrict_Prompt bit
	,@SDistrict_Req bit
	,@SDistrict_Show bit
	,@SDistrict_Edit bit	
,@TenID int = 0
,@FldInt1 int = 0
,@FldInt2 int = 0
,@FldInt3 int = 0
,@FldBit1 bit = 0
,@FldBit2 bit = 0
,@FldBit3 bit = 0
,@FldText1 text = ''
,@FldText2 text = ''
,@FldText3 text = ''	
	,@RID int output 
) AS
Begin
	Insert into RegistrationSettings
		(Literacy1Label
		,Literacy2Label
		,DOB_Prompt
		,Age_Prompt
		,SchoolGrade_Prompt
		,FirstName_Prompt
		,MiddleName_Prompt
		,LastName_Prompt
		,Gender_Prompt
		,EmailAddress_Prompt
		,PhoneNumber_Prompt
		,StreetAddress1_Prompt
		,StreetAddress2_Prompt
		,City_Prompt
		,State_Prompt
		,ZipCode_Prompt
		,Country_Prompt
		,County_Prompt
		,ParentGuardianFirstName_Prompt
		,ParentGuardianLastName_Prompt
		,ParentGuardianMiddleName_Prompt
		,PrimaryLibrary_Prompt
		,LibraryCard_Prompt
		,SchoolName_Prompt
		,District_Prompt
		,Teacher_Prompt
		,GroupTeamName_Prompt
		,SchoolType_Prompt
		,LiteracyLevel1_Prompt
		,LiteracyLevel2_Prompt
		,ParentPermFlag_Prompt
		,Over18Flag_Prompt
		,ShareFlag_Prompt
		,TermsOfUseflag_Prompt
		,Custom1_Prompt
		,Custom2_Prompt
		,Custom3_Prompt
		,Custom4_Prompt
		,Custom5_Prompt
		,DOB_Req
		,Age_Req
		,SchoolGrade_Req
		,FirstName_Req
		,MiddleName_Req
		,LastName_Req
		,Gender_Req
		,EmailAddress_Req
		,PhoneNumber_Req
		,StreetAddress1_Req
		,StreetAddress2_Req
		,City_Req
		,State_Req
		,ZipCode_Req
		,Country_Req
		,County_Req
		,ParentGuardianFirstName_Req
		,ParentGuardianLastName_Req
		,ParentGuardianMiddleName_Req
		,PrimaryLibrary_Req
		,LibraryCard_Req
		,SchoolName_Req
		,District_Req
		,Teacher_Req
		,GroupTeamName_Req
		,SchoolType_Req
		,LiteracyLevel1_Req
		,LiteracyLevel2_Req
		,ParentPermFlag_Req
		,Over18Flag_Req
		,ShareFlag_Req
		,TermsOfUseflag_Req
		,Custom1_Req
		,Custom2_Req
		,Custom3_Req
		,Custom4_Req
		,Custom5_Req
		,DOB_Show
		,Age_Show
		,SchoolGrade_Show
		,FirstName_Show
		,MiddleName_Show
		,LastName_Show
		,Gender_Show
		,EmailAddress_Show
		,PhoneNumber_Show
		,StreetAddress1_Show
		,StreetAddress2_Show
		,City_Show
		,State_Show
		,ZipCode_Show
		,Country_Show
		,County_Show
		,ParentGuardianFirstName_Show
		,ParentGuardianLastName_Show
		,ParentGuardianMiddleName_Show
		,PrimaryLibrary_Show
		,LibraryCard_Show
		,SchoolName_Show
		,District_Show
		,Teacher_Show
		,GroupTeamName_Show
		,SchoolType_Show
		,LiteracyLevel1_Show
		,LiteracyLevel2_Show
		,ParentPermFlag_Show
		,Over18Flag_Show
		,ShareFlag_Show
		,TermsOfUseflag_Show
		,Custom1_Show
		,Custom2_Show
		,Custom3_Show
		,Custom4_Show
		,Custom5_Show
		,DOB_Edit
		,Age_Edit
		,SchoolGrade_Edit
		,FirstName_Edit
		,MiddleName_Edit
		,LastName_Edit
		,Gender_Edit
		,EmailAddress_Edit
		,PhoneNumber_Edit
		,StreetAddress1_Edit
		,StreetAddress2_Edit
		,City_Edit
		,State_Edit
		,ZipCode_Edit
		,Country_Edit
		,County_Edit
		,ParentGuardianFirstName_Edit
		,ParentGuardianLastName_Edit
		,ParentGuardianMiddleName_Edit
		,PrimaryLibrary_Edit
		,LibraryCard_Edit
		,SchoolName_Edit
		,District_Edit
		,Teacher_Edit
		,GroupTeamName_Edit
		,SchoolType_Edit
		,LiteracyLevel1_Edit
		,LiteracyLevel2_Edit
		,ParentPermFlag_Edit
		,Over18Flag_Edit
		,ShareFlag_Edit
		,TermsOfUseflag_Edit
		,Custom1_Edit
		,Custom2_Edit
		,Custom3_Edit
		,Custom4_Edit
		,Custom5_Edit
		,LastModDate
		,LastModUser
		,AddedDate
		,AddedUser
		,SDistrict_Prompt 
		,SDistrict_Req 
		,SDistrict_Show 
		,SDistrict_Edit 
		
		,TenID, FldInt1, FldInt2, FldInt3, FldBit1, FldBit2, FldBit3, FldText1, FldText2, FldText3
)
	VALUES
		(@Literacy1Label
		,@Literacy2Label
		,@DOB_Prompt
		,@Age_Prompt
		,@SchoolGrade_Prompt
		,@FirstName_Prompt
		,@MiddleName_Prompt
		,@LastName_Prompt
		,@Gender_Prompt
		,@EmailAddress_Prompt
		,@PhoneNumber_Prompt
		,@StreetAddress1_Prompt
		,@StreetAddress2_Prompt
		,@City_Prompt
		,@State_Prompt
		,@ZipCode_Prompt
		,@Country_Prompt
		,@County_Prompt
		,@ParentGuardianFirstName_Prompt
		,@ParentGuardianLastName_Prompt
		,@ParentGuardianMiddleName_Prompt
		,@PrimaryLibrary_Prompt
		,@LibraryCard_Prompt
		,@SchoolName_Prompt
		,@District_Prompt
		,@Teacher_Prompt
		,@GroupTeamName_Prompt
		,@SchoolType_Prompt
		,@LiteracyLevel1_Prompt
		,@LiteracyLevel2_Prompt
		,@ParentPermFlag_Prompt
		,@Over18Flag_Prompt
		,@ShareFlag_Prompt
		,@TermsOfUseflag_Prompt
		,@Custom1_Prompt
		,@Custom2_Prompt
		,@Custom3_Prompt
		,@Custom4_Prompt
		,@Custom5_Prompt
		,@DOB_Req
		,@Age_Req
		,@SchoolGrade_Req
		,@FirstName_Req
		,@MiddleName_Req
		,@LastName_Req
		,@Gender_Req
		,@EmailAddress_Req
		,@PhoneNumber_Req
		,@StreetAddress1_Req
		,@StreetAddress2_Req
		,@City_Req
		,@State_Req
		,@ZipCode_Req
		,@Country_Req
		,@County_Req
		,@ParentGuardianFirstName_Req
		,@ParentGuardianLastName_Req
		,@ParentGuardianMiddleName_Req
		,@PrimaryLibrary_Req
		,@LibraryCard_Req
		,@SchoolName_Req
		,@District_Req
		,@Teacher_Req
		,@GroupTeamName_Req
		,@SchoolType_Req
		,@LiteracyLevel1_Req
		,@LiteracyLevel2_Req
		,@ParentPermFlag_Req
		,@Over18Flag_Req
		,@ShareFlag_Req
		,@TermsOfUseflag_Req
		,@Custom1_Req
		,@Custom2_Req
		,@Custom3_Req
		,@Custom4_Req
		,@Custom5_Req
		,@DOB_Show
		,@Age_Show
		,@SchoolGrade_Show
		,@FirstName_Show
		,@MiddleName_Show
		,@LastName_Show
		,@Gender_Show
		,@EmailAddress_Show
		,@PhoneNumber_Show
		,@StreetAddress1_Show
		,@StreetAddress2_Show
		,@City_Show
		,@State_Show
		,@ZipCode_Show
		,@Country_Show
		,@County_Show
		,@ParentGuardianFirstName_Show
		,@ParentGuardianLastName_Show
		,@ParentGuardianMiddleName_Show
		,@PrimaryLibrary_Show
		,@LibraryCard_Show
		,@SchoolName_Show
		,@District_Show
		,@Teacher_Show
		,@GroupTeamName_Show
		,@SchoolType_Show
		,@LiteracyLevel1_Show
		,@LiteracyLevel2_Show
		,@ParentPermFlag_Show
		,@Over18Flag_Show
		,@ShareFlag_Show
		,@TermsOfUseflag_Show
		,@Custom1_Show
		,@Custom2_Show
		,@Custom3_Show
		,@Custom4_Show
		,@Custom5_Show
		,@DOB_Edit
		,@Age_Edit
		,@SchoolGrade_Edit
		,@FirstName_Edit
		,@MiddleName_Edit
		,@LastName_Edit
		,@Gender_Edit
		,@EmailAddress_Edit
		,@PhoneNumber_Edit
		,@StreetAddress1_Edit
		,@StreetAddress2_Edit
		,@City_Edit
		,@State_Edit
		,@ZipCode_Edit
		,@Country_Edit
		,@County_Edit
		,@ParentGuardianFirstName_Edit
		,@ParentGuardianLastName_Edit
		,@ParentGuardianMiddleName_Edit
		,@PrimaryLibrary_Edit
		,@LibraryCard_Edit
		,@SchoolName_Edit
		,@District_Edit
		,@Teacher_Edit
		,@GroupTeamName_Edit
		,@SchoolType_Edit
		,@LiteracyLevel1_Edit
		,@LiteracyLevel2_Edit
		,@ParentPermFlag_Edit
		,@Over18Flag_Edit
		,@ShareFlag_Edit
		,@TermsOfUseflag_Edit
		,@Custom1_Edit
		,@Custom2_Edit
		,@Custom3_Edit
		,@Custom4_Edit
		,@Custom5_Edit
		,@LastModDate
		,@LastModUser
		,@AddedDate
		,@AddedUser
		,@SDistrict_Prompt 
		,@SDistrict_Req 
		,@SDistrict_Show 
		,@SDistrict_Edit 
		,@TenID, @FldInt1, @FldInt2, @FldInt3, @FldBit1, @FldBit2, @FldBit3, @FldText1, @FldText2, @FldText3		
)
	Select @RID = SCOPE_IDENTITY()
END


GO

/****** Object:  StoredProcedure [dbo].[app_RegistrationSettings_Update]    Script Date: 12/05/2014 14:24:08 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO


CREATE PROCEDURE [dbo].[app_RegistrationSettings_Update] (
	 @RID int 
	,@Literacy1Label varchar (50)
	,@Literacy2Label varchar (50)
	,@DOB_Prompt bit 
	,@Age_Prompt bit 
	,@SchoolGrade_Prompt bit 
	,@FirstName_Prompt bit 
	,@MiddleName_Prompt bit 
	,@LastName_Prompt bit 
	,@Gender_Prompt bit 
	,@EmailAddress_Prompt bit 
	,@PhoneNumber_Prompt bit 
	,@StreetAddress1_Prompt bit 
	,@StreetAddress2_Prompt bit 
	,@City_Prompt bit 
	,@State_Prompt bit 
	,@ZipCode_Prompt bit 
	,@Country_Prompt bit 
	,@County_Prompt bit 
	,@ParentGuardianFirstName_Prompt bit 
	,@ParentGuardianLastName_Prompt bit 
	,@ParentGuardianMiddleName_Prompt bit 
	,@PrimaryLibrary_Prompt bit 
	,@LibraryCard_Prompt bit 
	,@SchoolName_Prompt bit 
	,@District_Prompt bit 
	,@Teacher_Prompt bit 
	,@GroupTeamName_Prompt bit 
	,@SchoolType_Prompt bit 
	,@LiteracyLevel1_Prompt bit 
	,@LiteracyLevel2_Prompt bit 
	,@ParentPermFlag_Prompt bit 
	,@Over18Flag_Prompt bit 
	,@ShareFlag_Prompt bit 
	,@TermsOfUseflag_Prompt bit 
	,@Custom1_Prompt bit 
	,@Custom2_Prompt bit 
	,@Custom3_Prompt bit 
	,@Custom4_Prompt bit 
	,@Custom5_Prompt bit 
	,@DOB_Req bit 
	,@Age_Req bit 
	,@SchoolGrade_Req bit 
	,@FirstName_Req bit 
	,@MiddleName_Req bit 
	,@LastName_Req bit 
	,@Gender_Req bit 
	,@EmailAddress_Req bit 
	,@PhoneNumber_Req bit 
	,@StreetAddress1_Req bit 
	,@StreetAddress2_Req bit 
	,@City_Req bit 
	,@State_Req bit 
	,@ZipCode_Req bit 
	,@Country_Req bit 
	,@County_Req bit 
	,@ParentGuardianFirstName_Req bit 
	,@ParentGuardianLastName_Req bit 
	,@ParentGuardianMiddleName_Req bit 
	,@PrimaryLibrary_Req bit 
	,@LibraryCard_Req bit 
	,@SchoolName_Req bit 
	,@District_Req bit 
	,@Teacher_Req bit 
	,@GroupTeamName_Req bit 
	,@SchoolType_Req bit 
	,@LiteracyLevel1_Req bit 
	,@LiteracyLevel2_Req bit 
	,@ParentPermFlag_Req bit 
	,@Over18Flag_Req bit 
	,@ShareFlag_Req bit 
	,@TermsOfUseflag_Req bit 
	,@Custom1_Req bit 
	,@Custom2_Req bit 
	,@Custom3_Req bit 
	,@Custom4_Req bit 
	,@Custom5_Req bit 
	,@DOB_Show bit 
	,@Age_Show bit 
	,@SchoolGrade_Show bit 
	,@FirstName_Show bit 
	,@MiddleName_Show bit 
	,@LastName_Show bit 
	,@Gender_Show bit 
	,@EmailAddress_Show bit 
	,@PhoneNumber_Show bit 
	,@StreetAddress1_Show bit 
	,@StreetAddress2_Show bit 
	,@City_Show bit 
	,@State_Show bit 
	,@ZipCode_Show bit 
	,@Country_Show bit 
	,@County_Show bit 
	,@ParentGuardianFirstName_Show bit 
	,@ParentGuardianLastName_Show bit 
	,@ParentGuardianMiddleName_Show bit 
	,@PrimaryLibrary_Show bit 
	,@LibraryCard_Show bit 
	,@SchoolName_Show bit 
	,@District_Show bit 
	,@Teacher_Show bit 
	,@GroupTeamName_Show bit 
	,@SchoolType_Show bit 
	,@LiteracyLevel1_Show bit 
	,@LiteracyLevel2_Show bit 
	,@ParentPermFlag_Show bit 
	,@Over18Flag_Show bit 
	,@ShareFlag_Show bit 
	,@TermsOfUseflag_Show bit 
	,@Custom1_Show bit 
	,@Custom2_Show bit 
	,@Custom3_Show bit 
	,@Custom4_Show bit 
	,@Custom5_Show bit 
	,@DOB_Edit bit 
	,@Age_Edit bit 
	,@SchoolGrade_Edit bit 
	,@FirstName_Edit bit 
	,@MiddleName_Edit bit 
	,@LastName_Edit bit 
	,@Gender_Edit bit 
	,@EmailAddress_Edit bit 
	,@PhoneNumber_Edit bit 
	,@StreetAddress1_Edit bit 
	,@StreetAddress2_Edit bit 
	,@City_Edit bit 
	,@State_Edit bit 
	,@ZipCode_Edit bit 
	,@Country_Edit bit 
	,@County_Edit bit 
	,@ParentGuardianFirstName_Edit bit 
	,@ParentGuardianLastName_Edit bit 
	,@ParentGuardianMiddleName_Edit bit 
	,@PrimaryLibrary_Edit bit 
	,@LibraryCard_Edit bit 
	,@SchoolName_Edit bit 
	,@District_Edit bit 
	,@Teacher_Edit bit 
	,@GroupTeamName_Edit bit 
	,@SchoolType_Edit bit 
	,@LiteracyLevel1_Edit bit 
	,@LiteracyLevel2_Edit bit 
	,@ParentPermFlag_Edit bit 
	,@Over18Flag_Edit bit 
	,@ShareFlag_Edit bit 
	,@TermsOfUseflag_Edit bit 
	,@Custom1_Edit bit 
	,@Custom2_Edit bit 
	,@Custom3_Edit bit 
	,@Custom4_Edit bit 
	,@Custom5_Edit bit 
	,@LastModDate datetime 
	,@LastModUser varchar (50)
	,@AddedDate datetime 
	,@AddedUser varchar (50)
	,@SDistrict_Prompt bit
	,@SDistrict_Req bit
	,@SDistrict_Show bit
	,@SDistrict_Edit bit
,@TenID int = 0
,@FldInt1 int = 0
,@FldInt2 int = 0
,@FldInt3 int = 0
,@FldBit1 bit = 0
,@FldBit2 bit = 0
,@FldBit3 bit = 0
,@FldText1 text = ''
,@FldText2 text = ''
,@FldText3 text = ''	
) AS
	Update RegistrationSettings
	Set 
		Literacy1Label =  @Literacy1Label
		,Literacy2Label =  @Literacy2Label
		,DOB_Prompt =  @DOB_Prompt
		,Age_Prompt =  @Age_Prompt
		,SchoolGrade_Prompt =  @SchoolGrade_Prompt
		,FirstName_Prompt =  @FirstName_Prompt
		,MiddleName_Prompt =  @MiddleName_Prompt
		,LastName_Prompt =  @LastName_Prompt
		,Gender_Prompt =  @Gender_Prompt
		,EmailAddress_Prompt =  @EmailAddress_Prompt
		,PhoneNumber_Prompt =  @PhoneNumber_Prompt
		,StreetAddress1_Prompt =  @StreetAddress1_Prompt
		,StreetAddress2_Prompt =  @StreetAddress2_Prompt
		,City_Prompt =  @City_Prompt
		,State_Prompt =  @State_Prompt
		,ZipCode_Prompt =  @ZipCode_Prompt
		,Country_Prompt =  @Country_Prompt
		,County_Prompt =  @County_Prompt
		,ParentGuardianFirstName_Prompt =  @ParentGuardianFirstName_Prompt
		,ParentGuardianLastName_Prompt =  @ParentGuardianLastName_Prompt
		,ParentGuardianMiddleName_Prompt =  @ParentGuardianMiddleName_Prompt
		,PrimaryLibrary_Prompt =  @PrimaryLibrary_Prompt
		,LibraryCard_Prompt =  @LibraryCard_Prompt
		,SchoolName_Prompt =  @SchoolName_Prompt
		,District_Prompt =  @District_Prompt
		,Teacher_Prompt =  @Teacher_Prompt
		,GroupTeamName_Prompt =  @GroupTeamName_Prompt
		,SchoolType_Prompt =  @SchoolType_Prompt
		,LiteracyLevel1_Prompt =  @LiteracyLevel1_Prompt
		,LiteracyLevel2_Prompt =  @LiteracyLevel2_Prompt
		,ParentPermFlag_Prompt =  @ParentPermFlag_Prompt
		,Over18Flag_Prompt =  @Over18Flag_Prompt
		,ShareFlag_Prompt =  @ShareFlag_Prompt
		,TermsOfUseflag_Prompt =  @TermsOfUseflag_Prompt
		,Custom1_Prompt =  @Custom1_Prompt
		,Custom2_Prompt =  @Custom2_Prompt
		,Custom3_Prompt =  @Custom3_Prompt
		,Custom4_Prompt =  @Custom4_Prompt
		,Custom5_Prompt =  @Custom5_Prompt
		,DOB_Req =  @DOB_Req
		,Age_Req =  @Age_Req
		,SchoolGrade_Req =  @SchoolGrade_Req
		,FirstName_Req =  @FirstName_Req
		,MiddleName_Req =  @MiddleName_Req
		,LastName_Req =  @LastName_Req
		,Gender_Req =  @Gender_Req
		,EmailAddress_Req =  @EmailAddress_Req
		,PhoneNumber_Req =  @PhoneNumber_Req
		,StreetAddress1_Req =  @StreetAddress1_Req
		,StreetAddress2_Req =  @StreetAddress2_Req
		,City_Req =  @City_Req
		,State_Req =  @State_Req
		,ZipCode_Req =  @ZipCode_Req
		,Country_Req =  @Country_Req
		,County_Req =  @County_Req
		,ParentGuardianFirstName_Req =  @ParentGuardianFirstName_Req
		,ParentGuardianLastName_Req =  @ParentGuardianLastName_Req
		,ParentGuardianMiddleName_Req =  @ParentGuardianMiddleName_Req
		,PrimaryLibrary_Req =  @PrimaryLibrary_Req
		,LibraryCard_Req =  @LibraryCard_Req
		,SchoolName_Req =  @SchoolName_Req
		,District_Req =  @District_Req
		,Teacher_Req =  @Teacher_Req
		,GroupTeamName_Req =  @GroupTeamName_Req
		,SchoolType_Req =  @SchoolType_Req
		,LiteracyLevel1_Req =  @LiteracyLevel1_Req
		,LiteracyLevel2_Req =  @LiteracyLevel2_Req
		,ParentPermFlag_Req =  @ParentPermFlag_Req
		,Over18Flag_Req =  @Over18Flag_Req
		,ShareFlag_Req =  @ShareFlag_Req
		,TermsOfUseflag_Req =  @TermsOfUseflag_Req
		,Custom1_Req =  @Custom1_Req
		,Custom2_Req =  @Custom2_Req
		,Custom3_Req =  @Custom3_Req
		,Custom4_Req =  @Custom4_Req
		,Custom5_Req =  @Custom5_Req
		
		,DOB_Show =  @DOB_Show
		,Age_Show =  @Age_Show		
				,SchoolGrade_Show =  @SchoolGrade_Show
		,FirstName_Show =  @FirstName_Show
		,MiddleName_Show =  @MiddleName_Show
		,LastName_Show =  @LastName_Show
		,Gender_Show =  @Gender_Show
		,EmailAddress_Show =  @EmailAddress_Show
		,PhoneNumber_Show =  @PhoneNumber_Show
		,StreetAddress1_Show =  @StreetAddress1_Show
		,StreetAddress2_Show =  @StreetAddress2_Show
		,City_Show =  @City_Show
		,State_Show =  @State_Show
		,ZipCode_Show =  @ZipCode_Show
		,Country_Show =  @Country_Show
		,County_Show =  @County_Show
		,ParentGuardianFirstName_Show =  @ParentGuardianFirstName_Show
		,ParentGuardianLastName_Show =  @ParentGuardianLastName_Show
		,ParentGuardianMiddleName_Show =  @ParentGuardianMiddleName_Show
		,PrimaryLibrary_Show =  @PrimaryLibrary_Show
		,LibraryCard_Show =  @LibraryCard_Show
		,SchoolName_Show =  @SchoolName_Show
		,District_Show =  @District_Show
		,Teacher_Show =  @Teacher_Show
		,GroupTeamName_Show =  @GroupTeamName_Show
		,SchoolType_Show =  @SchoolType_Show
		,LiteracyLevel1_Show =  @LiteracyLevel1_Show
		,LiteracyLevel2_Show =  @LiteracyLevel2_Show
		,ParentPermFlag_Show =  @ParentPermFlag_Show
		,Over18Flag_Show =  @Over18Flag_Show
		,ShareFlag_Show =  @ShareFlag_Show
		,TermsOfUseflag_Show =  @TermsOfUseflag_Show
		,Custom1_Show =  @Custom1_Show
		,Custom2_Show =  @Custom2_Show
		,Custom3_Show =  @Custom3_Show
		,Custom4_Show =  @Custom4_Show
		,Custom5_Show =  @Custom5_Show
		
		,DOB_Edit =  @DOB_Edit
		,Age_Edit =  @Age_Edit		
		,SchoolGrade_Edit =  @SchoolGrade_Edit
		,FirstName_Edit =  @FirstName_Edit
		,MiddleName_Edit =  @MiddleName_Edit
		,LastName_Edit =  @LastName_Edit
		,Gender_Edit =  @Gender_Edit
		,EmailAddress_Edit =  @EmailAddress_Edit
		,PhoneNumber_Edit =  @PhoneNumber_Edit
		,StreetAddress1_Edit =  @StreetAddress1_Edit
		,StreetAddress2_Edit =  @StreetAddress2_Edit
		,City_Edit =  @City_Edit
		,State_Edit =  @State_Edit
		,ZipCode_Edit =  @ZipCode_Edit
		,Country_Edit =  @Country_Edit
		,County_Edit =  @County_Edit
		,ParentGuardianFirstName_Edit =  @ParentGuardianFirstName_Edit
		,ParentGuardianLastName_Edit =  @ParentGuardianLastName_Edit
		,ParentGuardianMiddleName_Edit =  @ParentGuardianMiddleName_Edit
		,PrimaryLibrary_Edit =  @PrimaryLibrary_Edit
		,LibraryCard_Edit =  @LibraryCard_Edit
		,SchoolName_Edit =  @SchoolName_Edit
		,District_Edit =  @District_Edit
		,Teacher_Edit =  @Teacher_Edit
		,GroupTeamName_Edit =  @GroupTeamName_Edit
		,SchoolType_Edit =  @SchoolType_Edit
		,LiteracyLevel1_Edit =  @LiteracyLevel1_Edit
		,LiteracyLevel2_Edit =  @LiteracyLevel2_Edit
		,ParentPermFlag_Edit =  @ParentPermFlag_Edit
		,Over18Flag_Edit =  @Over18Flag_Edit
		,ShareFlag_Edit =  @ShareFlag_Edit
		,TermsOfUseflag_Edit =  @TermsOfUseflag_Edit
		,Custom1_Edit =  @Custom1_Edit
		,Custom2_Edit =  @Custom2_Edit
		,Custom3_Edit =  @Custom3_Edit
		,Custom4_Edit =  @Custom4_Edit
		,Custom5_Edit =  @Custom5_Edit
		
		,SDistrict_Prompt = @SDistrict_Prompt 
		,SDistrict_Req = @SDistrict_Req
		,SDistrict_Show = @SDistrict_Show
		,SDistrict_Edit = @SDistrict_Edit
		
		,LastModUser =  @LastModUser
		,AddedDate =  @AddedDate
		,AddedUser =  @AddedUser
		,LastModDate =  @LastModDate		
,TenID = @TenID
,FldInt1 = @FldInt1 
,FldInt2 = @FldInt2
,FldInt3 = @FldInt3 
,FldBit1 = @FldBit1
,FldBit2 = @FldBit2
,FldBit3 = @FldBit3
,FldText1 = @FldText1
,FldText2 = @FldText2
,FldText3 = @FldText3				
	Where RID = @RID AND TenID = @TenID


GO

/****** Object:  StoredProcedure [dbo].[app_ReportTemplate_Delete]    Script Date: 12/05/2014 14:24:08 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO

 /****** Object:  StoredProcedure [dbo].[app_ReportTemplate_Delete]    Script Date: 03/10/2014 14:43:26 ******/






--Create the Delete Proc
CREATE PROCEDURE [dbo].[app_ReportTemplate_Delete]
@RTID int 
AS
   Delete from [ReportTemplate] Where RTID = @RTID




GO

/****** Object:  StoredProcedure [dbo].[app_ReportTemplate_GetAll]    Script Date: 12/05/2014 14:24:08 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO

--Create the Select Proc
CREATE PROCEDURE [dbo].[app_ReportTemplate_GetAll]
@TenID int = null
AS
   Select RTID, ReportName from [ReportTemplate] where (TenID = @TenID or @TenID is null)




GO

/****** Object:  StoredProcedure [dbo].[app_ReportTemplate_GetByID]    Script Date: 12/05/2014 14:24:08 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO

--Create the Select Proc
CREATE PROCEDURE [dbo].[app_ReportTemplate_GetByID]
@RTID int 
AS
   Select * from [ReportTemplate] Where RTID = @RTID




GO

/****** Object:  StoredProcedure [dbo].[app_ReportTemplate_Insert]    Script Date: 12/05/2014 14:24:08 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO

CREATE PROCEDURE [dbo].[app_ReportTemplate_Insert] (
	 @ProgId int 
	,@ReportName varchar (150)
	,@DisplayFilters bit 
	,@DOBFrom datetime 
	,@DOBTo datetime 
	,@AgeFrom int 
	,@AgeTo int 
	,@SchoolGrade varchar (5)
	,@FirstName varchar (50)
	,@LastName varchar (50)
	,@Gender varchar (1)
	,@EmailAddress varchar (150)
	,@PhoneNumber varchar (20)
	,@City varchar (20)
	,@State varchar (2)
	,@ZipCode varchar (10)
	,@County varchar (50)
	,@PrimaryLibrary int 
	,@SchoolName varchar (50)
	,@District varchar (50)
	,@Teacher varchar (20)
	,@GroupTeamName varchar (20)
	,@SchoolType int 
	,@LiteracyLevel1 int 
	,@LiteracyLevel2 int 
	,@Custom1 varchar (50)
	,@Custom2 varchar (50)
	,@Custom3 varchar (50)
	,@Custom4 varchar (50)
	,@Custom5 varchar (50)
	,@RegistrationDateStart datetime 
	,@RegistrationDateEnd datetime 
	,@PointsMin int 
	,@PointsMax int 
	,@PointsStart datetime 
	,@PointsEnd datetime 
	,@EventCode varchar (50)
	,@EarnedBadge int 
	,@PhysicalPrizeEarned varchar (50)
	,@PhysicalPrizeRedeemed bit 
	,@PhysicalPrizeStartDate datetime 
	,@PhysicalPrizeEndDate datetime 
	,@ReviewsMin int 
	,@ReviewsMax int 
	,@ReviewTitle varchar (150)
	,@ReviewAuthor varchar (100)
	,@ReviewStartDate datetime 
	,@ReviewEndDate datetime 
	,@RandomDrawingName varchar (50)
	,@RandomDrawingNum int 
	,@RandomDrawingStartDate datetime 
	,@RandomDrawingEndDate datetime 
	,@HasBeenDrawn bit 
	,@HasRedeemend bit 
	,@PIDInc bit 
	,@UsernameInc bit 
	,@DOBInc bit 
	,@AgeInc bit 
	,@SchoolGradeInc bit 
	,@FirstNameInc bit 
	,@LastNameInc bit 
	,@GenderInc bit 
	,@EmailAddressInc bit 
	,@PhoneNumberInc bit 
	,@CityInc bit 
	,@StateInc bit 
	,@ZipCodeInc bit 
	,@CountyInc bit 
	,@PrimaryLibraryInc bit 
	,@SchoolNameInc bit 
	,@DistrictInc bit 
	,@TeacherInc bit 
	,@GroupTeamNameInc bit 
	,@SchoolTypeInc bit 
	,@LiteracyLevel1Inc bit 
	,@LiteracyLevel2Inc bit 
	,@Custom1Inc bit 
	,@Custom2Inc bit 
	,@Custom3Inc bit 
	,@Custom4Inc bit 
	,@Custom5Inc bit 
	,@RegistrationDateInc bit 
	,@PointsInc bit 
	,@EarnedBadgeInc bit 
	,@PhysicalPrizeNameInc bit 
	,@PhysicalPrizeDateInc bit 
	,@NumReviewsInc bit 
	,@ReviewAuthorInc bit 
	,@ReviewTitleInc bit 
	,@ReviewDateInc bit 
	,@RandomDrawingNameInc bit 
	,@RandomDrawingNumInc bit 
	,@RandomDrawingDateInc bit 
	,@HasBeenDrawnInc bit 
	,@HasRedeemendInc bit 
	,@LastModDate datetime 
	,@LastModUser varchar (50)
	,@AddedDate datetime 
	,@AddedUser varchar (50)
	,@SDistrict varchar(50)
	,@SDistrictInc bit 
	,@TenID int = 0
,@FldInt1 int = 0
,@FldInt2 int = 0
,@FldInt3 int = 0
,@FldBit1 bit = 0
,@FldBit2 bit = 0
,@FldBit3 bit = 0
,@FldText1 text = ''
,@FldText2 text = ''
,@FldText3 text = ''

,@Score1From	int	= 0
,@Score1To	int		= 0
,@Score1PctFrom	int		= 0
,@Score1PctTo	int		= 0
,@Score2From	int		= 0
,@Score2To	int		= 0
,@Score2PctFrom	int		= 0
,@Score2PctTo	int		= 0

,@Score1Inc bit
,@Score2Inc bit
,@Score1PctInc bit
,@Score2PctInc bit

	,@RTID int output 
) AS
Begin
	Insert into ReportTemplate
		(ProgId
		,ReportName
		,DisplayFilters
		,DOBFrom
		,DOBTo
		,AgeFrom
		,AgeTo
		,SchoolGrade
		,FirstName
		,LastName
		,Gender
		,EmailAddress
		,PhoneNumber
		,City
		,State
		,ZipCode
		,County
		,PrimaryLibrary
		,SchoolName
		,District
		,Teacher
		,GroupTeamName
		,SchoolType
		,LiteracyLevel1
		,LiteracyLevel2
		,Custom1
		,Custom2
		,Custom3
		,Custom4
		,Custom5
		,RegistrationDateStart
		,RegistrationDateEnd
		,PointsMin
		,PointsMax
		,PointsStart
		,PointsEnd
		,EventCode
		,EarnedBadge
		,PhysicalPrizeEarned
		,PhysicalPrizeRedeemed
		,PhysicalPrizeStartDate
		,PhysicalPrizeEndDate
		,ReviewsMin
		,ReviewsMax
		,ReviewTitle
		,ReviewAuthor
		,ReviewStartDate
		,ReviewEndDate
		,RandomDrawingName
		,RandomDrawingNum
		,RandomDrawingStartDate
		,RandomDrawingEndDate
		,HasBeenDrawn
		,HasRedeemend
		,PIDInc
		,UsernameInc
		,DOBInc
		,AgeInc
		,SchoolGradeInc
		,FirstNameInc
		,LastNameInc
		,GenderInc
		,EmailAddressInc
		,PhoneNumberInc
		,CityInc
		,StateInc
		,ZipCodeInc
		,CountyInc
		,PrimaryLibraryInc
		,SchoolNameInc
		,DistrictInc
		,TeacherInc
		,GroupTeamNameInc
		,SchoolTypeInc
		,LiteracyLevel1Inc
		,LiteracyLevel2Inc
		,Custom1Inc
		,Custom2Inc
		,Custom3Inc
		,Custom4Inc
		,Custom5Inc
		,RegistrationDateInc
		,PointsInc
		,EarnedBadgeInc
		,PhysicalPrizeNameInc
		,PhysicalPrizeDateInc
		,NumReviewsInc
		,ReviewAuthorInc
		,ReviewTitleInc
		,ReviewDateInc
		,RandomDrawingNameInc
		,RandomDrawingNumInc
		,RandomDrawingDateInc
		,HasBeenDrawnInc
		,HasRedeemendInc
		,LastModDate
		,LastModUser
		,AddedDate
		,AddedUser
		,SDistrict, SDistrictInc
		,TenID, FldInt1, FldInt2, FldInt3, FldBit1, FldBit2, FldBit3, FldText1, FldText2, FldText3
		,Score1From,Score1To,Score1PctFrom,Score1PctTo,Score2From,Score2To,Score2PctFrom,Score2PctTo
		,Score1Inc,Score2Inc,Score1PctInc,Score2PctInc
)
	VALUES
		(@ProgId
		,@ReportName
		,@DisplayFilters
		,@DOBFrom
		,@DOBTo
		,@AgeFrom
		,@AgeTo
		,@SchoolGrade
		,@FirstName
		,@LastName
		,@Gender
		,@EmailAddress
		,@PhoneNumber
		,@City
		,@State
		,@ZipCode
		,@County
		,@PrimaryLibrary
		,@SchoolName
		,@District
		,@Teacher
		,@GroupTeamName
		,@SchoolType
		,@LiteracyLevel1
		,@LiteracyLevel2
		,@Custom1
		,@Custom2
		,@Custom3
		,@Custom4
		,@Custom5
		,@RegistrationDateStart
		,@RegistrationDateEnd
		,@PointsMin
		,@PointsMax
		,@PointsStart
		,@PointsEnd
		,@EventCode
		,@EarnedBadge
		,@PhysicalPrizeEarned
		,@PhysicalPrizeRedeemed
		,@PhysicalPrizeStartDate
		,@PhysicalPrizeEndDate
		,@ReviewsMin
		,@ReviewsMax
		,@ReviewTitle
		,@ReviewAuthor
		,@ReviewStartDate
		,@ReviewEndDate
		,@RandomDrawingName
		,@RandomDrawingNum
		,@RandomDrawingStartDate
		,@RandomDrawingEndDate
		,@HasBeenDrawn
		,@HasRedeemend
		,@PIDInc
		,@UsernameInc
		,@DOBInc
		,@AgeInc
		,@SchoolGradeInc
		,@FirstNameInc
		,@LastNameInc
		,@GenderInc
		,@EmailAddressInc
		,@PhoneNumberInc
		,@CityInc
		,@StateInc
		,@ZipCodeInc
		,@CountyInc
		,@PrimaryLibraryInc
		,@SchoolNameInc
		,@DistrictInc
		,@TeacherInc
		,@GroupTeamNameInc
		,@SchoolTypeInc
		,@LiteracyLevel1Inc
		,@LiteracyLevel2Inc
		,@Custom1Inc
		,@Custom2Inc
		,@Custom3Inc
		,@Custom4Inc
		,@Custom5Inc
		,@RegistrationDateInc
		,@PointsInc
		,@EarnedBadgeInc
		,@PhysicalPrizeNameInc
		,@PhysicalPrizeDateInc
		,@NumReviewsInc
		,@ReviewAuthorInc
		,@ReviewTitleInc
		,@ReviewDateInc
		,@RandomDrawingNameInc
		,@RandomDrawingNumInc
		,@RandomDrawingDateInc
		,@HasBeenDrawnInc
		,@HasRedeemendInc
		,@LastModDate
		,@LastModUser
		,@AddedDate
		,@AddedUser
		,@SDistrict, @SDistrictInc
		,@TenID, @FldInt1, @FldInt2, @FldInt3, @FldBit1, @FldBit2, @FldBit3, @FldText1, @FldText2, @FldText3	
		,@Score1From,@Score1To,@Score1PctFrom,@Score1PctTo,@Score2From,@Score2To,@Score2PctFrom,@Score2PctTo
		,@Score1Inc,@Score2Inc,@Score1PctInc,@Score2PctInc
)
	Select @RTID = SCOPE_IDENTITY()
END



GO

/****** Object:  StoredProcedure [dbo].[app_ReportTemplate_Update]    Script Date: 12/05/2014 14:24:08 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO



CREATE PROCEDURE [dbo].[app_ReportTemplate_Update] (
	 @RTID int 
	,@ProgId int 
	,@ReportName varchar (150)
	,@DisplayFilters bit 
	,@DOBFrom datetime 
	,@DOBTo datetime 
	,@AgeFrom int 
	,@AgeTo int 
	,@SchoolGrade varchar (5)
	,@FirstName varchar (50)
	,@LastName varchar (50)
	,@Gender varchar (1)
	,@EmailAddress varchar (150)
	,@PhoneNumber varchar (20)
	,@City varchar (20)
	,@State varchar (2)
	,@ZipCode varchar (10)
	,@County varchar (50)
	,@PrimaryLibrary int 
	,@SchoolName varchar (50)
	,@District varchar (50)
	,@Teacher varchar (20)
	,@GroupTeamName varchar (20)
	,@SchoolType int 
	,@LiteracyLevel1 int 
	,@LiteracyLevel2 int 
	,@Custom1 varchar (50)
	,@Custom2 varchar (50)
	,@Custom3 varchar (50)
	,@Custom4 varchar (50)
	,@Custom5 varchar (50)
	,@RegistrationDateStart datetime 
	,@RegistrationDateEnd datetime 
	,@PointsMin int 
	,@PointsMax int 
	,@PointsStart datetime 
	,@PointsEnd datetime 
	,@EventCode varchar (50)
	,@EarnedBadge int 
	,@PhysicalPrizeEarned varchar (50)
	,@PhysicalPrizeRedeemed bit 
	,@PhysicalPrizeStartDate datetime 
	,@PhysicalPrizeEndDate datetime 
	,@ReviewsMin int 
	,@ReviewsMax int 
	,@ReviewTitle varchar (150)
	,@ReviewAuthor varchar (100)
	,@ReviewStartDate datetime 
	,@ReviewEndDate datetime 
	,@RandomDrawingName varchar (50)
	,@RandomDrawingNum int 
	,@RandomDrawingStartDate datetime 
	,@RandomDrawingEndDate datetime 
	,@HasBeenDrawn bit 
	,@HasRedeemend bit 
	,@PIDInc bit 
	,@UsernameInc bit 
	,@DOBInc bit 
	,@AgeInc bit 
	,@SchoolGradeInc bit 
	,@FirstNameInc bit 
	,@LastNameInc bit 
	,@GenderInc bit 
	,@EmailAddressInc bit 
	,@PhoneNumberInc bit 
	,@CityInc bit 
	,@StateInc bit 
	,@ZipCodeInc bit 
	,@CountyInc bit 
	,@PrimaryLibraryInc bit 
	,@SchoolNameInc bit 
	,@DistrictInc bit 
	,@TeacherInc bit 
	,@GroupTeamNameInc bit 
	,@SchoolTypeInc bit 
	,@LiteracyLevel1Inc bit 
	,@LiteracyLevel2Inc bit 
	,@Custom1Inc bit 
	,@Custom2Inc bit 
	,@Custom3Inc bit 
	,@Custom4Inc bit 
	,@Custom5Inc bit 
	,@RegistrationDateInc bit 
	,@PointsInc bit 
	,@EarnedBadgeInc bit 
	,@PhysicalPrizeNameInc bit 
	,@PhysicalPrizeDateInc bit 
	,@NumReviewsInc bit 
	,@ReviewAuthorInc bit 
	,@ReviewTitleInc bit 
	,@ReviewDateInc bit 
	,@RandomDrawingNameInc bit 
	,@RandomDrawingNumInc bit 
	,@RandomDrawingDateInc bit 
	,@HasBeenDrawnInc bit 
	,@HasRedeemendInc bit 
	,@LastModDate datetime 
	,@LastModUser varchar (50)
	,@AddedDate datetime 
	,@AddedUser varchar (50)
	,@SDistrict varchar(50)
	,@SDistrictInc bit 
,@TenID int = 0
,@FldInt1 int = 0
,@FldInt2 int = 0
,@FldInt3 int = 0
,@FldBit1 bit = 0
,@FldBit2 bit = 0
,@FldBit3 bit = 0
,@FldText1 text = ''
,@FldText2 text = ''
,@FldText3 text = ''

,@Score1From	int	= 0
,@Score1To	int		= 0
,@Score1PctFrom	int		= 0
,@Score1PctTo	int		= 0
,@Score2From	int		= 0
,@Score2To	int		= 0
,@Score2PctFrom	int		= 0
,@Score2PctTo	int		= 0

,@Score1Inc bit
,@Score2Inc bit
,@Score1PctInc bit
,@Score2PctInc bit
) AS
	Update ReportTemplate
	Set 
		ProgId =  @ProgId
		,ReportName =  @ReportName
		,DisplayFilters =  @DisplayFilters
		,DOBFrom =  @DOBFrom
		,DOBTo =  @DOBTo
		,AgeFrom =  @AgeFrom
		,AgeTo =  @AgeTo
		,SchoolGrade =  @SchoolGrade
		,FirstName =  @FirstName
		,LastName =  @LastName
		,Gender =  @Gender
		,EmailAddress =  @EmailAddress
		,PhoneNumber =  @PhoneNumber
		,City =  @City
		,State =  @State
		,ZipCode =  @ZipCode
		,County =  @County
		,PrimaryLibrary =  @PrimaryLibrary
		,SchoolName =  @SchoolName
		,District =  @District
		,Teacher =  @Teacher
		,GroupTeamName =  @GroupTeamName
		,SchoolType =  @SchoolType
		,LiteracyLevel1 =  @LiteracyLevel1
		,LiteracyLevel2 =  @LiteracyLevel2
		,Custom1 =  @Custom1
		,Custom2 =  @Custom2
		,Custom3 =  @Custom3
		,Custom4 =  @Custom4
		,Custom5 =  @Custom5
		,RegistrationDateStart =  @RegistrationDateStart
		,RegistrationDateEnd =  @RegistrationDateEnd
		,PointsMin =  @PointsMin
		,PointsMax =  @PointsMax
		,PointsStart =  @PointsStart
		,PointsEnd =  @PointsEnd
		,EventCode =  @EventCode
		,EarnedBadge =  @EarnedBadge
		,PhysicalPrizeEarned =  @PhysicalPrizeEarned
		,PhysicalPrizeRedeemed =  @PhysicalPrizeRedeemed
		,PhysicalPrizeStartDate =  @PhysicalPrizeStartDate
		,PhysicalPrizeEndDate =  @PhysicalPrizeEndDate
		,ReviewsMin =  @ReviewsMin
		,ReviewsMax =  @ReviewsMax
		,ReviewTitle =  @ReviewTitle
		,ReviewAuthor =  @ReviewAuthor
		,ReviewStartDate =  @ReviewStartDate
		,ReviewEndDate =  @ReviewEndDate
		,RandomDrawingName =  @RandomDrawingName
		,RandomDrawingNum =  @RandomDrawingNum
		,RandomDrawingStartDate =  @RandomDrawingStartDate
		,RandomDrawingEndDate =  @RandomDrawingEndDate
		,HasBeenDrawn =  @HasBeenDrawn
		,HasRedeemend =  @HasRedeemend
		,PIDInc =  @PIDInc
		,UsernameInc =  @UsernameInc
		,DOBInc =  @DOBInc
		,AgeInc =  @AgeInc
		,SchoolGradeInc =  @SchoolGradeInc
		,FirstNameInc =  @FirstNameInc
		,LastNameInc =  @LastNameInc
		,GenderInc =  @GenderInc
		,EmailAddressInc =  @EmailAddressInc
		,PhoneNumberInc =  @PhoneNumberInc
		,CityInc =  @CityInc
		,StateInc =  @StateInc
		,ZipCodeInc =  @ZipCodeInc
		,CountyInc =  @CountyInc
		,PrimaryLibraryInc =  @PrimaryLibraryInc
		,SchoolNameInc =  @SchoolNameInc
		,DistrictInc =  @DistrictInc
		,TeacherInc =  @TeacherInc
		,GroupTeamNameInc =  @GroupTeamNameInc
		,SchoolTypeInc =  @SchoolTypeInc
		,LiteracyLevel1Inc =  @LiteracyLevel1Inc
		,LiteracyLevel2Inc =  @LiteracyLevel2Inc
		,Custom1Inc =  @Custom1Inc
		,Custom2Inc =  @Custom2Inc
		,Custom3Inc =  @Custom3Inc
		,Custom4Inc =  @Custom4Inc
		,Custom5Inc =  @Custom5Inc
		,RegistrationDateInc =  @RegistrationDateInc
		,PointsInc =  @PointsInc
		,EarnedBadgeInc =  @EarnedBadgeInc
		,PhysicalPrizeNameInc =  @PhysicalPrizeNameInc
		,PhysicalPrizeDateInc =  @PhysicalPrizeDateInc
		,NumReviewsInc =  @NumReviewsInc
		,ReviewAuthorInc =  @ReviewAuthorInc
		,ReviewTitleInc =  @ReviewTitleInc
		,ReviewDateInc =  @ReviewDateInc
		,RandomDrawingNameInc =  @RandomDrawingNameInc
		,RandomDrawingNumInc =  @RandomDrawingNumInc
		,RandomDrawingDateInc =  @RandomDrawingDateInc
		,HasBeenDrawnInc =  @HasBeenDrawnInc
		,HasRedeemendInc =  @HasRedeemendInc
		,LastModDate =  @LastModDate
		,LastModUser =  @LastModUser
		,AddedDate =  @AddedDate
		,AddedUser =  @AddedUser
		,SDistrict = @SDistrict
		,SDistrictInc = @SDistrictInc
,TenID = @TenID
,FldInt1 = @FldInt1 
,FldInt2 = @FldInt2
,FldInt3 = @FldInt3 
,FldBit1 = @FldBit1
,FldBit2 = @FldBit2
,FldBit3 = @FldBit3
,FldText1 = @FldText1
,FldText2 = @FldText2
,FldText3 = @FldText3

,Score1From = @Score1From
,Score1To = @Score1To
,Score1PctFrom = @Score1PctFrom 
,Score1PctTo = @Score1PctTo
,Score2From = @Score2From
,Score2To = @Score2To
,Score2PctFrom = @Score2PctFrom
,Score2PctTo = @Score2PctTo

,Score1Inc = @Score1Inc
,Score2Inc = @Score2Inc
,Score1PctInc = @Score1PctInc
,Score2PctInc = @Score2PctInc

	Where RTID = @RTID AND TenID = @TenID



GO

/****** Object:  StoredProcedure [dbo].[app_SchoolCrosswalk_Delete]    Script Date: 12/05/2014 14:24:08 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO

CREATE PROCEDURE [dbo].[app_SchoolCrosswalk_Delete]
@ID int 
AS
   Delete from [SchoolCrosswalk] Where ID = @ID

GO

/****** Object:  StoredProcedure [dbo].[app_SchoolCrosswalk_GetAll]    Script Date: 12/05/2014 14:24:08 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO


CREATE PROCEDURE [dbo].[app_SchoolCrosswalk_GetAll]
@TenID int = null
AS
declare @Schools Table (CID int not null, Code varchar(50) not null)
insert into @Schools
select c.CID, c.Code
	from Code c join CodeType t
		on c.CTID = t.CTID 
	where t.CodeTypeName = 'School'  and (t.TenID = @TenID or @TenID is null)
			
delete 
	from [SchoolCrosswalk]
	where SchoolID not in (Select CID from @Schools)  and (TenID = @TenID or @TenID is null)

Select 
	 isnull(w.ID,0) as ID
	,isnull(l.CID,0) as SchoolID
	,isnull(w.SchTypeID,0) as SchTypeID
	,isnull(w.DistrictID,0) as DistrictID
	,isnull(w.City,'') as City	
	,isnull(w.MinGrade,0) as MinGrade
	,isnull(w.MaxGrade,0) as MaxGrade
	,isnull(w.MinAge,0) as MinAge
	,isnull(w.MaxAge,0) as MaxAge	
	,isnull(l.Code,'') as SchoolName		
	, RANK () OVER (ORDER BY l.Code ASC) as RANK
   from [SchoolCrosswalk] w right outer join @Schools l
			on w.SchoolID = l.CID
order by l.Code

GO

/****** Object:  StoredProcedure [dbo].[app_SchoolCrosswalk_GetByID]    Script Date: 12/05/2014 14:24:08 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO

CREATE PROCEDURE [dbo].[app_SchoolCrosswalk_GetByID]
@ID int 
AS
   Select * from [SchoolCrosswalk] Where ID = @ID

GO

/****** Object:  StoredProcedure [dbo].[app_SchoolCrosswalk_GetBySchoolID]    Script Date: 12/05/2014 14:24:08 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO


Create PROCEDURE [dbo].[app_SchoolCrosswalk_GetBySchoolID]
 @ID int = 0
as
SELECT * FROM SchoolCrosswalk WHERE SchoolID = @ID

GO

/****** Object:  StoredProcedure [dbo].[app_SchoolCrosswalk_GetFilteredSchoolDDValues]    Script Date: 12/05/2014 14:24:08 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO


CREATE PROCEDURE [dbo].[app_SchoolCrosswalk_GetFilteredSchoolDDValues]
 @SchTypeID int = 0
,@DistrictID int = 0
,@City varchar(50) = ''
,@Grade int = 0
,@Age int = 0
,@TenID int = null
AS
	select distinct SchoolID as CID, c.Code as Code
	from SchoolCrosswalk w join Code c
		on w.SchoolID = c.CID
	where
		(SchTypeID = @SchTypeID or @SchTypeID is null or @SchTypeID = 0)
		AND 
		(DistrictID = @DistrictID or @DistrictID is null or @DistrictID = 0)
		AND 
		(City = @City or @City is null or @City = '')
		AND 
		((MinGrade <= @Grade and MaxGrade >= @Grade) or @Grade is null or @Grade = 0 or (MinGrade = 0 AND MaxGrade=0))
AND
((MinAge <= @Age and MaxAge >= @Age) or @Age is null or @Age = 0 or (MinAge = 0 AND MaxAge=0))
AND (w.TenID = @TenID or @TenID is null)
order by Code
GO

/****** Object:  StoredProcedure [dbo].[app_SchoolCrosswalk_Insert]    Script Date: 12/05/2014 14:24:08 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO

CREATE PROCEDURE [dbo].[app_SchoolCrosswalk_Insert] (
@SchoolID int
,@SchTypeID int
,@DistrictID int
,@City varchar (50)
,@MinGrade int
,@MaxGrade int
,@MinAge int
,@MaxAge int
,@TenID int = 0
,@FldInt1 int = 0
,@FldInt2 int = 0
,@FldInt3 int = 0
,@FldBit1 bit = 0
,@FldBit2 bit = 0
,@FldBit3 bit = 0
,@FldText1 text = ''
,@FldText2 text = ''
,@FldText3 text = ''
,@ID int output
) AS
Begin
Insert into SchoolCrosswalk
(SchoolID
,SchTypeID
,DistrictID
,City
,MinGrade
,MaxGrade
,MinAge
,MaxAge
,TenID, FldInt1, FldInt2, FldInt3, FldBit1, FldBit2, FldBit3, FldText1, FldText2, FldText3
)
VALUES
(@SchoolID
,@SchTypeID
,@DistrictID
,@City
,@MinGrade
,@MaxGrade
,@MinAge
,@MaxAge
,@TenID, @FldInt1, @FldInt2, @FldInt3, @FldBit1, @FldBit2, @FldBit3, @FldText1, @FldText2, @FldText3
)
Select @ID = SCOPE_IDENTITY()
END

GO

/****** Object:  StoredProcedure [dbo].[app_SchoolCrosswalk_Update]    Script Date: 12/05/2014 14:24:08 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO

CREATE PROCEDURE [dbo].[app_SchoolCrosswalk_Update] (
@ID int
,@SchoolID int
,@SchTypeID int
,@DistrictID int
,@City varchar (50)
,@MinGrade int
,@MaxGrade int
,@MinAge int
,@MaxAge int
,@TenID int = 0
,@FldInt1 int = 0
,@FldInt2 int = 0
,@FldInt3 int = 0
,@FldBit1 bit = 0
,@FldBit2 bit = 0
,@FldBit3 bit = 0
,@FldText1 text = ''
,@FldText2 text = ''
,@FldText3 text = ''
) AS
Update SchoolCrosswalk
Set
SchoolID =  @SchoolID
,SchTypeID =  @SchTypeID
,DistrictID =  @DistrictID
,City =  @City
,MinGrade =  @MinGrade
,MaxGrade =  @MaxGrade
,MinAge =  @MinAge
,MaxAge =  @MaxAge
,TenID = @TenID
,FldInt1 = @FldInt1
,FldInt2 = @FldInt2
,FldInt3 = @FldInt3
,FldBit1 = @FldBit1
,FldBit2 = @FldBit2
,FldBit3 = @FldBit3
,FldText1 = @FldText1
,FldText2 = @FldText2
,FldText3 = @FldText3
Where ID = @ID AND TenID = @TenID

GO

/****** Object:  StoredProcedure [dbo].[app_SentEmailLog_Delete]    Script Date: 12/05/2014 14:24:08 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO

/****** Object:  StoredProcedure [dbo].[app_SentEmailLog_Delete]    Script Date: 03/10/2014 14:43:26 ******/






--Create the Delete Proc
CREATE PROCEDURE [dbo].[app_SentEmailLog_Delete]
@EID int
AS
Delete from [SentEmailLog] Where EID = @EID




GO

/****** Object:  StoredProcedure [dbo].[app_SentEmailLog_DeleteAll]    Script Date: 12/05/2014 14:24:08 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO

/****** Object:  StoredProcedure [dbo].[app_SentEmailLog_DeleteAll]    Script Date: 03/10/2014 14:43:26 ******/






CREATE PROCEDURE [dbo].[app_SentEmailLog_DeleteAll]
@EID int
AS
Delete from [SentEmailLog]




GO

/****** Object:  StoredProcedure [dbo].[app_SentEmailLog_GetAll]    Script Date: 12/05/2014 14:24:08 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO

/****** Object:  StoredProcedure [dbo].[app_SentEmailLog_GetAll]    Script Date: 03/10/2014 14:43:26 ******/






--Create the Select Proc
CREATE PROCEDURE [dbo].[app_SentEmailLog_GetAll]
@EID int
AS
Select * from [SentEmailLog]




GO

/****** Object:  StoredProcedure [dbo].[app_SentEmailLog_GetByID]    Script Date: 12/05/2014 14:24:08 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO

/****** Object:  StoredProcedure [dbo].[app_SentEmailLog_GetByID]    Script Date: 03/10/2014 14:43:26 ******/






--Create the Select Proc
CREATE PROCEDURE [dbo].[app_SentEmailLog_GetByID]
@EID int
AS
Select * from [SentEmailLog] Where EID = @EID




GO

/****** Object:  StoredProcedure [dbo].[app_SentEmailLog_Insert]    Script Date: 12/05/2014 14:24:08 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO

/****** Object:  StoredProcedure [dbo].[app_SentEmailLog_Insert]    Script Date: 03/10/2014 14:43:26 ******/






--Create the Insert Proc
CREATE PROCEDURE [dbo].[app_SentEmailLog_Insert] (
@SentDateTime datetime
,@SentFrom varchar (150)
,@SentTo varchar (150)
,@Subject varchar (150)
,@Body text
,@EID int output
) AS
Begin
Insert into SentEmailLog
(SentDateTime
,SentFrom
,SentTo
,Subject
,Body
)
VALUES
(@SentDateTime
,@SentFrom
,@SentTo
,@Subject
,@Body
)
Select @EID = SCOPE_IDENTITY()
END




GO

/****** Object:  StoredProcedure [dbo].[app_SentEmailLog_Update]    Script Date: 12/05/2014 14:24:09 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO

/****** Object:  StoredProcedure [dbo].[app_SentEmailLog_Update]    Script Date: 03/10/2014 14:43:26 ******/






--Create the Update Proc
CREATE PROCEDURE [dbo].[app_SentEmailLog_Update] (
@EID int
,@SentDateTime datetime
,@SentFrom varchar (150)
,@SentTo varchar (150)
,@Subject varchar (150)
,@Body text

) AS
Update SentEmailLog
Set
SentDateTime =  @SentDateTime
,SentFrom =  @SentFrom
,SentTo =  @SentTo
,Subject =  @Subject
,Body =  @Body

Where EID = @EID




GO

/****** Object:  StoredProcedure [dbo].[app_SQChoices_Delete]    Script Date: 12/05/2014 14:24:09 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO

--Create the Delete Proc
CREATE PROCEDURE [dbo].[app_SQChoices_Delete]
@SQCID int
AS
Declare @QID int;
Select @QID = QID from [SQChoices] Where SQCID = @SQCID
Delete from [SQChoices] Where SQCID = @SQCID
exec app_SQChoices_Reorder @QID

GO

/****** Object:  StoredProcedure [dbo].[app_SQChoices_GetAll]    Script Date: 12/05/2014 14:24:09 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO

--Create the Select Proc
CREATE PROCEDURE [dbo].[app_SQChoices_GetAll]
@QID int
,@Echo int = 0
AS
Select *
,(Select isnull(Max(ChoiceOrder),0) from [SQChoices] where QID = @QID) as MAX
, @Echo as Echo
from [SQChoices] where QID = @QID order by ChoiceOrder

GO

/****** Object:  StoredProcedure [dbo].[app_SQChoices_GetAllInList]    Script Date: 12/05/2014 14:24:09 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO


--Create the Select Proc
CREATE PROCEDURE [dbo].[app_SQChoices_GetAllInList]
@List varchar(2000)
AS

Select *
from [SQChoices]
where SQCID in (select * from dbo.fnSplitString(@List,','))
order by ChoiceOrder

GO

/****** Object:  StoredProcedure [dbo].[app_SQChoices_GetByID]    Script Date: 12/05/2014 14:24:09 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO

--Create the Select Proc
CREATE PROCEDURE [dbo].[app_SQChoices_GetByID]
@SQCID int
AS
Select * from [SQChoices] Where SQCID = @SQCID

GO

/****** Object:  StoredProcedure [dbo].[app_SQChoices_Insert]    Script Date: 12/05/2014 14:24:09 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO

--Create the Insert Proc
CREATE PROCEDURE [dbo].[app_SQChoices_Insert] (
@QID int
,@ChoiceOrder int
,@ChoiceText varchar (50)
,@Score int
,@JumpToQuestion int
,@AskClarification bit
,@ClarificationRequired bit
,@FldInt1 int
,@FldInt2 int
,@FldInt3 int
,@FldBit1 bit
,@FldBit2 bit
,@FldBit3 bit
,@FldText1 text
,@FldText2 text
,@FldText3 text
,@SQCID int output
) AS
Begin
Insert into SQChoices
(QID
,ChoiceOrder
,ChoiceText
,Score
,JumpToQuestion
,AskClarification
,ClarificationRequired
,FldInt1
,FldInt2
,FldInt3
,FldBit1
,FldBit2
,FldBit3
,FldText1
,FldText2
,FldText3
)
VALUES
(@QID
,(Select isnull(Max(ChoiceOrder),0) +1 from SQChoices where QID=@QID)
,@ChoiceText
,@Score
,@JumpToQuestion
,@AskClarification
,@ClarificationRequired
,@FldInt1
,@FldInt2
,@FldInt3
,@FldBit1
,@FldBit2
,@FldBit3
,@FldText1
,@FldText2
,@FldText3
)
Select @SQCID = SCOPE_IDENTITY()
END

GO

/****** Object:  StoredProcedure [dbo].[app_SQChoices_MoveDn]    Script Date: 12/05/2014 14:24:09 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO

CREATE PROCEDURE [dbo].[app_SQChoices_MoveDn]
@SQCID int
AS

Declare @CurrentRecordLocation int, @NextRecordID int, @QID int
Select @CurrentRecordLocation = ChoiceOrder, @QID = QID from SQChoices where SQCID = @SQCID
exec [dbo].[app_SQChoices_Reorder] @QID
if @CurrentRecordLocation < (Select MAX(ChoiceOrder) from SQChoices where QID = @QID)
	begin
		Select @NextRecordID = SQCID from SQChoices where ChoiceOrder = (@CurrentRecordLocation + 1) AND QID = @QID
		
		update SQChoices set ChoiceOrder = @CurrentRecordLocation + 1
		where SQCID = @SQCID
	
		update SQChoices set ChoiceOrder = @CurrentRecordLocation 
		where SQCID = @NextRecordID
	end




GO

/****** Object:  StoredProcedure [dbo].[app_SQChoices_MoveUp]    Script Date: 12/05/2014 14:24:09 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO


CREATE PROCEDURE [dbo].[app_SQChoices_MoveUp]
@SQCID int 
AS
	Declare @CurrentRecordLocation int, @PreviousRecordID int, @QID int
	Select @CurrentRecordLocation = ChoiceOrder, @QID = QID from SQChoices where SQCID = @SQCID
	exec [dbo].[app_SQChoices_Reorder] @QID
	if @CurrentRecordLocation > 1
	begin
		Select @PreviousRecordID = SQCID from SQChoices where ChoiceOrder = (@CurrentRecordLocation - 1) AND QID = @QID
		
		update SQChoices set ChoiceOrder = @CurrentRecordLocation - 1
		where SQCID = @SQCID
	
		update SQChoices set ChoiceOrder = @CurrentRecordLocation 
		where SQCID = @PreviousRecordID
	end



GO

/****** Object:  StoredProcedure [dbo].[app_SQChoices_Reorder]    Script Date: 12/05/2014 14:24:09 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO

CREATE Procedure [dbo].[app_SQChoices_Reorder]
@QID int 
AS
	UPDATE SQChoices 
	SET ChoiceOrder = rowNumber 
	FROM SQChoices
		INNER JOIN 
		(SELECT SQCID, ChoiceOrder, row_number() OVER (ORDER BY ChoiceOrder Asc) as rowNumber
			FROM SQChoices where QID = @QID) drRowNumbers 
			ON drRowNumbers.SQCID = SQChoices.SQCID and QID = @QID
	where QID = @QID

GO

/****** Object:  StoredProcedure [dbo].[app_SQChoices_Update]    Script Date: 12/05/2014 14:24:09 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO

--Create the Update Proc
CREATE PROCEDURE [dbo].[app_SQChoices_Update] (
	 @SQCID int 
	,@QID int 
	,@ChoiceOrder int 
	,@ChoiceText varchar (50)
	,@Score int 
	,@JumpToQuestion int 
	,@AskClarification bit 
	,@ClarificationRequired bit 
	,@FldInt1 int 
	,@FldInt2 int 
	,@FldInt3 int 
	,@FldBit1 bit 
	,@FldBit2 bit 
	,@FldBit3 bit 
	,@FldText1 text 
	,@FldText2 text 
	,@FldText3 text 

) AS
	Update SQChoices
	Set 
		QID =  @QID
		--,ChoiceOrder =  @ChoiceOrder
		,ChoiceText =  @ChoiceText
		,Score =  @Score
		,JumpToQuestion =  @JumpToQuestion
		,AskClarification =  @AskClarification
		,ClarificationRequired =  @ClarificationRequired
		,FldInt1 =  @FldInt1
		,FldInt2 =  @FldInt2
		,FldInt3 =  @FldInt3
		,FldBit1 =  @FldBit1
		,FldBit2 =  @FldBit2
		,FldBit3 =  @FldBit3
		,FldText1 =  @FldText1
		,FldText2 =  @FldText2
		,FldText3 =  @FldText3

	Where SQCID = @SQCID

GO

/****** Object:  StoredProcedure [dbo].[app_SQMatrixLines_Delete]    Script Date: 12/05/2014 14:24:09 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO

--Create the Delete Proc
CREATE PROCEDURE [dbo].[app_SQMatrixLines_Delete]
@SQMLID int 
AS
	Declare @QID int;
	Select @QID = QID from [SQMatrixLines] Where SQMLID = @SQMLID
	Delete from [SQMatrixLines] Where SQMLID = @SQMLID
	exec app_SQMatrixLines_Reorder @QID
	

GO

/****** Object:  StoredProcedure [dbo].[app_SQMatrixLines_GetAll]    Script Date: 12/05/2014 14:24:09 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO

--Create the Select Proc
CREATE PROCEDURE [dbo].[app_SQMatrixLines_GetAll]
@QID int
AS
   Select * 
   				,(Select isnull(Max(LineOrder),0) from [SQMatrixLines] where QID = @QID) as MAX
   	from [SQMatrixLines] where QID = @QID order by LineOrder

GO

/****** Object:  StoredProcedure [dbo].[app_SQMatrixLines_GetByID]    Script Date: 12/05/2014 14:24:09 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO

--Create the Select Proc
CREATE PROCEDURE [dbo].[app_SQMatrixLines_GetByID]
@SQMLID int 
AS
   Select * from [SQMatrixLines] Where SQMLID = @SQMLID

GO

/****** Object:  StoredProcedure [dbo].[app_SQMatrixLines_Insert]    Script Date: 12/05/2014 14:24:09 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO

--Create the Insert Proc
CREATE PROCEDURE [dbo].[app_SQMatrixLines_Insert] (
	 @QID int 
	,@LineOrder int 
	,@LineText varchar (500)
	,@FldInt1 int 
	,@FldInt2 int 
	,@FldInt3 int 
	,@FldBit1 bit 
	,@FldBit2 bit 
	,@FldBit3 bit 
	,@FldText1 text 
	,@FldText2 text 
	,@FldText3 text 
	,@SQMLID int output 
) AS
Begin
	Insert into SQMatrixLines
		(QID
		,LineOrder
		,LineText
		,FldInt1
		,FldInt2
		,FldInt3
		,FldBit1
		,FldBit2
		,FldBit3
		,FldText1
		,FldText2
		,FldText3
)
	VALUES
		(@QID
		,(Select isnull(Max(LineOrder),0) +1 from SQMatrixLines where QID=@QID) -- @LineOrder
		,@LineText
		,@FldInt1
		,@FldInt2
		,@FldInt3
		,@FldBit1
		,@FldBit2
		,@FldBit3
		,@FldText1
		,@FldText2
		,@FldText3
)
	Select @SQMLID = SCOPE_IDENTITY()
END

GO

/****** Object:  StoredProcedure [dbo].[app_SQMatrixLines_MoveDn]    Script Date: 12/05/2014 14:24:09 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO

CREATE PROCEDURE [dbo].[app_SQMatrixLines_MoveDn]
@SQMLID int 
AS

	Declare @CurrentRecordLocation int, @NextRecordID int, @QID int
	Select @CurrentRecordLocation = LineOrder, @QID = QID from SQMatrixLines where SQMLID = @SQMLID
	exec [dbo].[app_SQMatrixLines_Reorder] @QID
	if @CurrentRecordLocation < (Select MAX(LineOrder) from SQMatrixLines where QID = @QID)
	begin
		Select @NextRecordID = SQMLID from SQMatrixLines where LineOrder = (@CurrentRecordLocation + 1) AND QID = @QID
		
		update SQMatrixLines set LineOrder = @CurrentRecordLocation + 1
		where SQMLID = @SQMLID
	
		update SQMatrixLines set LineOrder = @CurrentRecordLocation 
		where SQMLID = @NextRecordID
	end




GO

/****** Object:  StoredProcedure [dbo].[app_SQMatrixLines_MoveUp]    Script Date: 12/05/2014 14:24:09 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO


CREATE PROCEDURE [dbo].[app_SQMatrixLines_MoveUp]
@SQMLID int 
AS
	Declare @CurrentRecordLocation int, @PreviousRecordID int, @QID int
	Select @CurrentRecordLocation = LineOrder, @QID = QID from SQMatrixLines where SQMLID = @SQMLID
	exec [dbo].[app_SQMatrixLines_Reorder] @QID
	if @CurrentRecordLocation > 1
	begin
		Select @PreviousRecordID = SQMLID from SQMatrixLines where LineOrder = (@CurrentRecordLocation - 1) AND QID = @QID
		
		update SQMatrixLines set LineOrder = @CurrentRecordLocation - 1
		where SQMLID = @SQMLID
	
		update SQMatrixLines set LineOrder = @CurrentRecordLocation 
		where SQMLID = @PreviousRecordID
	end



GO

/****** Object:  StoredProcedure [dbo].[app_SQMatrixLines_Reorder]    Script Date: 12/05/2014 14:24:09 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO

CREATE Procedure [dbo].[app_SQMatrixLines_Reorder]
@QID int 
AS
	UPDATE SQMatrixLines 
	SET LineOrder = rowNumber 
	FROM SQMatrixLines
		INNER JOIN 
		(SELECT SQMLID, LineOrder, row_number() OVER (ORDER BY LineOrder Asc) as rowNumber
			FROM SQMatrixLines where QID = @QID) drRowNumbers 
			ON drRowNumbers.SQMLID = SQMatrixLines.SQMLID and QID = @QID
	where QID = @QID

GO

/****** Object:  StoredProcedure [dbo].[app_SQMatrixLines_Update]    Script Date: 12/05/2014 14:24:09 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO

--Create the Update Proc
CREATE PROCEDURE [dbo].[app_SQMatrixLines_Update] (
	 @SQMLID int 
	,@QID int 
	,@LineOrder int 
	,@LineText varchar (500)
	,@FldInt1 int 
	,@FldInt2 int 
	,@FldInt3 int 
	,@FldBit1 bit 
	,@FldBit2 bit 
	,@FldBit3 bit 
	,@FldText1 text 
	,@FldText2 text 
	,@FldText3 text 

) AS
	Update SQMatrixLines
	Set 
		QID =  @QID
		,LineOrder =  @LineOrder
		,LineText =  @LineText
		,FldInt1 =  @FldInt1
		,FldInt2 =  @FldInt2
		,FldInt3 =  @FldInt3
		,FldBit1 =  @FldBit1
		,FldBit2 =  @FldBit2
		,FldBit3 =  @FldBit3
		,FldText1 =  @FldText1
		,FldText2 =  @FldText2
		,FldText3 =  @FldText3

	Where SQMLID = @SQMLID

GO

/****** Object:  StoredProcedure [dbo].[app_SRPReport_Delete]    Script Date: 12/05/2014 14:24:09 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO

 /****** Object:  StoredProcedure [dbo].[app_SRPReport_Delete]    Script Date: 03/10/2014 14:43:26 ******/






--Create the Delete Proc
CREATE PROCEDURE [dbo].[app_SRPReport_Delete]
@RID int 
AS
   Delete from [SRPReport] Where RID = @RID




GO

/****** Object:  StoredProcedure [dbo].[app_SRPReport_GetAll]    Script Date: 12/05/2014 14:24:09 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO

--Create the Select Proc
CREATE PROCEDURE [dbo].[app_SRPReport_GetAll]
@TenID int = null
AS
   Select RID, ReportName, AddedDate
   from [SRPReport]
where (TenID = @TenID or @TenID is null)    
   




GO

/****** Object:  StoredProcedure [dbo].[app_SRPReport_GetByID]    Script Date: 12/05/2014 14:24:09 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO

 /****** Object:  StoredProcedure [dbo].[app_SRPReport_GetByID]    Script Date: 03/10/2014 14:43:26 ******/






--Create the Select Proc
CREATE PROCEDURE [dbo].[app_SRPReport_GetByID]
@RID int 
AS
   Select * from [SRPReport] Where RID = @RID




GO

/****** Object:  StoredProcedure [dbo].[app_SRPReport_Insert]    Script Date: 12/05/2014 14:24:09 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO



CREATE PROCEDURE [dbo].[app_SRPReport_Insert] (
	 @RTID int 
	,@ProgId int 
	,@ReportName varchar (150)
	,@DisplayFilters bit 
	,@ReportFormat int 
	,@DOBFrom datetime 
	,@DOBTo datetime 
	,@AgeFrom int 
	,@AgeTo int 
	,@SchoolGrade varchar (5)
	,@FirstName varchar (50)
	,@LastName varchar (50)
	,@Gender varchar (1)
	,@EmailAddress varchar (150)
	,@PhoneNumber varchar (20)
	,@City varchar (20)
	,@State varchar (2)
	,@ZipCode varchar (10)
	,@County varchar (50)
	,@PrimaryLibrary int 
	,@SchoolName varchar (50)
	,@District varchar (50)
	,@Teacher varchar (20)
	,@GroupTeamName varchar (20)
	,@SchoolType int 
	,@LiteracyLevel1 int 
	,@LiteracyLevel2 int 
	,@Custom1 varchar (50)
	,@Custom2 varchar (50)
	,@Custom3 varchar (50)
	,@Custom4 varchar (50)
	,@Custom5 varchar (50)
	,@RegistrationDateStart datetime 
	,@RegistrationDateEnd datetime 
	,@PointsMin int 
	,@PointsMax int 
	,@PointsStart datetime 
	,@PointsEnd datetime 
	,@EventCode varchar (50)
	,@EarnedBadge int 
	,@PhysicalPrizeEarned varchar (50)
	,@PhysicalPrizeRedeemed bit 
	,@PhysicalPrizeStartDate datetime 
	,@PhysicalPrizeEndDate datetime 
	,@ReviewsMin int 
	,@ReviewsMax int 
	,@ReviewTitle varchar (150)
	,@ReviewAuthor varchar (100)
	,@ReviewStartDate datetime 
	,@ReviewEndDate datetime 
	,@RandomDrawingName varchar (50)
	,@RandomDrawingNum int 
	,@RandomDrawingStartDate datetime 
	,@RandomDrawingEndDate datetime 
	,@HasBeenDrawn bit 
	,@HasRedeemend bit 
	,@PIDInc bit 
	,@UsernameInc bit 
	,@DOBInc bit 
	,@AgeInc bit 
	,@SchoolGradeInc bit 
	,@FirstNameInc bit 
	,@LastNameInc bit 
	,@GenderInc bit 
	,@EmailAddressInc bit 
	,@PhoneNumberInc bit 
	,@CityInc bit 
	,@StateInc bit 
	,@ZipCodeInc bit 
	,@CountyInc bit 
	,@PrimaryLibraryInc bit 
	,@SchoolNameInc bit 
	,@DistrictInc bit 
	,@TeacherInc bit 
	,@GroupTeamNameInc bit 
	,@SchoolTypeInc bit 
	,@LiteracyLevel1Inc bit 
	,@LiteracyLevel2Inc bit 
	,@Custom1Inc bit 
	,@Custom2Inc bit 
	,@Custom3Inc bit 
	,@Custom4Inc bit 
	,@Custom5Inc bit 
	,@RegistrationDateInc bit 
	,@PointsInc bit 
	,@EarnedBadgeInc bit 
	,@PhysicalPrizeNameInc bit 
	,@PhysicalPrizeDateInc bit 
	,@NumReviewsInc bit 
	,@ReviewAuthorInc bit 
	,@ReviewTitleInc bit 
	,@ReviewDateInc bit 
	,@RandomDrawingNameInc bit 
	,@RandomDrawingNumInc bit 
	,@RandomDrawingDateInc bit 
	,@HasBeenDrawnInc bit 
	,@HasRedeemendInc bit 
	,@LastModDate datetime 
	,@LastModUser varchar (50)
	,@AddedDate datetime 
	,@AddedUser varchar (50)
	,@SDistrict varchar(50)
	,@SDistrictInc bit 	
	,@TenID int = 0
,@FldInt1 int = 0
,@FldInt2 int = 0
,@FldInt3 int = 0
,@FldBit1 bit = 0
,@FldBit2 bit = 0
,@FldBit3 bit = 0
,@FldText1 text = ''
,@FldText2 text = ''
,@FldText3 text = ''


,@Score1From	int	= 0
,@Score1To	int		= 0
,@Score1PctFrom	int		= 0
,@Score1PctTo	int		= 0
,@Score2From	int		= 0
,@Score2To	int		= 0
,@Score2PctFrom	int		= 0
,@Score2PctTo	int		= 0

,@Score1Inc bit
,@Score2Inc bit
,@Score1PctInc bit
,@Score2PctInc bit

	,@RID int output 
) AS
Begin
	Insert into SRPReport
		(RTID
		,ProgId
		,ReportName
		,DisplayFilters
		,ReportFormat
		,DOBFrom
		,DOBTo
		,AgeFrom
		,AgeTo
		,SchoolGrade
		,FirstName
		,LastName
		,Gender
		,EmailAddress
		,PhoneNumber
		,City
		,State
		,ZipCode
		,County
		,PrimaryLibrary
		,SchoolName
		,District
		,Teacher
		,GroupTeamName
		,SchoolType
		,LiteracyLevel1
		,LiteracyLevel2
		,Custom1
		,Custom2
		,Custom3
		,Custom4
		,Custom5
		,RegistrationDateStart
		,RegistrationDateEnd
		,PointsMin
		,PointsMax
		,PointsStart
		,PointsEnd
		,EventCode
		,EarnedBadge
		,PhysicalPrizeEarned
		,PhysicalPrizeRedeemed
		,PhysicalPrizeStartDate
		,PhysicalPrizeEndDate
		,ReviewsMin
		,ReviewsMax
		,ReviewTitle
		,ReviewAuthor
		,ReviewStartDate
		,ReviewEndDate
		,RandomDrawingName
		,RandomDrawingNum
		,RandomDrawingStartDate
		,RandomDrawingEndDate
		,HasBeenDrawn
		,HasRedeemend
		,PIDInc
		,UsernameInc
		,DOBInc
		,AgeInc
		,SchoolGradeInc
		,FirstNameInc
		,LastNameInc
		,GenderInc
		,EmailAddressInc
		,PhoneNumberInc
		,CityInc
		,StateInc
		,ZipCodeInc
		,CountyInc
		,PrimaryLibraryInc
		,SchoolNameInc
		,DistrictInc
		,TeacherInc
		,GroupTeamNameInc
		,SchoolTypeInc
		,LiteracyLevel1Inc
		,LiteracyLevel2Inc
		,Custom1Inc
		,Custom2Inc
		,Custom3Inc
		,Custom4Inc
		,Custom5Inc
		,RegistrationDateInc
		,PointsInc
		,EarnedBadgeInc
		,PhysicalPrizeNameInc
		,PhysicalPrizeDateInc
		,NumReviewsInc
		,ReviewAuthorInc
		,ReviewTitleInc
		,ReviewDateInc
		,RandomDrawingNameInc
		,RandomDrawingNumInc
		,RandomDrawingDateInc
		,HasBeenDrawnInc
		,HasRedeemendInc
		,LastModDate
		,LastModUser
		,AddedDate
		,AddedUser
		,SDistrict,SDistrictInc
		,TenID, FldInt1, FldInt2, FldInt3, FldBit1, FldBit2, FldBit3, FldText1, FldText2, FldText3
		,Score1From,Score1To,Score1PctFrom,Score1PctTo,Score2From,Score2To,Score2PctFrom,Score2PctTo
		,Score1Inc,Score2Inc,Score1PctInc,Score2PctInc
)
	VALUES
		(@RTID
		,@ProgId
		,@ReportName
		,@DisplayFilters
		,@ReportFormat
		,@DOBFrom
		,@DOBTo
		,@AgeFrom
		,@AgeTo
		,@SchoolGrade
		,@FirstName
		,@LastName
		,@Gender
		,@EmailAddress
		,@PhoneNumber
		,@City
		,@State
		,@ZipCode
		,@County
		,@PrimaryLibrary
		,@SchoolName
		,@District
		,@Teacher
		,@GroupTeamName
		,@SchoolType
		,@LiteracyLevel1
		,@LiteracyLevel2
		,@Custom1
		,@Custom2
		,@Custom3
		,@Custom4
		,@Custom5
		,@RegistrationDateStart
		,@RegistrationDateEnd
		,@PointsMin
		,@PointsMax
		,@PointsStart
		,@PointsEnd
		,@EventCode
		,@EarnedBadge
		,@PhysicalPrizeEarned
		,@PhysicalPrizeRedeemed
		,@PhysicalPrizeStartDate
		,@PhysicalPrizeEndDate
		,@ReviewsMin
		,@ReviewsMax
		,@ReviewTitle
		,@ReviewAuthor
		,@ReviewStartDate
		,@ReviewEndDate
		,@RandomDrawingName
		,@RandomDrawingNum
		,@RandomDrawingStartDate
		,@RandomDrawingEndDate
		,@HasBeenDrawn
		,@HasRedeemend
		,@PIDInc
		,@UsernameInc
		,@DOBInc
		,@AgeInc
		,@SchoolGradeInc
		,@FirstNameInc
		,@LastNameInc
		,@GenderInc
		,@EmailAddressInc
		,@PhoneNumberInc
		,@CityInc
		,@StateInc
		,@ZipCodeInc
		,@CountyInc
		,@PrimaryLibraryInc
		,@SchoolNameInc
		,@DistrictInc
		,@TeacherInc
		,@GroupTeamNameInc
		,@SchoolTypeInc
		,@LiteracyLevel1Inc
		,@LiteracyLevel2Inc
		,@Custom1Inc
		,@Custom2Inc
		,@Custom3Inc
		,@Custom4Inc
		,@Custom5Inc
		,@RegistrationDateInc
		,@PointsInc
		,@EarnedBadgeInc
		,@PhysicalPrizeNameInc
		,@PhysicalPrizeDateInc
		,@NumReviewsInc
		,@ReviewAuthorInc
		,@ReviewTitleInc
		,@ReviewDateInc
		,@RandomDrawingNameInc
		,@RandomDrawingNumInc
		,@RandomDrawingDateInc
		,@HasBeenDrawnInc
		,@HasRedeemendInc
		,@LastModDate
		,@LastModUser
		,@AddedDate
		,@AddedUser
		,@SDistrict,@SDistrictInc
		,@TenID, @FldInt1, @FldInt2, @FldInt3, @FldBit1, @FldBit2, @FldBit3, @FldText1, @FldText2, @FldText3		
		,@Score1From,@Score1To,@Score1PctFrom,@Score1PctTo,@Score2From,@Score2To,@Score2PctFrom,@Score2PctTo
		,@Score1Inc,@Score2Inc,@Score1PctInc,@Score2PctInc
)
	Select @RID = SCOPE_IDENTITY()
END



GO

/****** Object:  StoredProcedure [dbo].[app_SRPReport_Update]    Script Date: 12/05/2014 14:24:09 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO



CREATE PROCEDURE [dbo].[app_SRPReport_Update] (
	 @RID int 
	,@RTID int 
	,@ProgId int 
	,@ReportName varchar (150)
	,@DisplayFilters bit 
	,@ReportFormat int 
	,@DOBFrom datetime 
	,@DOBTo datetime 
	,@AgeFrom int 
	,@AgeTo int 
	,@SchoolGrade varchar (5)
	,@FirstName varchar (50)
	,@LastName varchar (50)
	,@Gender varchar (1)
	,@EmailAddress varchar (150)
	,@PhoneNumber varchar (20)
	,@City varchar (20)
	,@State varchar (2)
	,@ZipCode varchar (10)
	,@County varchar (50)
	,@PrimaryLibrary int 
	,@SchoolName varchar (50)
	,@District varchar (50)
	,@Teacher varchar (20)
	,@GroupTeamName varchar (20)
	,@SchoolType int 
	,@LiteracyLevel1 int 
	,@LiteracyLevel2 int 
	,@Custom1 varchar (50)
	,@Custom2 varchar (50)
	,@Custom3 varchar (50)
	,@Custom4 varchar (50)
	,@Custom5 varchar (50)
	,@RegistrationDateStart datetime 
	,@RegistrationDateEnd datetime 
	,@PointsMin int 
	,@PointsMax int 
	,@PointsStart datetime 
	,@PointsEnd datetime 
	,@EventCode varchar (50)
	,@EarnedBadge int 
	,@PhysicalPrizeEarned varchar (50)
	,@PhysicalPrizeRedeemed bit 
	,@PhysicalPrizeStartDate datetime 
	,@PhysicalPrizeEndDate datetime 
	,@ReviewsMin int 
	,@ReviewsMax int 
	,@ReviewTitle varchar (150)
	,@ReviewAuthor varchar (100)
	,@ReviewStartDate datetime 
	,@ReviewEndDate datetime 
	,@RandomDrawingName varchar (50)
	,@RandomDrawingNum int 
	,@RandomDrawingStartDate datetime 
	,@RandomDrawingEndDate datetime 
	,@HasBeenDrawn bit 
	,@HasRedeemend bit 
	,@PIDInc bit 
	,@UsernameInc bit 
	,@DOBInc bit 
	,@AgeInc bit 
	,@SchoolGradeInc bit 
	,@FirstNameInc bit 
	,@LastNameInc bit 
	,@GenderInc bit 
	,@EmailAddressInc bit 
	,@PhoneNumberInc bit 
	,@CityInc bit 
	,@StateInc bit 
	,@ZipCodeInc bit 
	,@CountyInc bit 
	,@PrimaryLibraryInc bit 
	,@SchoolNameInc bit 
	,@DistrictInc bit 
	,@TeacherInc bit 
	,@GroupTeamNameInc bit 
	,@SchoolTypeInc bit 
	,@LiteracyLevel1Inc bit 
	,@LiteracyLevel2Inc bit 
	,@Custom1Inc bit 
	,@Custom2Inc bit 
	,@Custom3Inc bit 
	,@Custom4Inc bit 
	,@Custom5Inc bit 
	,@RegistrationDateInc bit 
	,@PointsInc bit 
	,@EarnedBadgeInc bit 
	,@PhysicalPrizeNameInc bit 
	,@PhysicalPrizeDateInc bit 
	,@NumReviewsInc bit 
	,@ReviewAuthorInc bit 
	,@ReviewTitleInc bit 
	,@ReviewDateInc bit 
	,@RandomDrawingNameInc bit 
	,@RandomDrawingNumInc bit 
	,@RandomDrawingDateInc bit 
	,@HasBeenDrawnInc bit 
	,@HasRedeemendInc bit 
	,@LastModDate datetime 
	,@LastModUser varchar (50)
	,@AddedDate datetime 
	,@AddedUser varchar (50)
	,@SDistrict varchar(50)
	,@SDistrictInc bit 
,@TenID int = 0
,@FldInt1 int = 0
,@FldInt2 int = 0
,@FldInt3 int = 0
,@FldBit1 bit = 0
,@FldBit2 bit = 0
,@FldBit3 bit = 0
,@FldText1 text = ''
,@FldText2 text = ''
,@FldText3 text = ''


,@Score1From	int	= 0
,@Score1To	int		= 0
,@Score1PctFrom	int		= 0
,@Score1PctTo	int		= 0
,@Score2From	int		= 0
,@Score2To	int		= 0
,@Score2PctFrom	int		= 0
,@Score2PctTo	int		= 0

,@Score1Inc bit
,@Score2Inc bit
,@Score1PctInc bit
,@Score2PctInc bit


) AS
	Update SRPReport
	Set 
		RTID =  @RTID
		,ProgId =  @ProgId
		,ReportName =  @ReportName
		,DisplayFilters =  @DisplayFilters
		,ReportFormat =  @ReportFormat
		,DOBFrom =  @DOBFrom
		,DOBTo =  @DOBTo
		,AgeFrom =  @AgeFrom
		,AgeTo =  @AgeTo
		,SchoolGrade =  @SchoolGrade
		,FirstName =  @FirstName
		,LastName =  @LastName
		,Gender =  @Gender
		,EmailAddress =  @EmailAddress
		,PhoneNumber =  @PhoneNumber
		,City =  @City
		,State =  @State
		,ZipCode =  @ZipCode
		,County =  @County
		,PrimaryLibrary =  @PrimaryLibrary
		,SchoolName =  @SchoolName
		,District =  @District
		,Teacher =  @Teacher
		,GroupTeamName =  @GroupTeamName
		,SchoolType =  @SchoolType
		,LiteracyLevel1 =  @LiteracyLevel1
		,LiteracyLevel2 =  @LiteracyLevel2
		,Custom1 =  @Custom1
		,Custom2 =  @Custom2
		,Custom3 =  @Custom3
		,Custom4 =  @Custom4
		,Custom5 =  @Custom5
		,RegistrationDateStart =  @RegistrationDateStart
		,RegistrationDateEnd =  @RegistrationDateEnd
		,PointsMin =  @PointsMin
		,PointsMax =  @PointsMax
		,PointsStart =  @PointsStart
		,PointsEnd =  @PointsEnd
		,EventCode =  @EventCode
		,EarnedBadge =  @EarnedBadge
		,PhysicalPrizeEarned =  @PhysicalPrizeEarned
		,PhysicalPrizeRedeemed =  @PhysicalPrizeRedeemed
		,PhysicalPrizeStartDate =  @PhysicalPrizeStartDate
		,PhysicalPrizeEndDate =  @PhysicalPrizeEndDate
		,ReviewsMin =  @ReviewsMin
		,ReviewsMax =  @ReviewsMax
		,ReviewTitle =  @ReviewTitle
		,ReviewAuthor =  @ReviewAuthor
		,ReviewStartDate =  @ReviewStartDate
		,ReviewEndDate =  @ReviewEndDate
		,RandomDrawingName =  @RandomDrawingName
		,RandomDrawingNum =  @RandomDrawingNum
		,RandomDrawingStartDate =  @RandomDrawingStartDate
		,RandomDrawingEndDate =  @RandomDrawingEndDate
		,HasBeenDrawn =  @HasBeenDrawn
		,HasRedeemend =  @HasRedeemend
		,PIDInc =  @PIDInc
		,UsernameInc =  @UsernameInc
		,DOBInc =  @DOBInc
		,AgeInc =  @AgeInc
		,SchoolGradeInc =  @SchoolGradeInc
		,FirstNameInc =  @FirstNameInc
		,LastNameInc =  @LastNameInc
		,GenderInc =  @GenderInc
		,EmailAddressInc =  @EmailAddressInc
		,PhoneNumberInc =  @PhoneNumberInc
		,CityInc =  @CityInc
		,StateInc =  @StateInc
		,ZipCodeInc =  @ZipCodeInc
		,CountyInc =  @CountyInc
		,PrimaryLibraryInc =  @PrimaryLibraryInc
		,SchoolNameInc =  @SchoolNameInc
		,DistrictInc =  @DistrictInc
		,TeacherInc =  @TeacherInc
		,GroupTeamNameInc =  @GroupTeamNameInc
		,SchoolTypeInc =  @SchoolTypeInc
		,LiteracyLevel1Inc =  @LiteracyLevel1Inc
		,LiteracyLevel2Inc =  @LiteracyLevel2Inc
		,Custom1Inc =  @Custom1Inc
		,Custom2Inc =  @Custom2Inc
		,Custom3Inc =  @Custom3Inc
		,Custom4Inc =  @Custom4Inc
		,Custom5Inc =  @Custom5Inc
		,RegistrationDateInc =  @RegistrationDateInc
		,PointsInc =  @PointsInc
		,EarnedBadgeInc =  @EarnedBadgeInc
		,PhysicalPrizeNameInc =  @PhysicalPrizeNameInc
		,PhysicalPrizeDateInc =  @PhysicalPrizeDateInc
		,NumReviewsInc =  @NumReviewsInc
		,ReviewAuthorInc =  @ReviewAuthorInc
		,ReviewTitleInc =  @ReviewTitleInc
		,ReviewDateInc =  @ReviewDateInc
		,RandomDrawingNameInc =  @RandomDrawingNameInc
		,RandomDrawingNumInc =  @RandomDrawingNumInc
		,RandomDrawingDateInc =  @RandomDrawingDateInc
		,HasBeenDrawnInc =  @HasBeenDrawnInc
		,HasRedeemendInc =  @HasRedeemendInc
		,LastModDate =  @LastModDate
		,LastModUser =  @LastModUser
		,AddedDate =  @AddedDate
		,AddedUser =  @AddedUser
		,SDistrict = @SDistrict
		,SDistrictInc = @SDistrictInc
,TenID = @TenID
,FldInt1 = @FldInt1 
,FldInt2 = @FldInt2
,FldInt3 = @FldInt3 
,FldBit1 = @FldBit1
,FldBit2 = @FldBit2
,FldBit3 = @FldBit3
,FldText1 = @FldText1
,FldText2 = @FldText2
,FldText3 = @FldText3

,Score1From = @Score1From
,Score1To = @Score1To
,Score1PctFrom = @Score1PctFrom 
,Score1PctTo = @Score1PctTo
,Score2From = @Score2From
,Score2To = @Score2To
,Score2PctFrom = @Score2PctFrom
,Score2PctTo = @Score2PctTo

,Score1Inc = @Score1Inc
,Score2Inc = @Score2Inc
,Score1PctInc = @Score1PctInc
,Score2PctInc = @Score2PctInc

	Where RID = @RID AND TenID = @TenID


GO

/****** Object:  StoredProcedure [dbo].[app_SRPSettings_Delete]    Script Date: 12/05/2014 14:24:09 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO

--Create the Delete Proc
CREATE PROCEDURE [dbo].[app_SRPSettings_Delete]
@SID int 
,@TenID int = null
AS
   Delete from [SRPSettings] Where SID = @SID AND TenID = @TenID




GO

/****** Object:  StoredProcedure [dbo].[app_SRPSettings_GetAll]    Script Date: 12/05/2014 14:24:09 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO


--Create the Select Proc
CREATE PROCEDURE [dbo].[app_SRPSettings_GetAll]
@TenID int = null
AS
   Select * from [SRPSettings] where (TenID = @TenID or @TenID is null)




GO

/****** Object:  StoredProcedure [dbo].[app_SRPSettings_GetByID]    Script Date: 12/05/2014 14:24:09 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO

 /****** Object:  StoredProcedure [dbo].[app_SRPSettings_GetByID]    Script Date: 03/10/2014 14:43:27 ******/






--Create the Select Proc
CREATE PROCEDURE [dbo].[app_SRPSettings_GetByID]
@SID int 
AS
   Select * from [SRPSettings] Where SID = @SID




GO

/****** Object:  StoredProcedure [dbo].[app_SRPSettings_GetByName]    Script Date: 12/05/2014 14:24:09 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO


CREATE PROCEDURE [dbo].[app_SRPSettings_GetByName]
@Name varchar(50) 
,@TenID int = null
AS
   Select * from [SRPSettings] Where Name = @Name and (TenID = @TenID or @TenID is null)




GO

/****** Object:  StoredProcedure [dbo].[app_SRPSettings_Insert]    Script Date: 12/05/2014 14:24:09 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO

--Create the Insert Proc
CREATE PROCEDURE [dbo].[app_SRPSettings_Insert] (
	 @Name varchar (50)
	,@Value text 
	,@StorageType varchar (50)
	,@EditType varchar (50)
	,@ModID int 
	,@Label varchar (50)
	,@Description varchar (500)
	,@ValueList varchar (5000)
	,@DefaultValue text
,@TenID int = 0
,@FldInt1 int = 0
,@FldInt2 int = 0
,@FldInt3 int = 0
,@FldBit1 bit = 0
,@FldBit2 bit = 0
,@FldBit3 bit = 0
,@FldText1 text = ''
,@FldText2 text = ''
,@FldText3 text = ''	
	,@SID int output 
) AS
Begin
	Insert into SRPSettings
		(Name
		,Value
		,StorageType
		,EditType
		,ModID
		,Label
		,Description
		,ValueList
		,DefaultValue
		,TenID, FldInt1, FldInt2, FldInt3, FldBit1, FldBit2, FldBit3, FldText1, FldText2, FldText3
)
	VALUES
		(@Name
		,@Value
		,@StorageType
		,@EditType
		,@ModID
		,@Label
		,@Description
		,@ValueList
		,@DefaultValue
		,@TenID, @FldInt1, @FldInt2, @FldInt3, @FldBit1, @FldBit2, @FldBit3, @FldText1, @FldText2, @FldText3		
)
	Select @SID = SCOPE_IDENTITY()
END




GO

/****** Object:  StoredProcedure [dbo].[app_SRPSettings_Update]    Script Date: 12/05/2014 14:24:09 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO

--Create the Update Proc
CREATE PROCEDURE [dbo].[app_SRPSettings_Update] (
	 @SID int 
	,@Name varchar (50)
	,@Value text 
	,@StorageType varchar (50)
	,@EditType varchar (50)
	,@ModID int 
	,@Label varchar (50)
	,@Description varchar (500)
	,@ValueList varchar (5000)
	,@DefaultValue text 
,@TenID int = 0
,@FldInt1 int = 0
,@FldInt2 int = 0
,@FldInt3 int = 0
,@FldBit1 bit = 0
,@FldBit2 bit = 0
,@FldBit3 bit = 0
,@FldText1 text = ''
,@FldText2 text = ''
,@FldText3 text = ''

) AS
	Update SRPSettings
	Set 
		Name =  @Name
		,Value =  @Value
		,StorageType =  @StorageType
		,EditType =  @EditType
		,ModID =  @ModID
		,Label =  @Label
		,Description =  @Description
		,ValueList =  @ValueList
		,DefaultValue =  @DefaultValue
,FldInt1 = @FldInt1 
,FldInt2 = @FldInt2
,FldInt3 = @FldInt3 
,FldBit1 = @FldBit1
,FldBit2 = @FldBit2
,FldBit3 = @FldBit3
,FldText1 = @FldText1
,FldText2 = @FldText2
,FldText3 = @FldText3
	Where SID = @SID
		AND TenID = @TenID



GO

/****** Object:  StoredProcedure [dbo].[app_Survey_Delete]    Script Date: 12/05/2014 14:24:09 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO

--Create the Delete Proc
CREATE PROCEDURE [dbo].[app_Survey_Delete]
@SID int 
AS

Delete from SQChoices Where QID in (select QID from SurveyQuestion Where SID = @SID)
Delete from SQMatrixLines Where QID in (select QID from SurveyQuestion Where SID = @SID)
Delete from SurveyQuestion Where SID = @SID

Delete from SurveyAnswers Where SID = @SID
Delete from SurveyResults Where SID = @SID

update Programs Set PreTestID = 0 where PreTestID = @SID
update Programs Set PostTestID = 0 where PostTestID = @SID

Delete from [Survey] Where SID = @SID


GO

/****** Object:  StoredProcedure [dbo].[app_Survey_GetAll]    Script Date: 12/05/2014 14:24:09 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO

--Create the Select Proc
CREATE PROCEDURE [dbo].[app_Survey_GetAll]
@TenID int = null
AS
   Select * from [Survey] where (TenID = @TenID or @TenID is null)

GO

/****** Object:  StoredProcedure [dbo].[app_Survey_GetAllFinalized]    Script Date: 12/05/2014 14:24:09 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO


--Create the Select Proc
create PROCEDURE [dbo].[app_Survey_GetAllFinalized]
@TenID int = null
AS
   Select * from [Survey] where (TenID = @TenID or @TenID is null) AND Status = 2

GO

/****** Object:  StoredProcedure [dbo].[app_Survey_GetByID]    Script Date: 12/05/2014 14:24:09 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO

--Create the Select Proc
CREATE PROCEDURE [dbo].[app_Survey_GetByID]
@SID int 
AS
   Select * from [Survey] Where SID = @SID

GO

/****** Object:  StoredProcedure [dbo].[app_Survey_GetNumQuestions]    Script Date: 12/05/2014 14:24:09 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO

CREATE PROCEDURE [dbo].[app_Survey_GetNumQuestions]
@SID int = null
AS
   Select isnull(Max(QNumber),0) as NumQuestions from SurveyQuestion where SID=@SID

GO

/****** Object:  StoredProcedure [dbo].[app_Survey_Insert]    Script Date: 12/05/2014 14:24:09 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO

--Create the Insert Proc
CREATE PROCEDURE [dbo].[app_Survey_Insert] (
	 @Name varchar (50)
	,@LongName varchar (150)
	,@Description text 
	,@Preamble text 
	,@Status int 
	,@TakenCount int 
	,@PatronCount int 
	,@CanBeScored bit 
	,@TenID int 
	,@FldInt1 int 
	,@FldInt2 int 
	,@FldInt3 int 
	,@FldBit1 bit 
	,@FldBit2 bit 
	,@FldBit3 bit 
	,@FldText1 text 
	,@FldText2 text 
	,@FldText3 text 
	,@SID int output 
) AS
Begin
	Insert into Survey
		(Name
		,LongName
		,Description
		,Preamble
		,Status
		,TakenCount
		,PatronCount
		,CanBeScored
		,TenID
		,FldInt1
		,FldInt2
		,FldInt3
		,FldBit1
		,FldBit2
		,FldBit3
		,FldText1
		,FldText2
		,FldText3
)
	VALUES
		(@Name
		,@LongName
		,@Description
		,@Preamble
		,@Status
		,@TakenCount
		,@PatronCount
		,@CanBeScored
		,@TenID
		,@FldInt1
		,@FldInt2
		,@FldInt3
		,@FldBit1
		,@FldBit2
		,@FldBit3
		,@FldText1
		,@FldText2
		,@FldText3
)
	Select @SID = SCOPE_IDENTITY()
END

GO

/****** Object:  StoredProcedure [dbo].[app_Survey_Update]    Script Date: 12/05/2014 14:24:09 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO

--Create the Update Proc
CREATE PROCEDURE [dbo].[app_Survey_Update] (
	 @SID int 
	,@Name varchar (50)
	,@LongName varchar (150)
	,@Description text 
	,@Preamble text 
	,@Status int 
	,@TakenCount int 
	,@PatronCount int 
	,@CanBeScored bit 
	,@TenID int 
	,@FldInt1 int 
	,@FldInt2 int 
	,@FldInt3 int 
	,@FldBit1 bit 
	,@FldBit2 bit 
	,@FldBit3 bit 
	,@FldText1 text 
	,@FldText2 text 
	,@FldText3 text 

) AS
	Update Survey
	Set 
		Name =  @Name
		,LongName =  @LongName
		,Description =  @Description
		,Preamble =  @Preamble
		,Status =  @Status
		,TakenCount =  @TakenCount
		,PatronCount =  @PatronCount
		,CanBeScored =  @CanBeScored
		,TenID =  @TenID
		,FldInt1 =  @FldInt1
		,FldInt2 =  @FldInt2
		,FldInt3 =  @FldInt3
		,FldBit1 =  @FldBit1
		,FldBit2 =  @FldBit2
		,FldBit3 =  @FldBit3
		,FldText1 =  @FldText1
		,FldText2 =  @FldText2
		,FldText3 =  @FldText3

	Where SID = @SID AND TenID = @TenID

GO

/****** Object:  StoredProcedure [dbo].[app_SurveyAnswers_Delete]    Script Date: 12/05/2014 14:24:09 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO

--Create the Delete Proc
CREATE PROCEDURE [dbo].[app_SurveyAnswers_Delete]
@SAID int 
AS
   Delete from [SurveyAnswers] Where SAID = @SAID

GO

/****** Object:  StoredProcedure [dbo].[app_SurveyAnswers_GetAll]    Script Date: 12/05/2014 14:24:09 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO

--Create the Select Proc
CREATE PROCEDURE [dbo].[app_SurveyAnswers_GetAll]
@SRID int
AS
   Select a.* , q.QName, q.QText, q.QNumber
   from [SurveyAnswers] a join SurveyQuestion q
		on a.QID = q.QID 
   where a.SRID = @SRID
   order by q.QNumber

GO

/****** Object:  StoredProcedure [dbo].[app_SurveyAnswers_GetAllExpanded]    Script Date: 12/05/2014 14:24:09 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO


--Create the Select Proc
CREATE PROCEDURE [dbo].[app_SurveyAnswers_GetAllExpanded]
@SRID int = null
AS
   Select q.QText, a.*
		,(
			case a.SQMLID
				when (select MIN(SQMLID) from SurveyAnswers b where b.SRID = @SRID and b.QID = a.QID)
					then 1
				else 0
			end
		) ShowQText
   from SurveyAnswers a  join SurveyQuestion q
			on a.QID = q.QID
   where 
			SRID = @SRID


GO

/****** Object:  StoredProcedure [dbo].[app_SurveyAnswers_GetByID]    Script Date: 12/05/2014 14:24:10 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO

--Create the Select Proc
CREATE PROCEDURE [dbo].[app_SurveyAnswers_GetByID]
@SAID int 
AS
   Select * from [SurveyAnswers] Where SAID = @SAID

GO

/****** Object:  StoredProcedure [dbo].[app_SurveyAnswers_Insert]    Script Date: 12/05/2014 14:24:10 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO

--Create the Insert Proc
CREATE PROCEDURE [dbo].[app_SurveyAnswers_Insert] (
	 @SRID int 
	,@TenID int 
	,@PID int 
	,@SID int 
	,@QID int 
	,@SQMLID int 
	,@DateAnswered datetime 
	,@QType int 
	,@FreeFormAnswer text
	,@ClarificationText text
	,@ChoiceAnswerIDs varchar (2000)
	,@ChoiceAnswerText text
	,@FldInt1 int 
	,@FldInt2 int 
	,@FldInt3 int 
	,@FldBit1 bit 
	,@FldBit2 bit 
	,@FldBit3 bit 
	,@FldText1 text 
	,@FldText2 text 
	,@FldText3 text 
	,@SAID int output 
) AS
Begin
	Insert into SurveyAnswers
		(SRID
		,TenID
		,PID
		,SID
		,QID
		,SQMLID
		,DateAnswered
		,QType
		,FreeFormAnswer
		,ClarificationText
		,ChoiceAnswerIDs
		,ChoiceAnswerText
		,FldInt1
		,FldInt2
		,FldInt3
		,FldBit1
		,FldBit2
		,FldBit3
		,FldText1
		,FldText2
		,FldText3
)
	VALUES
		(@SRID
		,@TenID
		,@PID
		,@SID
		,@QID
		,@SQMLID
		,@DateAnswered
		,@QType
		,@FreeFormAnswer
		,@ClarificationText
		,@ChoiceAnswerIDs
		,@ChoiceAnswerText
		,@FldInt1
		,@FldInt2
		,@FldInt3
		,@FldBit1
		,@FldBit2
		,@FldBit3
		,@FldText1
		,@FldText2
		,@FldText3
)
	Select @SAID = SCOPE_IDENTITY()
END

GO

/****** Object:  StoredProcedure [dbo].[app_SurveyAnswers_Update]    Script Date: 12/05/2014 14:24:10 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO

--Create the Update Proc
CREATE PROCEDURE [dbo].[app_SurveyAnswers_Update] (
	 @SAID int 
	,@SRID int 
	,@TenID int 
	,@PID int 
	,@SID int 
	,@QID int 
	,@SQMLID int 
	,@DateAnswered datetime 
	,@QType int 
	,@FreeFormAnswer text
	,@ClarificationText text
	,@ChoiceAnswerIDs varchar (2000)
	,@ChoiceAnswerText text
	,@FldInt1 int 
	,@FldInt2 int 
	,@FldInt3 int 
	,@FldBit1 bit 
	,@FldBit2 bit 
	,@FldBit3 bit 
	,@FldText1 text 
	,@FldText2 text 
	,@FldText3 text 

) AS
	Update SurveyAnswers
	Set 
		SRID =  @SRID
		,TenID =  @TenID
		,PID =  @PID
		,SID =  @SID
		,QID =  @QID
		,SQMLID =  @SQMLID
		,DateAnswered =  @DateAnswered
		,QType =  @QType
		,FreeFormAnswer =  @FreeFormAnswer
		,ClarificationText =  @ClarificationText
		,ChoiceAnswerIDs =  @ChoiceAnswerIDs
		,ChoiceAnswerText =  @ChoiceAnswerText
		,FldInt1 =  @FldInt1
		,FldInt2 =  @FldInt2
		,FldInt3 =  @FldInt3
		,FldBit1 =  @FldBit1
		,FldBit2 =  @FldBit2
		,FldBit3 =  @FldBit3
		,FldText1 =  @FldText1
		,FldText2 =  @FldText2
		,FldText3 =  @FldText3

	Where SAID = @SAID

GO

/****** Object:  StoredProcedure [dbo].[app_SurveyQuestion_Delete]    Script Date: 12/05/2014 14:24:10 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO

CREATE PROCEDURE [dbo].[app_SurveyQuestion_Delete]
@QID int 
AS
	Declare @SID int;
	Select @SID = SID from [SurveyQuestion] Where QID = @QID
	Delete from [SurveyQuestion] Where QID = @QID	
	exec app_SurveyQuestion_Reorder @SID

GO

/****** Object:  StoredProcedure [dbo].[app_SurveyQuestion_GetAll]    Script Date: 12/05/2014 14:24:10 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO

CREATE PROCEDURE [dbo].[app_SurveyQuestion_GetAll]
@SID int = null
AS
   Select * 
			,(Select isnull(Max(QNumber),0) from SurveyQuestion where SID=@SID) as MAX
   from [SurveyQuestion] where SID = @SID
   order by QNumber

GO

/****** Object:  StoredProcedure [dbo].[app_SurveyQuestion_GetByID]    Script Date: 12/05/2014 14:24:10 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO

--Create the Select Proc
CREATE PROCEDURE [dbo].[app_SurveyQuestion_GetByID]
@QID int 
AS
   Select * from [SurveyQuestion] Where QID = @QID

GO

/****** Object:  StoredProcedure [dbo].[app_SurveyQuestion_GetPageFromQNum]    Script Date: 12/05/2014 14:24:10 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO


CREATE PROCEDURE [dbo].[app_SurveyQuestion_GetPageFromQNum]
@SID int = null
,@QNum int = 0
AS
	Declare @StopQID int
	Declare @StopQNum int 
	Select @StopQID = null, @StopQNum = null
	
	select top 1 @StopQID = QID, @StopQNum = QNumber 
	from [SurveyQuestion]
	where SID = @SID AND QNumber > @QNum  AND QType in (5,6)
	order by QNumber
	--select @StopQID, @StopQNum

   Select * 
			,(Select isnull(Max(QNumber),0) from SurveyQuestion where SID=@SID) as MAX
   from [SurveyQuestion] 
   where SID = @SID
		AND (QNumber > @QNum)
		AND (QNumber <= @StopQNum or @StopQNum is null)
order by QNumber

GO

/****** Object:  StoredProcedure [dbo].[app_SurveyQuestion_Insert]    Script Date: 12/05/2014 14:24:10 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO



CREATE PROCEDURE [dbo].[app_SurveyQuestion_Insert] (
@SID int
,@QNumber int
,@QType int
,@QName varchar (150)
,@QText text
,@DisplayControl int
,@DisplayDirection int
,@IsRequired bit
,@FldInt1 int
,@FldInt2 int
,@FldInt3 int
,@FldBit1 bit
,@FldBit2 bit
,@FldBit3 bit
,@FldText1 text
,@FldText2 text
,@FldText3 text
,@QID int output
) AS
Begin
Insert into SurveyQuestion
(SID
,QNumber
,QType
,QName
,QText
,DisplayControl
,DisplayDirection
,IsRequired
,FldInt1
,FldInt2
,FldInt3
,FldBit1
,FldBit2
,FldBit3
,FldText1
,FldText2
,FldText3
)
VALUES
(@SID
,(Select isnull(Max(QNumber),0) +1 from SurveyQuestion where SID=@SID) --@QNumber
,@QType
,@QName
,@QText
,@DisplayControl
,@DisplayDirection
,@IsRequired
,@FldInt1
,@FldInt2
,@FldInt3
,@FldBit1
,@FldBit2
,@FldBit3
,@FldText1
,@FldText2
,@FldText3
)
Select @QID = SCOPE_IDENTITY()
END

GO

/****** Object:  StoredProcedure [dbo].[app_SurveyQuestion_MoveDn]    Script Date: 12/05/2014 14:24:10 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO

CREATE PROCEDURE [dbo].[app_SurveyQuestion_MoveDn]
@QID int
AS

Declare @CurrentRecordLocation int, @NextRecordID int, @SID int
Select @CurrentRecordLocation = QNumber, @SID = SID from SurveyQuestion where QID = @QID
exec [dbo].[app_SurveyQuestion_Reorder] @SID
if @CurrentRecordLocation < (Select MAX(QNumber) from SurveyQuestion where SID = @SID)
	begin
		Select @NextRecordID = QID from SurveyQuestion where QNumber = (@CurrentRecordLocation + 1) AND SID = @SID
		
		update SurveyQuestion set QNumber = @CurrentRecordLocation + 1
		where QID = @QID
	
		update SurveyQuestion set QNumber = @CurrentRecordLocation 
		where QID = @NextRecordID
	end

GO

/****** Object:  StoredProcedure [dbo].[app_SurveyQuestion_MoveUp]    Script Date: 12/05/2014 14:24:10 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO

CREATE PROCEDURE [dbo].[app_SurveyQuestion_MoveUp]
@QID int 
AS
	Declare @CurrentRecordLocation int, @PreviousRecordID int, @SID int
	Select @CurrentRecordLocation = QNumber, @SID = SID from SurveyQuestion where QID = @QID
	exec [dbo].[app_SurveyQuestion_Reorder] @SID
	if @CurrentRecordLocation > 1
	begin
		Select @PreviousRecordID = QID from SurveyQuestion where QNumber = (@CurrentRecordLocation - 1) AND SID = @SID
		
		update SurveyQuestion set QNumber = @CurrentRecordLocation - 1
		where QID = @QID
	
		update SurveyQuestion set QNumber = @CurrentRecordLocation 
		where QID = @PreviousRecordID
	end

GO

/****** Object:  StoredProcedure [dbo].[app_SurveyQuestion_Reorder]    Script Date: 12/05/2014 14:24:10 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO

CREATE Procedure [dbo].[app_SurveyQuestion_Reorder]
@SID int 
AS
	UPDATE SurveyQuestion 
	SET QNumber = rowNumber 
	FROM SurveyQuestion
		INNER JOIN 
		(SELECT QID, QNumber, row_number() OVER (ORDER BY QNumber Asc) as rowNumber
			FROM SurveyQuestion where SID = @SID) drRowNumbers 
			ON drRowNumbers.QID = SurveyQuestion.QID and SID = @SID
	where SID = @SID

GO

/****** Object:  StoredProcedure [dbo].[app_SurveyQuestion_Update]    Script Date: 12/05/2014 14:24:10 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO

--Create the Update Proc
CREATE PROCEDURE [dbo].[app_SurveyQuestion_Update] (
	 @QID int 
	,@SID int 
	,@QNumber int 
	,@QType int 
	,@QName varchar (150)
	,@QText text 
	,@DisplayControl int 
	,@DisplayDirection int 
	,@IsRequired bit 
	,@FldInt1 int 
	,@FldInt2 int 
	,@FldInt3 int 
	,@FldBit1 bit 
	,@FldBit2 bit 
	,@FldBit3 bit 
	,@FldText1 text 
	,@FldText2 text 
	,@FldText3 text 

) AS
	Update SurveyQuestion
	Set 
		SID =  @SID
		,QNumber =  @QNumber
		,QType =  @QType
		,QName =  @QName
		,QText =  @QText
		,DisplayControl =  @DisplayControl
		,DisplayDirection =  @DisplayDirection
		,IsRequired =  @IsRequired
		,FldInt1 =  @FldInt1
		,FldInt2 =  @FldInt2
		,FldInt3 =  @FldInt3
		,FldBit1 =  @FldBit1
		,FldBit2 =  @FldBit2
		,FldBit3 =  @FldBit3
		,FldText1 =  @FldText1
		,FldText2 =  @FldText2
		,FldText3 =  @FldText3

	Where QID = @QID

GO

/****** Object:  StoredProcedure [dbo].[app_SurveyResults_Delete]    Script Date: 12/05/2014 14:24:10 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO

--Create the Delete Proc
CREATE PROCEDURE [dbo].[app_SurveyResults_Delete]
@SRID int 
AS
	Delete from dbo.SurveyAnswers Where SRID = @SRID
	Delete from [SurveyResults] Where SRID = @SRID

GO

/****** Object:  StoredProcedure [dbo].[app_SurveyResults_GetAll]    Script Date: 12/05/2014 14:24:10 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO

--Create the Select Proc
CREATE PROCEDURE [dbo].[app_SurveyResults_GetAll]
 @TenID int = 0
,@PID int = null
,@SID int = null
AS
   Select * 
   from [SurveyResults]
   where 
			TenID = @TenID
		AND (PID = @PID or @PID is null)
		AND (SID = @SID or @SID is null)

GO

/****** Object:  StoredProcedure [dbo].[app_SurveyResults_GetAllComplete]    Script Date: 12/05/2014 14:24:10 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO


CREATE PROCEDURE [dbo].[app_SurveyResults_GetAllComplete]
 @TenID int = 0
,@PID int = null
AS
   Select sr.* , s.Name
   , (
		case Source
		
			when 'Program Pre-Test' Then isnull((Select top 1 AdminName from Programs where PID = SourceID) + ' Program','N/A') 
			when 'Program Post-Test' Then isnull((Select top 1 AdminName from Programs where PID = SourceID) + ' Program','N/A') 
			when 'Game' Then isnull((Select top 1 AdminName from Minigame where MGID = SourceID) + ' Minigame','N/A') 
			when 'Book List' Then isnull((Select top 1 AdminName from BookList where BLID = SourceID) + ' Book List','N/A') 
			when 'Event' Then isnull((Select top 1 Name from Event where EID = SourceID) + ' Event','N/A') 
			when 'Reading Log' Then ''
			else 'N/A'
		end
   
     ) as SourceName
   from [SurveyResults] sr
				join Survey s
			on sr.SID = s.SID
   where 
			sr.TenID = @TenID
		AND (PID = @PID or @PID is null)

GO

/****** Object:  StoredProcedure [dbo].[app_SurveyResults_GetAllExpanded]    Script Date: 12/05/2014 14:24:10 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO


--Create the Select Proc
create PROCEDURE [dbo].[app_SurveyResults_GetAllExpanded]
 @TenID int = 0
,@PID int = null
,@SID int = null
AS
   Select * 
   from [SurveyResults]
   where 
			TenID = @TenID
		AND (PID = @PID or @PID is null)
		AND (SID = @SID or @SID is null)

GO

/****** Object:  StoredProcedure [dbo].[app_SurveyResults_GetAllStats]    Script Date: 12/05/2014 14:24:10 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO

CREATE PROCEDURE [dbo].[app_SurveyResults_GetAllStats]
 @TenID int = 0
,@SID int = null
,@SourceType varchar(250) = null
,@SourceID int = null
,@SchoolID int = null
AS

	select isnull(COUNT(*),0) as NumTotal
    from [SurveyResults] join Patron 
				on SurveyResults.PID = Patron.PID
    where 
			SurveyResults.TenID = @TenID
		AND (SID = @SID or @SID is null)
		AND (Source = @SourceType or @SourceType is null) 
		AND (SourceID =  @SourceID or @SourceID is null)
		AND (SchoolName = @SchoolID or @SchoolID is null)
		
	select isnull(COUNT(distinct SurveyResults.PID),0) as NumPatrons
    from [SurveyResults] join Patron 
				on SurveyResults.PID = Patron.PID
    where 
			SurveyResults.TenID = @TenID
		AND (SID = @SID or @SID is null)
		AND (Source = @SourceType or @SourceType is null) 
		AND (SourceID =  @SourceID or @SourceID is null)
		AND (SchoolName = @SchoolID or @SchoolID is null)
	
				
	Select 
			distinct  a.SID, a.QID, a.SQMLID, a.QType, q.QNumber --, q.QText
   
		,(
			case a.SQMLID
				when (select MIN(SQMLID) from SurveyAnswers b where b.QID = a.QID)
					then 1
				else 0
			end
		) ShowQText
		, (
				select COUNT(*) from  SurveyAnswers a2 where a.SID = a2.SID and a.QID = a2.QID and a.SQMLID = a2.SQMLID
		) as NumAnswers
   from SurveyAnswers a  
			join SurveyQuestion q
				on a.QID = q.QID
			join SurveyResults r 
				on r.SRID = a.SRID 
					AND (r.Source = @SourceType or @SourceType is null) 
					AND (r.SourceID =  @SourceID or @SourceID is null)
			join Patron p 
				on r.PID = p.PID 
   where (a.SID = @SID or @SID is null)
		AND (p.SchoolName = @SchoolID or @SchoolID is null)
   order by q.QNumber, a.SID, a.QID, a.SQMLID
GO

/****** Object:  StoredProcedure [dbo].[app_SurveyResults_GetByID]    Script Date: 12/05/2014 14:24:10 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO

--Create the Select Proc
CREATE PROCEDURE [dbo].[app_SurveyResults_GetByID]
@SRID int 
AS
   Select * from [SurveyResults] Where SRID = @SRID

GO

/****** Object:  StoredProcedure [dbo].[app_SurveyResults_GetBySurveyAndSource]    Script Date: 12/05/2014 14:24:10 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO


--Create the Select Proc
CREATE PROCEDURE [dbo].[app_SurveyResults_GetBySurveyAndSource]
 @PID int 
,@SID int
,@SrcType varchar(150)
,@SrcID int
AS
   Select top 1 * 
   from [SurveyResults] 
   Where PID = @PID AND SID = @SID and Source = @SrcType and SourceID = @SrcID
   order by StartDate desc
   
   

GO

/****** Object:  StoredProcedure [dbo].[app_SurveyResults_GetExport]    Script Date: 12/05/2014 14:24:10 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO

CREATE PROCEDURE [dbo].[app_SurveyResults_GetExport]
 @SID int = null
,@SourceType varchar(250) = null
,@SourceID int = null
,@SchoolID int = null
AS
-- declare @SID int 
-- declare @SourceType varchar(250)
-- declare @SourceID int 
-- select @SID = 1,@SourceType= null,@SourceID = null

		
create table #Results (SRID int, Username varchar(50) null, FirstName varchar(50) null, LastName varchar(50) null, SchoolName varchar(50) null, Source varchar(250) null, SourceName varchar(250) null)


insert into #Results
select 
	r.SRID, p.Username, p.FirstName, p.LastName, isNull(c.Code, ''), r.Source
	,case [Source]
			when 'Program Pre-Test'  then isnull((select AdminName from Programs where PID = SourceID), 'N/A')
			when 'Program Post-Test'  then isnull((select AdminName from Programs where PID = SourceID), 'N/A')
			when 'Game'  then isnull((select AdminName from Minigame where MGID = SourceID), 'N/A')
			when 'Reading List'  then isnull((select ListName from BookList where BLID = SourceID), 'N/A')
			when 'Event'  then isnull((select EventTitle from Event where EID = SourceID), 'N/A')
			else 'NA'
			end [SourceName] 
from SurveyResults r 
		join Patron p
			on r.PID = p.PID
		left outer join  Code c 
			on p.SchoolName = c.CID
where 
	r.SID = @SID 
		AND (r.Source = @SourceType or @SourceType is null) 
		AND (r.SourceID =  @SourceID or @SourceID is null)
		AND (p.SchoolName =  @SchoolID or @SchoolID is null)


select distinct a.QID, a.SQMLID, a.QType,q.QNumber
into #T1
	from dbo.SurveyAnswers a
					join SurveyResults r 
			on r.SRID = a.SRID 
				AND (r.Source = @SourceType or @SourceType is null) 
				AND (r.SourceID =  @SourceID or @SourceID is null)
					join SurveyQuestion q
			on a.QID = q.QID
	where r.SID = @SID
order by q.QNumber


declare @NumColumnSets int 
declare @RunningCounter int 
select  @NumColumnSets = COUNT(*) from #T1
select @RunningCounter = 1


Declare @SQL1 varchar(8000)
select @SQL1 = 'alter table #Results Add '  
while @RunningCounter <= @NumColumnSets
begin
select @SQL1 = @SQL1 + ' AnswerChoices' + Convert(varchar, @RunningCounter) + ' text null '
+ ', FreeFormOrOther' + Convert(varchar, @RunningCounter) + ' text null, '
select @RunningCounter = @RunningCounter + 1
end
select @SQL1 = substring(@SQL1, 1, len(@SQL1)-1)
print @SQL1
exec (@SQL1)

DECLARE @ChoiceAnswerText varchar(8000)
DECLARE @SRID int
DECLARE @SAID int


DECLARE db_cursor CURSOR FOR
SELECT SRID
from #Results

OPEN db_cursor
FETCH NEXT FROM db_cursor INTO @SRID

WHILE @@FETCH_STATUS = 0
BEGIN

DECLARE db_cursor2 CURSOR FOR
SELECT SAID
from dbo.SurveyAnswers a
join SurveyQuestion q
on a.QID = q.QID
where a.SRID = @SRID
order by q.QNumber

select @RunningCounter = 1
OPEN db_cursor2
FETCH NEXT FROM db_cursor2 INTO @SAID

WHILE @@FETCH_STATUS = 0
BEGIN
select @SQL1 = 'Update #Results Set AnswerChoices' + CONVERT(varchar, @RunningCounter) + ' = (select replace(convert(varchar(8000), ChoiceAnswerText), ''~|~'', '' AND '') from dbo.SurveyAnswers where SAID = ' + CONVERT(varchar, @SAID)+ '), ' +
'FreeFormOrOther' + CONVERT(varchar, @RunningCounter) +
' = (select replace(convert(varchar(8000), ClarificationText), ''~|~'', '' AND '') + ' +
'   convert(varchar(8000), FreeFormAnswer) from dbo.SurveyAnswers where SAID = ' + CONVERT(varchar, @SAID)+ ') where SRID = ' + CONVERT(varchar, @SRID)
print @SQL1
exec (@SQL1)

select @RunningCounter = @RunningCounter + 1

FETCH NEXT FROM db_cursor2 INTO @SAID
END

CLOSE db_cursor2
DEALLOCATE db_cursor2

FETCH NEXT FROM db_cursor INTO @SRID
END

CLOSE db_cursor
DEALLOCATE db_cursor

alter table #Results drop column SRID

select * from #Results

drop table #Results
drop table #T1

GO

/****** Object:  StoredProcedure [dbo].[app_SurveyResults_GetQClarifications]    Script Date: 12/05/2014 14:24:10 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO

CREATE  PROCEDURE [dbo].[app_SurveyResults_GetQClarifications]
@SID int = null
,@QID int = null
,@SQMLID int = 0
,@Answer varchar(8000)
,@SourceType varchar(250) = null
,@SourceID int = null
AS
select ClarificationText
from SurveyAnswers a join SurveyResults r
on r.SRID = a.SRID
AND (r.Source = @SourceType or @SourceType is null)
AND (r.SourceID =  @SourceID or @SourceID is null)
where a.SID = @SID and QID=@QID and SQMLID = @SQMLID AND convert(varchar(8000), ChoiceAnswerText) = @Answer

GO

/****** Object:  StoredProcedure [dbo].[app_SurveyResults_GetQComments]    Script Date: 12/05/2014 14:24:10 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO


CREATE PROCEDURE [dbo].[app_SurveyResults_GetQComments]
@SID int = null
,@QID int = null
,@SQMLID int = null
AS
select 1


GO

/****** Object:  StoredProcedure [dbo].[app_SurveyResults_GetQFreeForm]    Script Date: 12/05/2014 14:24:10 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO


CREATE  PROCEDURE [dbo].[app_SurveyResults_GetQFreeForm]
@SID int = null
,@QID int = null
,@SQMLID int = 0
,@SourceType varchar(250) = null
,@SourceID int = null
AS
select FreeFormAnswer
from SurveyAnswers a join SurveyResults r
on r.SRID = a.SRID
AND (r.Source = @SourceType or @SourceType is null)
AND (r.SourceID =  @SourceID or @SourceID is null)
where a.SID = @SID and QID=@QID and SQMLID = @SQMLID AND convert(varchar(8000), FreeFormAnswer) <> ''

GO

/****** Object:  StoredProcedure [dbo].[app_SurveyResults_GetQStats]    Script Date: 12/05/2014 14:24:10 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO


CREATE PROCEDURE [dbo].[app_SurveyResults_GetQStats]
@SID int = null
,@QID int = null
,@SQMLID int = 0
AS

select CONVERT(varchar(8000), ChoiceAnswerText) as  ChoiceAnswerText, COUNT(*) as Count
from SurveyAnswers a
where SID = @SID and QID=@QID and SQMLID = @SQMLID
GROUP by CONVERT(varchar(8000), ChoiceAnswerText)

GO

/****** Object:  StoredProcedure [dbo].[app_SurveyResults_GetQStatsMedium]    Script Date: 12/05/2014 14:24:10 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO


CREATE PROCEDURE [dbo].[app_SurveyResults_GetQStatsMedium]
@SID int = null
,@QID int = null
,@SQMLID int = 0
,@SourceType varchar(250) = null
,@SourceID int = null
AS
select
REPLACE(CONVERT(varchar(8000), a.ChoiceAnswerText),'~|~', ' AND ') as  ChoiceText
, CONVERT(varchar(8000), a.ChoiceAnswerText) AS ChoiceTextORIGINAL
, COUNT(*) as Count
from SurveyAnswers a join SurveyResults r
on r.SRID = a.SRID
AND (r.Source = @SourceType or @SourceType is null)
AND (r.SourceID =  @SourceID or @SourceID is null)
where a.SID = @SID and QID=@QID and SQMLID = @SQMLID
GROUP by CONVERT(varchar(8000), ChoiceAnswerText)

GO

/****** Object:  StoredProcedure [dbo].[app_SurveyResults_GetQStatsSimple]    Script Date: 12/05/2014 14:24:10 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO

CREATE PROCEDURE [dbo].[app_SurveyResults_GetQStatsSimple]
@SID int = null
,@QID int = null
,@SQMLID int = 0
,@SourceType varchar(250) = null
,@SourceID int = null
AS

DECLARE @ChoiceAnswerText varchar(8000)
DECLARE db_cursor CURSOR FOR
SELECT a.ChoiceAnswerText
from SurveyAnswers a join SurveyResults r
on r.SRID = a.SRID
AND (r.Source = @SourceType or @SourceType is null)
AND (r.SourceID =  @SourceID or @SourceID is null)
where a.SID = @SID and QID=@QID and SQMLID = @SQMLID

OPEN db_cursor
FETCH NEXT FROM db_cursor INTO @ChoiceAnswerText

CREATE TABLE #Stats (Value varchar(256))
WHILE @@FETCH_STATUS = 0
BEGIN
insert into  #Stats select Value  from dbo.fnSplitString(REPLACE(@ChoiceAnswerText,'~|~','|'),'|')

FETCH NEXT FROM db_cursor INTO @ChoiceAnswerText
END

CLOSE db_cursor
DEALLOCATE db_cursor

SELECT Value, COUNT(*) as Count
into #Stats2
from #Stats
Group by Value
DROP TABLE #Stats

select c.ChoiceText, ISNULL(d.Count,0) as Count
from SQChoices c left outer join
#Stats2 d
on c.ChoiceText = d.Value
where QID = @QID
order by c.ChoiceOrder


GO

/****** Object:  StoredProcedure [dbo].[app_SurveyResults_GetSources]    Script Date: 12/05/2014 14:24:10 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO


create PROCEDURE [dbo].[app_SurveyResults_GetSources]
@SID int = null
AS

select distinct [Source], [SourceID]
,
case [Source]
when 'Program Pre-Test'  then isnull((select AdminName from Programs where PID = SourceID), 'N/A')
when 'Program Post-Test'  then isnull((select AdminName from Programs where PID = SourceID), 'N/A')
when 'Game'  then isnull((select AdminName from Minigame where MGID = SourceID), 'N/A')
when 'Reading List'  then isnull((select ListName from BookList where BLID = SourceID), 'N/A')
when 'Event'  then isnull((select EventTitle from Event where EID = SourceID), 'N/A')
else 'NA'
end [SourceName]

from [SurveyResults]
where (SID = @SID or @SID is null)




GO

/****** Object:  StoredProcedure [dbo].[app_SurveyResults_Insert]    Script Date: 12/05/2014 14:24:10 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO

--Create the Insert Proc
CREATE PROCEDURE [dbo].[app_SurveyResults_Insert] (
@TenID int
,@PID int
,@SID int
,@StartDate datetime
,@EndDate datetime
,@IsComplete bit
,@IsScorable bit
,@LastAnswered int
,@Score int
,@ScorePct decimal
,@Source varchar (50)
,@SourceID int
,@FldInt1 int
,@FldInt2 int
,@FldInt3 int
,@FldBit1 bit
,@FldBit2 bit
,@FldBit3 bit
,@FldText1 text
,@FldText2 text
,@FldText3 text
,@SRID int output
) AS
Begin
Insert into SurveyResults
(TenID
,PID
,SID
,StartDate
,EndDate
,IsComplete
,IsScorable
,LastAnswered
,Score
,ScorePct
,Source
,SourceID
,FldInt1
,FldInt2
,FldInt3
,FldBit1
,FldBit2
,FldBit3
,FldText1
,FldText2
,FldText3
)
VALUES
(@TenID
,@PID
,@SID
,@StartDate
,@EndDate
,@IsComplete
,@IsScorable
,@LastAnswered
,@Score
,@ScorePct
,@Source
,@SourceID
,@FldInt1
,@FldInt2
,@FldInt3
,@FldBit1
,@FldBit2
,@FldBit3
,@FldText1
,@FldText2
,@FldText3
)
Select @SRID = SCOPE_IDENTITY()
END

GO

/****** Object:  StoredProcedure [dbo].[app_SurveyResults_Update]    Script Date: 12/05/2014 14:24:10 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO

--Create the Update Proc
CREATE PROCEDURE [dbo].[app_SurveyResults_Update] (
@SRID int
,@TenID int
,@PID int
,@SID int
,@StartDate datetime
,@EndDate datetime
,@IsComplete bit
,@IsScorable bit
,@LastAnswered int
,@Score int
,@ScorePct decimal
,@Source varchar (50)
,@SourceID int
,@FldInt1 int
,@FldInt2 int
,@FldInt3 int
,@FldBit1 bit
,@FldBit2 bit
,@FldBit3 bit
,@FldText1 text
,@FldText2 text
,@FldText3 text

) AS
Update SurveyResults
Set
TenID =  @TenID
,PID =  @PID
,SID =  @SID
,StartDate =  @StartDate
,EndDate =  @EndDate
,IsComplete =  @IsComplete
,IsScorable =  @IsScorable
,LastAnswered =  @LastAnswered
,Score =  @Score
,ScorePct =  @ScorePct
,Source =  @Source
,SourceID =  @SourceID
,FldInt1 =  @FldInt1
,FldInt2 =  @FldInt2
,FldInt3 =  @FldInt3
,FldBit1 =  @FldBit1
,FldBit2 =  @FldBit2
,FldBit3 =  @FldBit3
,FldText1 =  @FldText1
,FldText2 =  @FldText2
,FldText3 =  @FldText3

Where SRID = @SRID

GO

/****** Object:  StoredProcedure [dbo].[app_Tenant_Delete]    Script Date: 12/05/2014 14:24:10 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO

--Create the Delete Proc
CREATE PROCEDURE [dbo].[app_Tenant_Delete]
@TenID int
AS
Delete from [Tenant] Where TenID = @TenID

GO

/****** Object:  StoredProcedure [dbo].[app_Tenant_GetAll]    Script Date: 12/05/2014 14:24:10 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO

--Create the Select Proc
CREATE PROCEDURE [dbo].[app_Tenant_GetAll]
AS
Select * from [Tenant] order by LandingName

GO

/****** Object:  StoredProcedure [dbo].[app_Tenant_GetAllActive]    Script Date: 12/05/2014 14:24:10 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO

--Create the Select Proc
CREATE PROCEDURE [dbo].[app_Tenant_GetAllActive]
AS
Select * from [Tenant] where isActiveFlag = 1 and isMasterFlag = 0 order by LandingName



GO

/****** Object:  StoredProcedure [dbo].[app_Tenant_GetByDomainName]    Script Date: 12/05/2014 14:24:10 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO


CREATE PROCEDURE [dbo].[app_Tenant_GetByDomainName]
@Domain		varchar(128)
AS
SET NOCOUNT ON
SET TRANSACTION ISOLATION LEVEL READ UNCOMMITTED
Declare @TenID int
Select @TenID = -1
if Exists (select * from Tenant where DomainName = @Domain)
Select @TenID = TenID from Tenant where DomainName = @Domain

return @TenID

GO

/****** Object:  StoredProcedure [dbo].[app_Tenant_GetByID]    Script Date: 12/05/2014 14:24:10 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO

--Create the Select Proc
CREATE PROCEDURE [dbo].[app_Tenant_GetByID]
@TenID int
AS
Select * from [Tenant] Where TenID = @TenID

GO

/****** Object:  StoredProcedure [dbo].[app_Tenant_GetByProgramID]    Script Date: 12/05/2014 14:24:10 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO



CREATE PROCEDURE [dbo].[app_Tenant_GetByProgramID]
@PID		int
AS
SET NOCOUNT ON
SET TRANSACTION ISOLATION LEVEL READ UNCOMMITTED
Declare @TenID int
Select @TenID = -1
if Exists (select * from Programs where PID = @PID)
Select @TenID = TenID from Programs where PID = @PID

return @TenID

GO

/****** Object:  StoredProcedure [dbo].[app_Tenant_GetMasterID]    Script Date: 12/05/2014 14:24:10 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO

CREATE PROCEDURE [dbo].[app_Tenant_GetMasterID]
AS
SET NOCOUNT ON
SET TRANSACTION ISOLATION LEVEL READ UNCOMMITTED
Declare @TenID int
Select @TenID = -1
if Exists (select top 1 * from Tenant where isMasterFlag = 1)
Select top 1 @TenID = TenID from Tenant where isMasterFlag = 1
else
Select top 1 @TenID = TenID from Tenant where isActiveFlag = 1 order by TenID
select @TenID
return @TenID

GO

/****** Object:  StoredProcedure [dbo].[app_Tenant_Insert]    Script Date: 12/05/2014 14:24:10 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO

--Create the Insert Proc
CREATE PROCEDURE [dbo].[app_Tenant_Insert] (
@Name varchar (150)
,@LandingName varchar (50)
,@AdminName varchar (50)
,@isActiveFlag bit
,@isMasterFlag bit
,@Description text
,@DomainName varchar (50)
,@showNotifications bit
,@showOffers bit
,@showBadges bit
,@showEvents bit
,@NotificationsMenuText varchar (50)
,@OffersMenuText varchar (50)
,@BadgesMenuText varchar (50)
,@EventsMenuText varchar (50)
,@LastModDate datetime
,@LastModUser varchar (50)
,@AddedDate datetime
,@AddedUser varchar (50)
,@FldInt1 int
,@FldInt2 int
,@FldInt3 int
,@FldBit1 bit
,@FldBit2 bit
,@FldBit3 bit
,@FldText1 text
,@FldText2 text
,@FldText3 text
,@TenID int output
) AS
Begin
Insert into Tenant
(Name
,LandingName
,AdminName
,isActiveFlag
,isMasterFlag
,Description
,DomainName
,showNotifications
,showOffers
,showBadges
,showEvents
,NotificationsMenuText
,OffersMenuText
,BadgesMenuText
,EventsMenuText
,LastModDate
,LastModUser
,AddedDate
,AddedUser
,FldInt1
,FldInt2
,FldInt3
,FldBit1
,FldBit2
,FldBit3
,FldText1
,FldText2
,FldText3
)
VALUES
(@Name
,@LandingName
,@AdminName
,@isActiveFlag
,@isMasterFlag
,@Description
,@DomainName
,@showNotifications
,@showOffers
,@showBadges
,@showEvents
,@NotificationsMenuText
,@OffersMenuText
,@BadgesMenuText
,@EventsMenuText
,@LastModDate
,@LastModUser
,@AddedDate
,@AddedUser
,@FldInt1
,@FldInt2
,@FldInt3
,@FldBit1
,@FldBit2
,@FldBit3
,@FldText1
,@FldText2
,@FldText3
)
Select @TenID = SCOPE_IDENTITY()
END

GO

/****** Object:  StoredProcedure [dbo].[app_Tenant_Update]    Script Date: 12/05/2014 14:24:10 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO

--Create the Update Proc
CREATE PROCEDURE [dbo].[app_Tenant_Update] (
@TenID int
,@Name varchar (150)
,@LandingName varchar (50)
,@AdminName varchar (50)
,@isActiveFlag bit
,@isMasterFlag bit
,@Description text
,@DomainName varchar (50)
,@showNotifications bit
,@showOffers bit
,@showBadges bit
,@showEvents bit
,@NotificationsMenuText varchar (50)
,@OffersMenuText varchar (50)
,@BadgesMenuText varchar (50)
,@EventsMenuText varchar (50)
,@LastModDate datetime
,@LastModUser varchar (50)
,@AddedDate datetime
,@AddedUser varchar (50)
,@FldInt1 int
,@FldInt2 int
,@FldInt3 int
,@FldBit1 bit
,@FldBit2 bit
,@FldBit3 bit
,@FldText1 text
,@FldText2 text
,@FldText3 text

) AS
Update Tenant
Set
Name =  @Name
,LandingName =  @LandingName
,AdminName =  @AdminName
,isActiveFlag =  @isActiveFlag
,isMasterFlag =  @isMasterFlag
,Description =  @Description
,DomainName =  @DomainName
,showNotifications =  @showNotifications
,showOffers =  @showOffers
,showBadges =  @showBadges
,showEvents =  @showEvents
,NotificationsMenuText =  @NotificationsMenuText
,OffersMenuText =  @OffersMenuText
,BadgesMenuText =  @BadgesMenuText
,EventsMenuText =  @EventsMenuText
,LastModDate =  @LastModDate
,LastModUser =  @LastModUser
,AddedDate =  @AddedDate
,AddedUser =  @AddedUser
,FldInt1 =  @FldInt1
,FldInt2 =  @FldInt2
,FldInt3 =  @FldInt3
,FldBit1 =  @FldBit1
,FldBit2 =  @FldBit2
,FldBit3 =  @FldBit3
,FldText1 =  @FldText1
,FldText2 =  @FldText2
,FldText3 =  @FldText3

Where TenID = @TenID

GO

/****** Object:  StoredProcedure [dbo].[app_TenantInitData_GetPKbyOriginalPK]    Script Date: 12/05/2014 14:24:10 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO

CREATE PROCEDURE [dbo].[app_TenantInitData_GetPKbyOriginalPK] (
@IntitType varchar (50)
,@DestTID int
,@SrcPK int
) AS
Begin
select DstPK from TenantInitData where
IntitType = @IntitType AND DestTID = @DestTID and SrcPK = @SrcPK

End

GO

/****** Object:  StoredProcedure [dbo].[app_TenantInitData_Insert]    Script Date: 12/05/2014 14:24:10 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO

CREATE PROCEDURE [dbo].[app_TenantInitData_Insert] (
@IntitType varchar (50)
,@DestTID int
,@SrcPK int
,@DateCreated datetime
,@DstPK int
,@InitID int output
) AS
Begin
Insert into TenantInitData
(IntitType
,DestTID
,SrcPK
,DateCreated
,DstPK
)
VALUES
(@IntitType
,@DestTID
,@SrcPK
,@DateCreated
,@DstPK
)
Select @InitID = SCOPE_IDENTITY()
END
GO



GO

/****** Object:  StoredProcedure [dbo].[cbspSRPGroups_Delete]    Script Date: 12/05/2014 14:24:57 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[cbspSRPGroups_Delete]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[cbspSRPGroups_Delete]
GO

/****** Object:  StoredProcedure [dbo].[cbspSRPGroups_DeleteAll]    Script Date: 12/05/2014 14:24:57 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[cbspSRPGroups_DeleteAll]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[cbspSRPGroups_DeleteAll]
GO

/****** Object:  StoredProcedure [dbo].[cbspSRPGroups_DeleteByPrimaryKey]    Script Date: 12/05/2014 14:24:57 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[cbspSRPGroups_DeleteByPrimaryKey]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[cbspSRPGroups_DeleteByPrimaryKey]
GO

/****** Object:  StoredProcedure [dbo].[cbspSRPGroups_Get]    Script Date: 12/05/2014 14:24:57 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[cbspSRPGroups_Get]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[cbspSRPGroups_Get]
GO

/****** Object:  StoredProcedure [dbo].[cbspSRPGroups_GetAll]    Script Date: 12/05/2014 14:24:57 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[cbspSRPGroups_GetAll]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[cbspSRPGroups_GetAll]
GO

/****** Object:  StoredProcedure [dbo].[cbspSRPGroups_GetByPrimaryKey]    Script Date: 12/05/2014 14:24:57 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[cbspSRPGroups_GetByPrimaryKey]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[cbspSRPGroups_GetByPrimaryKey]
GO

/****** Object:  StoredProcedure [dbo].[cbspSRPGroups_Insert]    Script Date: 12/05/2014 14:24:57 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[cbspSRPGroups_Insert]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[cbspSRPGroups_Insert]
GO

/****** Object:  StoredProcedure [dbo].[cbspSRPGroups_Update]    Script Date: 12/05/2014 14:24:57 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[cbspSRPGroups_Update]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[cbspSRPGroups_Update]
GO

/****** Object:  StoredProcedure [dbo].[cbspSRPGroupsGroups_GetSpecialUserPermissionsNotGranted]    Script Date: 12/05/2014 14:24:57 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[cbspSRPGroupsGroups_GetSpecialUserPermissionsNotGranted]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[cbspSRPGroupsGroups_GetSpecialUserPermissionsNotGranted]
GO

/****** Object:  StoredProcedure [dbo].[cbspSRPPermissionsMaster_Delete]    Script Date: 12/05/2014 14:24:57 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[cbspSRPPermissionsMaster_Delete]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[cbspSRPPermissionsMaster_Delete]
GO

/****** Object:  StoredProcedure [dbo].[cbspSRPPermissionsMaster_DeleteByModule]    Script Date: 12/05/2014 14:24:57 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[cbspSRPPermissionsMaster_DeleteByModule]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[cbspSRPPermissionsMaster_DeleteByModule]
GO

/****** Object:  StoredProcedure [dbo].[cbspSRPPermissionsMaster_Get]    Script Date: 12/05/2014 14:24:57 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[cbspSRPPermissionsMaster_Get]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[cbspSRPPermissionsMaster_Get]
GO

/****** Object:  StoredProcedure [dbo].[cbspSRPPermissionsMaster_GetByModule]    Script Date: 12/05/2014 14:24:57 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[cbspSRPPermissionsMaster_GetByModule]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[cbspSRPPermissionsMaster_GetByModule]
GO

/****** Object:  StoredProcedure [dbo].[cbspSRPPermissionsMaster_GetByModuleName]    Script Date: 12/05/2014 14:24:57 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[cbspSRPPermissionsMaster_GetByModuleName]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[cbspSRPPermissionsMaster_GetByModuleName]
GO

/****** Object:  StoredProcedure [dbo].[cbspSRPPermissionsMaster_GetByName]    Script Date: 12/05/2014 14:24:57 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[cbspSRPPermissionsMaster_GetByName]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[cbspSRPPermissionsMaster_GetByName]
GO

/****** Object:  StoredProcedure [dbo].[cbspSRPPermissionsMaster_Insert]    Script Date: 12/05/2014 14:24:57 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[cbspSRPPermissionsMaster_Insert]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[cbspSRPPermissionsMaster_Insert]
GO

/****** Object:  StoredProcedure [dbo].[cbspSRPPermissionsMaster_Update]    Script Date: 12/05/2014 14:24:57 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[cbspSRPPermissionsMaster_Update]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[cbspSRPPermissionsMaster_Update]
GO

/****** Object:  StoredProcedure [dbo].[cbspSRPSettings_DeleteAll]    Script Date: 12/05/2014 14:24:57 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[cbspSRPSettings_DeleteAll]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[cbspSRPSettings_DeleteAll]
GO

/****** Object:  StoredProcedure [dbo].[cbspSRPSettings_DeleteByPrimaryKey]    Script Date: 12/05/2014 14:24:57 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[cbspSRPSettings_DeleteByPrimaryKey]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[cbspSRPSettings_DeleteByPrimaryKey]
GO

/****** Object:  StoredProcedure [dbo].[cbspSRPSettings_GetAll]    Script Date: 12/05/2014 14:24:57 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[cbspSRPSettings_GetAll]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[cbspSRPSettings_GetAll]
GO

/****** Object:  StoredProcedure [dbo].[cbspSRPSettings_GetByName]    Script Date: 12/05/2014 14:24:57 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[cbspSRPSettings_GetByName]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[cbspSRPSettings_GetByName]
GO

/****** Object:  StoredProcedure [dbo].[cbspSRPSettings_GetByPrimaryKey]    Script Date: 12/05/2014 14:24:57 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[cbspSRPSettings_GetByPrimaryKey]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[cbspSRPSettings_GetByPrimaryKey]
GO

/****** Object:  StoredProcedure [dbo].[cbspSRPSettings_Insert]    Script Date: 12/05/2014 14:24:57 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[cbspSRPSettings_Insert]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[cbspSRPSettings_Insert]
GO

/****** Object:  StoredProcedure [dbo].[cbspSRPSettings_Update]    Script Date: 12/05/2014 14:24:57 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[cbspSRPSettings_Update]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[cbspSRPSettings_Update]
GO

/****** Object:  StoredProcedure [dbo].[cbspSRPUser_Delete]    Script Date: 12/05/2014 14:24:57 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[cbspSRPUser_Delete]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[cbspSRPUser_Delete]
GO

/****** Object:  StoredProcedure [dbo].[cbspSRPUser_EmailExists]    Script Date: 12/05/2014 14:24:57 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[cbspSRPUser_EmailExists]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[cbspSRPUser_EmailExists]
GO

/****** Object:  StoredProcedure [dbo].[cbspSRPUser_Get]    Script Date: 12/05/2014 14:24:57 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[cbspSRPUser_Get]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[cbspSRPUser_Get]
GO

/****** Object:  StoredProcedure [dbo].[cbspSRPUser_GetActiveSessions]    Script Date: 12/05/2014 14:24:57 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[cbspSRPUser_GetActiveSessions]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[cbspSRPUser_GetActiveSessions]
GO

/****** Object:  StoredProcedure [dbo].[cbspSRPUser_GetAll]    Script Date: 12/05/2014 14:24:57 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[cbspSRPUser_GetAll]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[cbspSRPUser_GetAll]
GO

/****** Object:  StoredProcedure [dbo].[cbspSRPUser_GetAllPermissions]    Script Date: 12/05/2014 14:24:57 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[cbspSRPUser_GetAllPermissions]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[cbspSRPUser_GetAllPermissions]
GO

/****** Object:  StoredProcedure [dbo].[cbspSRPUser_GetAllPermissionsAUDIT]    Script Date: 12/05/2014 14:24:57 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[cbspSRPUser_GetAllPermissionsAUDIT]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[cbspSRPUser_GetAllPermissionsAUDIT]
GO

/****** Object:  StoredProcedure [dbo].[cbspSRPUser_GetByUsername]    Script Date: 12/05/2014 14:24:57 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[cbspSRPUser_GetByUsername]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[cbspSRPUser_GetByUsername]
GO

/****** Object:  StoredProcedure [dbo].[cbspSRPUser_GetGroups]    Script Date: 12/05/2014 14:24:57 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[cbspSRPUser_GetGroups]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[cbspSRPUser_GetGroups]
GO

/****** Object:  StoredProcedure [dbo].[cbspSRPUser_GetGroupsFlagged]    Script Date: 12/05/2014 14:24:57 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[cbspSRPUser_GetGroupsFlagged]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[cbspSRPUser_GetGroupsFlagged]
GO

/****** Object:  StoredProcedure [dbo].[cbspSRPUser_GetGroupsNonMembers]    Script Date: 12/05/2014 14:24:57 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[cbspSRPUser_GetGroupsNonMembers]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[cbspSRPUser_GetGroupsNonMembers]
GO

/****** Object:  StoredProcedure [dbo].[cbspSRPUser_GetLoginHistory]    Script Date: 12/05/2014 14:24:57 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[cbspSRPUser_GetLoginHistory]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[cbspSRPUser_GetLoginHistory]
GO

/****** Object:  StoredProcedure [dbo].[cbspSRPUser_GetLoginNow]    Script Date: 12/05/2014 14:24:57 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[cbspSRPUser_GetLoginNow]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[cbspSRPUser_GetLoginNow]
GO

/****** Object:  StoredProcedure [dbo].[cbspSRPUser_GetLoginNowTenID]    Script Date: 12/05/2014 14:24:57 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[cbspSRPUser_GetLoginNowTenID]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[cbspSRPUser_GetLoginNowTenID]
GO

/****** Object:  StoredProcedure [dbo].[cbspSRPUser_GetSpecialUserPermissions]    Script Date: 12/05/2014 14:24:57 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[cbspSRPUser_GetSpecialUserPermissions]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[cbspSRPUser_GetSpecialUserPermissions]
GO

/****** Object:  StoredProcedure [dbo].[cbspSRPUser_GetSpecialUserPermissionsFlagged]    Script Date: 12/05/2014 14:24:57 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[cbspSRPUser_GetSpecialUserPermissionsFlagged]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[cbspSRPUser_GetSpecialUserPermissionsFlagged]
GO

/****** Object:  StoredProcedure [dbo].[cbspSRPUser_GetSpecialUserPermissionsNotGranted]    Script Date: 12/05/2014 14:24:57 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[cbspSRPUser_GetSpecialUserPermissionsNotGranted]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[cbspSRPUser_GetSpecialUserPermissionsNotGranted]
GO

/****** Object:  StoredProcedure [dbo].[cbspSRPUser_Insert]    Script Date: 12/05/2014 14:24:57 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[cbspSRPUser_Insert]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[cbspSRPUser_Insert]
GO

/****** Object:  StoredProcedure [dbo].[cbspSRPUser_Login]    Script Date: 12/05/2014 14:24:57 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[cbspSRPUser_Login]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[cbspSRPUser_Login]
GO

/****** Object:  StoredProcedure [dbo].[cbspSRPUser_Logout]    Script Date: 12/05/2014 14:24:57 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[cbspSRPUser_Logout]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[cbspSRPUser_Logout]
GO

/****** Object:  StoredProcedure [dbo].[cbspSRPUser_LogoutAll]    Script Date: 12/05/2014 14:24:57 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[cbspSRPUser_LogoutAll]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[cbspSRPUser_LogoutAll]
GO

/****** Object:  StoredProcedure [dbo].[cbspSRPUser_ResetPassword]    Script Date: 12/05/2014 14:24:57 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[cbspSRPUser_ResetPassword]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[cbspSRPUser_ResetPassword]
GO

/****** Object:  StoredProcedure [dbo].[cbspSRPUser_Update]    Script Date: 12/05/2014 14:24:57 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[cbspSRPUser_Update]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[cbspSRPUser_Update]
GO

/****** Object:  StoredProcedure [dbo].[cbspSRPUser_UpdateGroups]    Script Date: 12/05/2014 14:24:57 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[cbspSRPUser_UpdateGroups]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[cbspSRPUser_UpdateGroups]
GO

/****** Object:  StoredProcedure [dbo].[cbspSRPUser_UpdateSpecialUserPermissions]    Script Date: 12/05/2014 14:24:57 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[cbspSRPUser_UpdateSpecialUserPermissions]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[cbspSRPUser_UpdateSpecialUserPermissions]
GO

/****** Object:  StoredProcedure [dbo].[cbspSRPUser_UsernameExists]    Script Date: 12/05/2014 14:24:57 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[cbspSRPUser_UsernameExists]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[cbspSRPUser_UsernameExists]
GO

/****** Object:  StoredProcedure [dbo].[cbspSRPUserGroups_GetPermissions]    Script Date: 12/05/2014 14:24:57 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[cbspSRPUserGroups_GetPermissions]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[cbspSRPUserGroups_GetPermissions]
GO

/****** Object:  StoredProcedure [dbo].[cbspSRPUserGroups_GetPermissionsFlagged]    Script Date: 12/05/2014 14:24:57 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[cbspSRPUserGroups_GetPermissionsFlagged]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[cbspSRPUserGroups_GetPermissionsFlagged]
GO

/****** Object:  StoredProcedure [dbo].[cbspSRPUserGroups_GetPermissionsNotGranted]    Script Date: 12/05/2014 14:24:57 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[cbspSRPUserGroups_GetPermissionsNotGranted]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[cbspSRPUserGroups_GetPermissionsNotGranted]
GO

/****** Object:  StoredProcedure [dbo].[cbspSRPUserGroups_GetUsers]    Script Date: 12/05/2014 14:24:57 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[cbspSRPUserGroups_GetUsers]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[cbspSRPUserGroups_GetUsers]
GO

/****** Object:  StoredProcedure [dbo].[cbspSRPUserGroups_GetUsersFlagged]    Script Date: 12/05/2014 14:24:57 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[cbspSRPUserGroups_GetUsersFlagged]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[cbspSRPUserGroups_GetUsersFlagged]
GO

/****** Object:  StoredProcedure [dbo].[cbspSRPUserGroups_GetUsersNonMembers]    Script Date: 12/05/2014 14:24:57 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[cbspSRPUserGroups_GetUsersNonMembers]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[cbspSRPUserGroups_GetUsersNonMembers]
GO

/****** Object:  StoredProcedure [dbo].[cbspSRPUserGroups_UpdatePermissions]    Script Date: 12/05/2014 14:24:57 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[cbspSRPUserGroups_UpdatePermissions]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[cbspSRPUserGroups_UpdatePermissions]
GO

/****** Object:  StoredProcedure [dbo].[cbspSRPUserGroups_UpdateUsers]    Script Date: 12/05/2014 14:24:57 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[cbspSRPUserGroups_UpdateUsers]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[cbspSRPUserGroups_UpdateUsers]
GO

/****** Object:  StoredProcedure [dbo].[GetPatronsPaged]    Script Date: 12/05/2014 14:24:57 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[GetPatronsPaged]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[GetPatronsPaged]
GO

/****** Object:  StoredProcedure [dbo].[GetTotalPatrons]    Script Date: 12/05/2014 14:24:57 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[GetTotalPatrons]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[GetTotalPatrons]
GO

/****** Object:  StoredProcedure [dbo].[rpt_DashboardStats]    Script Date: 12/05/2014 14:24:57 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[rpt_DashboardStats]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[rpt_DashboardStats]
GO

/****** Object:  StoredProcedure [dbo].[rpt_FinisherStats]    Script Date: 12/05/2014 14:24:57 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[rpt_FinisherStats]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[rpt_FinisherStats]
GO

/****** Object:  StoredProcedure [dbo].[rpt_GameLevelStats]    Script Date: 12/05/2014 14:24:57 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[rpt_GameLevelStats]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[rpt_GameLevelStats]
GO

/****** Object:  StoredProcedure [dbo].[rpt_MiniGameStats]    Script Date: 12/05/2014 14:24:57 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[rpt_MiniGameStats]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[rpt_MiniGameStats]
GO

/****** Object:  StoredProcedure [dbo].[rpt_PatronActivity]    Script Date: 12/05/2014 14:24:57 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[rpt_PatronActivity]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[rpt_PatronActivity]
GO

/****** Object:  StoredProcedure [dbo].[rpt_PatronFilter]    Script Date: 12/05/2014 14:24:57 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[rpt_PatronFilter]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[rpt_PatronFilter]
GO

/****** Object:  StoredProcedure [dbo].[rpt_PrizeRecipients]    Script Date: 12/05/2014 14:24:57 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[rpt_PrizeRecipients]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[rpt_PrizeRecipients]
GO

/****** Object:  StoredProcedure [dbo].[rpt_ReadingActivityReport]    Script Date: 12/05/2014 14:24:57 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[rpt_ReadingActivityReport]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[rpt_ReadingActivityReport]
GO

/****** Object:  StoredProcedure [dbo].[rpt_RegistrationStats]    Script Date: 12/05/2014 14:24:57 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[rpt_RegistrationStats]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[rpt_RegistrationStats]
GO

/****** Object:  StoredProcedure [dbo].[rpt_TenantReport]    Script Date: 12/05/2014 14:24:57 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[rpt_TenantReport]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[rpt_TenantReport]
GO

/****** Object:  StoredProcedure [dbo].[rpt_TenantSummaryReport]    Script Date: 12/05/2014 14:24:57 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[rpt_TenantSummaryReport]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[rpt_TenantSummaryReport]
GO

/****** Object:  StoredProcedure [dbo].[uspSplitIntegerList]    Script Date: 12/05/2014 14:24:57 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[uspSplitIntegerList]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[uspSplitIntegerList]
GO


GO

/****** Object:  StoredProcedure [dbo].[cbspSRPGroups_Delete]    Script Date: 12/05/2014 14:24:58 ******/

GO


GO

/****** Object:  StoredProcedure [dbo].[cbspSRPGroups_Delete]    Script Date: 03/10/2014 14:43:27 ******/








------------------------------------------------------------------------
CREATE PROCEDURE [dbo].[cbspSRPGroups_Delete]
@GID		int
, @ActionUsername varchar(50)
AS
SET NOCOUNT ON
SET TRANSACTION ISOLATION LEVEL READ UNCOMMITTED

DELETE FROM
dbo.SRPGroups
WHERE
GID = @GID






GO

/****** Object:  StoredProcedure [dbo].[cbspSRPGroups_DeleteAll]    Script Date: 12/05/2014 14:24:58 ******/

GO


GO

/****** Object:  StoredProcedure [dbo].[cbspSRPGroups_DeleteAll]    Script Date: 03/10/2014 14:43:27 ******/









-- Deletes all records from the 'SRPGroups' table.
CREATE PROCEDURE [dbo].[cbspSRPGroups_DeleteAll]
AS
DELETE FROM [dbo].[SRPGroups]






GO

/****** Object:  StoredProcedure [dbo].[cbspSRPGroups_DeleteByPrimaryKey]    Script Date: 12/05/2014 14:24:58 ******/

GO


GO

-- Deletes a record from the 'SRPGroups' table using the primary key value.
CREATE PROCEDURE [dbo].[cbspSRPGroups_DeleteByPrimaryKey]
@GID int
,@TenID int = null
AS
DELETE FROM [dbo].[SRPGroups] WHERE
[GID] = @GID AND TenID = @TenID






GO

/****** Object:  StoredProcedure [dbo].[cbspSRPGroups_Get]    Script Date: 12/05/2014 14:24:58 ******/

GO


GO

/****** Object:  StoredProcedure [dbo].[cbspSRPGroups_Get]    Script Date: 03/10/2014 14:43:27 ******/








CREATE PROCEDURE [dbo].[cbspSRPGroups_Get]
@GID		int
AS
SET NOCOUNT ON
SET TRANSACTION ISOLATION LEVEL READ UNCOMMITTED

SELECT *
FROM dbo.SRPGroups
WHERE
GID = @GID






GO

/****** Object:  StoredProcedure [dbo].[cbspSRPGroups_GetAll]    Script Date: 12/05/2014 14:24:58 ******/

GO


GO

-- Gets all records from the 'SRPGroups' table.
CREATE PROCEDURE [dbo].[cbspSRPGroups_GetAll]
@TenID int = null
AS
SELECT * FROM [dbo].[SRPGroups]


where (TenID = @TenID or @TenID is null)




GO

/****** Object:  StoredProcedure [dbo].[cbspSRPGroups_GetByPrimaryKey]    Script Date: 12/05/2014 14:24:58 ******/

GO


GO

/****** Object:  StoredProcedure [dbo].[cbspSRPGroups_GetByPrimaryKey]    Script Date: 03/10/2014 14:43:27 ******/









-- Gets a record from the 'SRPGroups' table using the primary key value.
CREATE PROCEDURE [dbo].[cbspSRPGroups_GetByPrimaryKey]
@GID int
AS
SELECT * FROM [dbo].[SRPGroups] WHERE
[GID] = @GID






GO

/****** Object:  StoredProcedure [dbo].[cbspSRPGroups_Insert]    Script Date: 12/05/2014 14:24:58 ******/

GO


GO

-- Inserts a new record into the 'SRPGroups' table.
CREATE PROCEDURE [dbo].[cbspSRPGroups_Insert]
@GroupName varchar(50),
@GroupDescription varchar(255),
@ActionUsername varchar(50)
,@TenID int = 0
,@FldInt1 int = 0
,@FldInt2 int = 0
,@FldInt3 int = 0
,@FldBit1 bit = 0
,@FldBit2 bit = 0
,@FldBit3 bit = 0
,@FldText1 text = ''
,@FldText2 text = ''
,@FldText3 text = ''
AS
INSERT INTO [dbo].[SRPGroups]
(
[GroupName],
[GroupDescription],
[LastModDate],
[LastModUser],
[AddedDate],
[AddedUser]
,TenID, FldInt1, FldInt2, FldInt3, FldBit1, FldBit2, FldBit3, FldText1, FldText2, FldText3
)
VALUES
(
@GroupName,
@GroupDescription,
GETDATE(),
@ActionUsername,
GETDATE(),
@ActionUsername
,@TenID, @FldInt1, @FldInt2, @FldInt3, @FldBit1, @FldBit2, @FldBit3, @FldText1, @FldText2, @FldText3
)
SELECT @@IDENTITY






GO

/****** Object:  StoredProcedure [dbo].[cbspSRPGroups_Update]    Script Date: 12/05/2014 14:24:58 ******/

GO


GO

-- Updates a record in the 'SRPGroups' table.
CREATE PROCEDURE [dbo].[cbspSRPGroups_Update]
-- The rest of writeable parameters
@GroupName varchar(50),
@GroupDescription varchar(255),
@ActionUsername varchar(50),
-- Primary key parameters
@GID int
,@TenID int = 0
,@FldInt1 int = 0
,@FldInt2 int = 0
,@FldInt3 int = 0
,@FldBit1 bit = 0
,@FldBit2 bit = 0
,@FldBit3 bit = 0
,@FldText1 text = ''
,@FldText2 text = ''
,@FldText3 text = ''
AS
UPDATE [dbo].[SRPGroups] SET
[GroupName] = @GroupName,
[GroupDescription] = @GroupDescription,
[LastModDate] = GETDATE(),
[LastModUser] = @ActionUsername
,TenID = @TenID
,FldInt1 = @FldInt1
,FldInt2 = @FldInt2
,FldInt3 = @FldInt3
,FldBit1 = @FldBit1
,FldBit2 = @FldBit2
,FldBit3 = @FldBit3
,FldText1 = @FldText1
,FldText2 = @FldText2
,FldText3 = @FldText3
WHERE
[GID] = @GID AND TenID = @TenID






GO

/****** Object:  StoredProcedure [dbo].[cbspSRPGroupsGroups_GetSpecialUserPermissionsNotGranted]    Script Date: 12/05/2014 14:24:58 ******/

GO


GO

/****** Object:  StoredProcedure [dbo].[cbspSRPGroupsGroups_GetSpecialUserPermissionsNotGranted]    Script Date: 03/10/2014 14:43:27 ******/








CREATE PROCEDURE [dbo].[cbspSRPGroupsGroups_GetSpecialUserPermissionsNotGranted]
@GID		int
AS
SET NOCOUNT ON
SET TRANSACTION ISOLATION LEVEL READ UNCOMMITTED

SELECT     @GID as GID, dbo.SRPPermissionsMaster.PermissionID,
dbo.SRPPermissionsMaster.PermissionName,
dbo.SRPPermissionsMaster.PermissionDesc,
null as AddedDate, 'N/A' as AddedUser
FROM dbo.SRPPermissionsMaster
WHERE
dbo.SRPPermissionsMaster.PermissionID NOT IN
(
SELECT     dbo.SRPPermissionsMaster.PermissionID
FROM         dbo.SRPPermissionsMaster INNER JOIN
dbo.SRPGroupPermissions ON dbo.SRPPermissionsMaster.PermissionID = dbo.SRPGroupPermissions.PermissionID INNER JOIN
dbo.SRPGroups ON dbo.SRPGroupPermissions.GID = dbo.SRPGroups.GID
WHERE
dbo.SRPGroupPermissions.GID = @GID
)






GO

/****** Object:  StoredProcedure [dbo].[cbspSRPPermissionsMaster_Delete]    Script Date: 12/05/2014 14:24:58 ******/

GO


GO

/****** Object:  StoredProcedure [dbo].[cbspSRPPermissionsMaster_Delete]    Script Date: 03/10/2014 14:43:27 ******/








------------------------------------------------------------------------
CREATE PROCEDURE [dbo].[cbspSRPPermissionsMaster_Delete]
@PermissionID		int
AS
SET NOCOUNT ON
SET TRANSACTION ISOLATION LEVEL READ UNCOMMITTED
DELETE FROM
dbo.SRPPermissionsMaster
WHERE
@PermissionID = PermissionID






GO

/****** Object:  StoredProcedure [dbo].[cbspSRPPermissionsMaster_DeleteByModule]    Script Date: 12/05/2014 14:24:58 ******/

GO


GO

/****** Object:  StoredProcedure [dbo].[cbspSRPPermissionsMaster_DeleteByModule]    Script Date: 03/10/2014 14:43:27 ******/








------------------------------------------------------------------------
CREATE PROCEDURE [dbo].[cbspSRPPermissionsMaster_DeleteByModule]
@ModId		int
AS
SET NOCOUNT ON
SET TRANSACTION ISOLATION LEVEL READ UNCOMMITTED
DELETE FROM
dbo.SRPPermissionsMaster
WHERE
ModId = @ModId






GO

/****** Object:  StoredProcedure [dbo].[cbspSRPPermissionsMaster_Get]    Script Date: 12/05/2014 14:24:58 ******/

GO


GO

/****** Object:  StoredProcedure [dbo].[cbspSRPPermissionsMaster_Get]    Script Date: 03/10/2014 14:43:27 ******/








------------------------------------------------------------------------
CREATE PROCEDURE [dbo].[cbspSRPPermissionsMaster_Get]
@PermissionID int = -1
AS
SET NOCOUNT ON
SET TRANSACTION ISOLATION LEVEL READ UNCOMMITTED
SELECT
*
FROM
dbo.SRPPermissionsMaster
WHERE
PermissionID = @PermissionID






GO

/****** Object:  StoredProcedure [dbo].[cbspSRPPermissionsMaster_GetByModule]    Script Date: 12/05/2014 14:24:58 ******/

GO


GO

/****** Object:  StoredProcedure [dbo].[cbspSRPPermissionsMaster_GetByModule]    Script Date: 03/10/2014 14:43:27 ******/








------------------------------------------------------------------------
CREATE PROCEDURE [dbo].[cbspSRPPermissionsMaster_GetByModule]
@ModID int = -1
AS
SET NOCOUNT ON
SET TRANSACTION ISOLATION LEVEL READ UNCOMMITTED
SELECT
*
FROM
dbo.SRPPermissionsMaster
WHERE
ModID = @ModID






GO

/****** Object:  StoredProcedure [dbo].[cbspSRPPermissionsMaster_GetByModuleName]    Script Date: 12/05/2014 14:24:58 ******/

GO


GO

/****** Object:  StoredProcedure [dbo].[cbspSRPPermissionsMaster_GetByModuleName]    Script Date: 03/10/2014 14:43:27 ******/








------------------------------------------------------------------------
CREATE PROCEDURE [dbo].[cbspSRPPermissionsMaster_GetByModuleName]
@ModuleName		varchar(50) = 'N/A'
AS
SET NOCOUNT ON
SET TRANSACTION ISOLATION LEVEL READ UNCOMMITTED
SELECT
dbo.SRPPermissionsMaster.*
FROM
dbo.SRPModule
INNER JOIN dbo.SRPPermissionsMaster ON
dbo.SRPModule.ModId = dbo.SRPPermissionsMaster.MODID
WHERE
dbo.SRPModule.ModName = @ModuleName






GO

/****** Object:  StoredProcedure [dbo].[cbspSRPPermissionsMaster_GetByName]    Script Date: 12/05/2014 14:24:58 ******/

GO


GO

/****** Object:  StoredProcedure [dbo].[cbspSRPPermissionsMaster_GetByName]    Script Date: 03/10/2014 14:43:27 ******/









------------------------------------------------------------------------
CREATE PROCEDURE [dbo].[cbspSRPPermissionsMaster_GetByName]
@PermissionName		varchar(50) = 'N/A'
AS
SET NOCOUNT ON
SET TRANSACTION ISOLATION LEVEL READ UNCOMMITTED
SELECT
*
FROM
dbo.SRPPermissionsMaster
WHERE
PermissionName = @PermissionName






GO

/****** Object:  StoredProcedure [dbo].[cbspSRPPermissionsMaster_Insert]    Script Date: 12/05/2014 14:24:58 ******/

GO


GO

/****** Object:  StoredProcedure [dbo].[cbspSRPPermissionsMaster_Insert]    Script Date: 03/10/2014 14:43:27 ******/








------------------------------------------------------------------------
CREATE PROCEDURE [dbo].[cbspSRPPermissionsMaster_Insert]
@PermissionID		int
, @PermissionName	varchar(50)
, @PermissionDesc	text
, @MODID				int
AS
SET NOCOUNT ON
SET TRANSACTION ISOLATION LEVEL READ UNCOMMITTED
INSERT INTO
dbo.SRPPermissionsMaster
(PermissionID, PermissionName, PermissionDesc, MODID)
VALUES
(@PermissionID, @PermissionName, @PermissionDesc, @MODID)






GO

/****** Object:  StoredProcedure [dbo].[cbspSRPPermissionsMaster_Update]    Script Date: 12/05/2014 14:24:58 ******/

GO


GO

/****** Object:  StoredProcedure [dbo].[cbspSRPPermissionsMaster_Update]    Script Date: 03/10/2014 14:43:27 ******/








------------------------------------------------------------------------
CREATE PROCEDURE [dbo].[cbspSRPPermissionsMaster_Update]
@PermissionID		int
, @PermissionName	varchar(50)
, @PermissionDesc	text
, @MODID				int
AS
SET NOCOUNT ON
SET TRANSACTION ISOLATION LEVEL READ UNCOMMITTED
UPDATE
dbo.SRPPermissionsMaster
SET
PermissionName = @PermissionName
, PermissionDesc = @PermissionDesc
, MODID = @MODID
WHERE
PermissionID = @PermissionID






GO

/****** Object:  StoredProcedure [dbo].[cbspSRPSettings_DeleteAll]    Script Date: 12/05/2014 14:24:58 ******/

GO


GO

/****** Object:  StoredProcedure [dbo].[cbspSRPSettings_DeleteAll]    Script Date: 03/10/2014 14:43:27 ******/








-- Deletes all records from the 'SRPSettings' table.
CREATE PROCEDURE [dbo].[cbspSRPSettings_DeleteAll]
AS
DELETE FROM [dbo].[SRPSettings]





GO

/****** Object:  StoredProcedure [dbo].[cbspSRPSettings_DeleteByPrimaryKey]    Script Date: 12/05/2014 14:24:58 ******/

GO


GO

/****** Object:  StoredProcedure [dbo].[cbspSRPSettings_DeleteByPrimaryKey]    Script Date: 03/10/2014 14:43:27 ******/








-- Deletes a record from the 'SRPSettings' table using the primary key value.
CREATE PROCEDURE [dbo].[cbspSRPSettings_DeleteByPrimaryKey]
@SID int
AS
DELETE FROM [dbo].[SRPSettings] WHERE
[SID] = @SID





GO

/****** Object:  StoredProcedure [dbo].[cbspSRPSettings_GetAll]    Script Date: 12/05/2014 14:24:58 ******/

GO


GO

/****** Object:  StoredProcedure [dbo].[cbspSRPSettings_GetAll]    Script Date: 03/10/2014 14:43:27 ******/








-- Gets all records from the 'SRPSettings' table.
CREATE PROCEDURE [dbo].[cbspSRPSettings_GetAll]
AS
SELECT * FROM [dbo].[SRPSettings]





GO

/****** Object:  StoredProcedure [dbo].[cbspSRPSettings_GetByName]    Script Date: 12/05/2014 14:24:58 ******/

GO


GO

/****** Object:  StoredProcedure [dbo].[cbspSRPSettings_GetByName]    Script Date: 03/10/2014 14:43:27 ******/








-- Gets a record from the 'SRPSettings' table using the primary key value.
CREATE PROCEDURE [dbo].[cbspSRPSettings_GetByName]
@Name varchar(50)
AS
SELECT * FROM [dbo].[SRPSettings] WHERE
[Name] = @Name





GO

/****** Object:  StoredProcedure [dbo].[cbspSRPSettings_GetByPrimaryKey]    Script Date: 12/05/2014 14:24:58 ******/

GO


GO

/****** Object:  StoredProcedure [dbo].[cbspSRPSettings_GetByPrimaryKey]    Script Date: 03/10/2014 14:43:27 ******/








-- Gets a record from the 'SRPSettings' table using the primary key value.
CREATE PROCEDURE [dbo].[cbspSRPSettings_GetByPrimaryKey]
@SID int
AS
SELECT * FROM [dbo].[SRPSettings] WHERE
[SID] = @SID





GO

/****** Object:  StoredProcedure [dbo].[cbspSRPSettings_Insert]    Script Date: 12/05/2014 14:24:58 ******/

GO


GO

/****** Object:  StoredProcedure [dbo].[cbspSRPSettings_Insert]    Script Date: 03/10/2014 14:43:27 ******/








-- Inserts a new record into the 'SRPSettings' table.
create  PROCEDURE [dbo].[cbspSRPSettings_Insert]
@Name varchar(50),
@Value text,
@StorageType varchar(50),
@EditType varchar(50),
@ModID int,
@Label varchar(50),
@Description varchar(500),
@ValueList varchar(5000),
@DefaultValue text
AS
INSERT INTO [dbo].[SRPSettings]
(
[Name],
[Value],
[StorageType],
[EditType],
[ModID],
[Label],
[Description],
[ValueList],
[DefaultValue]
)
VALUES
(
@Name,
@Value,
@StorageType,
@EditType,
@ModID,
@Label,
@Description,
@ValueList,
@DefaultValue
)
SELECT @@IDENTITY





GO

/****** Object:  StoredProcedure [dbo].[cbspSRPSettings_Update]    Script Date: 12/05/2014 14:24:58 ******/

GO


GO

/****** Object:  StoredProcedure [dbo].[cbspSRPSettings_Update]    Script Date: 03/10/2014 14:43:27 ******/








-- Updates a record in the 'SRPSettings' table.
create PROCEDURE [dbo].[cbspSRPSettings_Update]
-- The rest of writeable parameters
@Name varchar(50),
@Value text,
@StorageType varchar(50),
@EditType varchar(50),
@ModID int,
@Label varchar(50),
@Description varchar(500),
@ValueList varchar(5000),
@DefaultValue text,
-- Primary key parameters
@SID int
AS
UPDATE [dbo].[SRPSettings] SET
[Name] = @Name,
[Value] = @Value,
[StorageType] = @StorageType,
[EditType] = @EditType,
[ModID] = @ModID,
[Label] = @Label,
[Description] = @Description,
[ValueList] = @ValueList,
[DefaultValue] = @DefaultValue
WHERE
[SID] = @SID





GO

/****** Object:  StoredProcedure [dbo].[cbspSRPUser_Delete]    Script Date: 12/05/2014 14:24:58 ******/

GO


GO

/****** Object:  StoredProcedure [dbo].[cbspSRPUser_Delete]    Script Date: 03/10/2014 14:43:27 ******/








------------------------------------------------------------------------
CREATE PROCEDURE [dbo].[cbspSRPUser_Delete]
@UID		int
, @ActionUsername varchar(50)
AS
SET NOCOUNT ON
SET TRANSACTION ISOLATION LEVEL READ UNCOMMITTED

UPDATE
dbo.SRPUser
SET
isDeleted = 1
, DeletedDate = getdate()
, LastModDate = getdate()
, LastModUser = @ActionUsername
WHERE
UID = @UID






GO

/****** Object:  StoredProcedure [dbo].[cbspSRPUser_EmailExists]    Script Date: 12/05/2014 14:24:58 ******/

GO


GO

/****** Object:  StoredProcedure [dbo].[cbspSRPUser_EmailExists]    Script Date: 03/10/2014 14:43:27 ******/








------------------------------------------------------------------------
CREATE PROCEDURE [dbo].[cbspSRPUser_EmailExists]
@EmailAddress		varchar(128)
AS
SET NOCOUNT ON
SET TRANSACTION ISOLATION LEVEL READ UNCOMMITTED
declare @RowCount int
SELECT @RowCount =  Count(*)
FROM dbo.SRPUser
WHERE
LOWER(EmailAddress) = LOWER(@EmailAddress)
IF @RowCount > 0
return 1
ELSE
return 0






GO

/****** Object:  StoredProcedure [dbo].[cbspSRPUser_Get]    Script Date: 12/05/2014 14:24:58 ******/

GO


GO

/****** Object:  StoredProcedure [dbo].[cbspSRPUser_Get]    Script Date: 03/10/2014 14:43:27 ******/








/*
procedure [DAL].[Applicationuser_IO]
@Action		int			= 0
, @AuditpointID
as
SET NOCOUNT ON
SET TRANSACTION ISOLATION LEVEL READ UNCOMMITTED
declare @RowCount int
@@IDENTITY
@RowCount = @@ROWCOUNT
raiserror('UDE-CONCURRENCY',11,11) with SETERROR
set @intErrFlag = 11
*/

------------------------------------------------------------------------
CREATE PROCEDURE [dbo].[cbspSRPUser_Get]
@UID		int
AS
SET NOCOUNT ON
SET TRANSACTION ISOLATION LEVEL READ UNCOMMITTED

SELECT *
FROM dbo.SRPUser
WHERE
UID = @UID






GO

/****** Object:  StoredProcedure [dbo].[cbspSRPUser_GetActiveSessions]    Script Date: 12/05/2014 14:24:58 ******/

GO


GO

/****** Object:  StoredProcedure [dbo].[cbspSRPUser_GetActiveSessions]    Script Date: 03/10/2014 14:43:27 ******/








----------------------------------------------------------------
CREATE PROCEDURE [dbo].[cbspSRPUser_GetActiveSessions]
as
SET NOCOUNT ON
SET TRANSACTION ISOLATION LEVEL READ UNCOMMITTED

SELECT     dbo.SRPUserLoginHistory.UIDLH, dbo.SRPUserLoginHistory.UID, dbo.SRPUser.Username, dbo.SRPUser.FirstName, dbo.SRPUser.LastName,
dbo.SRPUser.EmailAddress, dbo.SRPUserLoginHistory.SessionsID, dbo.SRPUserLoginHistory.StartDateTime, dbo.SRPUserLoginHistory.IP,
dbo.SRPUserLoginHistory.MachineName, dbo.SRPUserLoginHistory.Browser, dbo.SRPUserLoginHistory.EndDateTime
FROM         dbo.SRPUser INNER JOIN
dbo.SRPUserLoginHistory ON dbo.SRPUser.UID = dbo.SRPUserLoginHistory.UID
where
dbo.SRPUserLoginHistory.EndDateTime is null









GO

/****** Object:  StoredProcedure [dbo].[cbspSRPUser_GetAll]    Script Date: 12/05/2014 14:24:58 ******/

GO


GO


------------------------------------------------------------------------
CREATE PROCEDURE [dbo].[cbspSRPUser_GetAll]
@TenID int = null
AS
SET NOCOUNT ON
SET TRANSACTION ISOLATION LEVEL READ UNCOMMITTED

SELECT
*
FROM
dbo.SRPUser
WHERE
IsDeleted = 0
AND (TenID = @TenID or @TenID is null)






GO

/****** Object:  StoredProcedure [dbo].[cbspSRPUser_GetAllPermissions]    Script Date: 12/05/2014 14:24:58 ******/

GO


GO

/****** Object:  StoredProcedure [dbo].[cbspSRPUser_GetAllPermissions]    Script Date: 03/10/2014 14:43:27 ******/








CREATE PROCEDURE [dbo].[cbspSRPUser_GetAllPermissions]
@UID		int
AS
SET NOCOUNT ON
SET TRANSACTION ISOLATION LEVEL READ UNCOMMITTED

SELECT      dbo.SRPPermissionsMaster.PermissionID,
dbo.SRPPermissionsMaster.PermissionName,
dbo.SRPPermissionsMaster.PermissionDesc
FROM         dbo.SRPPermissionsMaster INNER JOIN
dbo.SRPGroupPermissions ON
dbo.SRPPermissionsMaster.PermissionID = dbo.SRPGroupPermissions.PermissionID INNER JOIN
dbo.SRPGroups ON dbo.SRPGroupPermissions.GID = dbo.SRPGroups.GID
WHERE
dbo.SRPGroups.GID in (select GID from SRPUserGroups Where UID = @UID)
UNION
SELECT     dbo.SRPPermissionsMaster.PermissionID,
dbo.SRPPermissionsMaster.PermissionName,
dbo.SRPPermissionsMaster.PermissionDesc
FROM         dbo.SRPPermissionsMaster INNER JOIN
dbo.SRPUserPermissions ON
dbo.SRPPermissionsMaster.PermissionID = dbo.SRPUserPermissions.PermissionID INNER JOIN
dbo.SRPUser ON dbo.SRPUserPermissions.UID = dbo.SRPUser.UID
WHERE
dbo.SRPUser.UID = @UID





GO

/****** Object:  StoredProcedure [dbo].[cbspSRPUser_GetAllPermissionsAUDIT]    Script Date: 12/05/2014 14:24:58 ******/

GO


GO

/****** Object:  StoredProcedure [dbo].[cbspSRPUser_GetAllPermissionsAUDIT]    Script Date: 03/10/2014 14:43:27 ******/








CREATE PROCEDURE [dbo].[cbspSRPUser_GetAllPermissionsAUDIT]
@UID		int
AS
SET NOCOUNT ON
SET TRANSACTION ISOLATION LEVEL READ UNCOMMITTED


SELECT  dbo.SRPGroups.GID as ID,   'G' as Type,  dbo.SRPGroups.GroupName as Name, GroupDescription as Description,
dbo.SRPPermissionsMaster.PermissionID,
dbo.SRPPermissionsMaster.PermissionName,
dbo.SRPPermissionsMaster.PermissionDesc,
dbo.SRPGroupPermissions.AddedDate,
dbo.SRPGroupPermissions.AddedUser
FROM         dbo.SRPPermissionsMaster INNER JOIN
dbo.SRPGroupPermissions ON
dbo.SRPPermissionsMaster.PermissionID = dbo.SRPGroupPermissions.PermissionID INNER JOIN
dbo.SRPGroups ON dbo.SRPGroupPermissions.GID = dbo.SRPGroups.GID
WHERE
dbo.SRPGroups.GID in (select GID from SRPUserGroups Where UID = @UID)
union
SELECT     dbo.SRPUser.UID as ID, 'U' as type, Firstname + ' ' + LastName as Name,  '' as Description, dbo.SRPPermissionsMaster.PermissionID,
dbo.SRPPermissionsMaster.PermissionName,
dbo.SRPPermissionsMaster.PermissionDesc,
dbo.SRPUserPermissions.AddedDate,
dbo.SRPUserPermissions.AddedUser
FROM         dbo.SRPPermissionsMaster INNER JOIN
dbo.SRPUserPermissions ON
dbo.SRPPermissionsMaster.PermissionID = dbo.SRPUserPermissions.PermissionID INNER JOIN
dbo.SRPUser ON dbo.SRPUserPermissions.UID = dbo.SRPUser.UID
WHERE
dbo.SRPUser.UID = @UID
order by PermissionID







GO

/****** Object:  StoredProcedure [dbo].[cbspSRPUser_GetByUsername]    Script Date: 12/05/2014 14:24:58 ******/

GO


GO

/****** Object:  StoredProcedure [dbo].[cbspSRPUser_GetByUsername]    Script Date: 03/10/2014 14:43:27 ******/








------------------------------------------------------------------------
CREATE PROCEDURE [dbo].[cbspSRPUser_GetByUsername]
@Username		varchar(50)
AS
SET NOCOUNT ON
SET TRANSACTION ISOLATION LEVEL READ UNCOMMITTED

SELECT *
FROM dbo.SRPUser
WHERE
Username = @Username






GO

/****** Object:  StoredProcedure [dbo].[cbspSRPUser_GetGroups]    Script Date: 12/05/2014 14:24:58 ******/

GO


GO

/****** Object:  StoredProcedure [dbo].[cbspSRPUser_GetGroups]    Script Date: 03/10/2014 14:43:27 ******/








------------------------------------------------------------------------



------------------------------------------------------------------------
CREATE PROCEDURE [dbo].[cbspSRPUser_GetGroups]
@UID		int
AS
SET NOCOUNT ON
SET TRANSACTION ISOLATION LEVEL READ UNCOMMITTED

SELECT     dbo.SRPUser.UID, dbo.SRPGroups.GID,
dbo.SRPGroups.GroupName, dbo.SRPGroups.GroupDescription, dbo.SRPUserGroups.AddedDate, dbo.SRPUserGroups.AddedUser
FROM         dbo.SRPGroups INNER JOIN
dbo.SRPUserGroups ON dbo.SRPGroups.GID = dbo.SRPUserGroups.GID INNER JOIN
dbo.SRPUser ON dbo.SRPUserGroups.UID = dbo.SRPUser.UID
WHERE
dbo.SRPUser.UID = @UID






GO

/****** Object:  StoredProcedure [dbo].[cbspSRPUser_GetGroupsFlagged]    Script Date: 12/05/2014 14:24:58 ******/

GO


GO

------------------------------------------------------------------

CREATE PROCEDURE [dbo].[cbspSRPUser_GetGroupsFlagged]
@UID		int
AS
SET NOCOUNT ON
SET TRANSACTION ISOLATION LEVEL READ UNCOMMITTED

Declare @TenID int
Select @TenID = TenID from SRPUser where UID = @UID

SELECT     @UID, dbo.SRPGroups.GID,
dbo.SRPGroups.GroupName,
dbo.SRPGroups.GroupDescription,
dbo.SRPUserGroups.AddedDate,
dbo.SRPUserGroups.AddedUser,
case
when dbo.SRPUserGroups.AddedDate is null then 0
else 1 end  AS Checked


FROM         dbo.SRPGroups LEFT OUTER JOIN
dbo.SRPUserGroups ON
dbo.SRPGroups.GID = dbo.SRPUserGroups.GID
AND dbo.SRPUserGroups.UID = @UID
where UID = @UID or UID is null
AND SRPGroups.TenID = @TenID


GO

/****** Object:  StoredProcedure [dbo].[cbspSRPUser_GetGroupsNonMembers]    Script Date: 12/05/2014 14:24:58 ******/

GO


GO

/****** Object:  StoredProcedure [dbo].[cbspSRPUser_GetGroupsNonMembers]    Script Date: 03/10/2014 14:43:27 ******/








------------------------------------------------------------------------
CREATE PROCEDURE [dbo].[cbspSRPUser_GetGroupsNonMembers]
@UID		int
AS
SET NOCOUNT ON
SET TRANSACTION ISOLATION LEVEL READ UNCOMMITTED

SELECT     @UID as UID, dbo.SRPGroups.GID,
dbo.SRPGroups.GroupName, dbo.SRPGroups.GroupDescription, null as AddedDate, 'N/A' as AddedUser
FROM dbo.SRPGroups
WHERE
dbo.SRPGroups.GID NOT IN
(
SELECT     dbo.SRPGroups.GID
FROM         dbo.SRPGroups INNER JOIN
dbo.SRPUserGroups ON dbo.SRPGroups.GID = dbo.SRPUserGroups.GID INNER JOIN
dbo.SRPUser ON dbo.SRPUserGroups.UID = dbo.SRPUser.UID
WHERE
dbo.SRPUserGroups.UID = @UID
)






GO

/****** Object:  StoredProcedure [dbo].[cbspSRPUser_GetLoginHistory]    Script Date: 12/05/2014 14:24:58 ******/

GO


GO

/****** Object:  StoredProcedure [dbo].[cbspSRPUser_GetLoginHistory]    Script Date: 03/10/2014 14:43:27 ******/






---------------------------------------------------------------

CREATE PROCEDURE [dbo].[cbspSRPUser_GetLoginHistory]
@UID		int
AS
SET NOCOUNT ON
SET TRANSACTION ISOLATION LEVEL READ UNCOMMITTED

SELECT
h.*, u.Username, u.FirstName + ' ' + u.LastName as Name
FROM
dbo.SRPUserLoginHistory h, dbo.SRPUser u
where
u.UID = @UID
and
u.UID = h.UID
order by StartDateTime desc





GO

/****** Object:  StoredProcedure [dbo].[cbspSRPUser_GetLoginNow]    Script Date: 12/05/2014 14:24:58 ******/

GO


GO

CREATE PROCEDURE [dbo].[cbspSRPUser_GetLoginNow]
AS
SET NOCOUNT ON
SET TRANSACTION ISOLATION LEVEL READ UNCOMMITTED

SELECT
h.*, u.Username, u.FirstName + ' ' + u.LastName as Name, t.AdminName as Tenant
FROM
dbo.SRPUserLoginHistory h, dbo.SRPUser u join dbo.Tenant t on u.TenID = t.TenID
where
EndDateTime is null
and
u.UID = h.UID
order by StartDateTime desc


GO

/****** Object:  StoredProcedure [dbo].[cbspSRPUser_GetLoginNowTenID]    Script Date: 12/05/2014 14:24:58 ******/

GO


GO

create PROCEDURE [dbo].[cbspSRPUser_GetLoginNowTenID]
@TenID int
AS
SET NOCOUNT ON
SET TRANSACTION ISOLATION LEVEL READ UNCOMMITTED

SELECT
h.*, u.Username, u.FirstName + ' ' + u.LastName as Name, t.AdminName as Tenant
FROM
dbo.SRPUserLoginHistory h, dbo.SRPUser u join dbo.Tenant t on u.TenID = t.TenID
where
EndDateTime is null
and
u.UID = h.UID
and u.TenID = @TenID
order by StartDateTime desc


GO

/****** Object:  StoredProcedure [dbo].[cbspSRPUser_GetSpecialUserPermissions]    Script Date: 12/05/2014 14:24:58 ******/

GO


GO

/****** Object:  StoredProcedure [dbo].[cbspSRPUser_GetSpecialUserPermissions]    Script Date: 03/10/2014 14:43:27 ******/









------------------------------------------------------------------



------------------------------------------------------------------------
CREATE PROCEDURE [dbo].[cbspSRPUser_GetSpecialUserPermissions]
@UID		int
AS
SET NOCOUNT ON
SET TRANSACTION ISOLATION LEVEL READ UNCOMMITTED

SELECT     dbo.SRPUser.UID, dbo.SRPPermissionsMaster.PermissionID,
dbo.SRPPermissionsMaster.PermissionName,
dbo.SRPPermissionsMaster.PermissionDesc,
dbo.SRPUserPermissions.AddedDate,
dbo.SRPUserPermissions.AddedUser
FROM         dbo.SRPPermissionsMaster INNER JOIN
dbo.SRPUserPermissions ON
dbo.SRPPermissionsMaster.PermissionID = dbo.SRPUserPermissions.PermissionID INNER JOIN
dbo.SRPUser ON dbo.SRPUserPermissions.UID = dbo.SRPUser.UID
WHERE
dbo.SRPUser.UID = @UID






GO

/****** Object:  StoredProcedure [dbo].[cbspSRPUser_GetSpecialUserPermissionsFlagged]    Script Date: 12/05/2014 14:24:58 ******/

GO


GO

/****** Object:  StoredProcedure [dbo].[cbspSRPUser_GetSpecialUserPermissionsFlagged]    Script Date: 03/10/2014 14:43:27 ******/








------------------------------------------------------------------

CREATE PROCEDURE [dbo].[cbspSRPUser_GetSpecialUserPermissionsFlagged]
@UID		int
AS
SET NOCOUNT ON
SET TRANSACTION ISOLATION LEVEL READ UNCOMMITTED

SELECT     @UID as UID, dbo.SRPPermissionsMaster.PermissionID,
dbo.SRPPermissionsMaster.PermissionName,
dbo.SRPPermissionsMaster.PermissionDesc,
dbo.SRPUserPermissions.AddedDate,
dbo.SRPUserPermissions.AddedUser,
case
when dbo.SRPUserPermissions.AddedDate is null then 0
else 1 end  AS Checked


FROM         dbo.SRPPermissionsMaster LEFT OUTER JOIN
dbo.SRPUserPermissions ON dbo.SRPPermissionsMaster.PermissionID = dbo.SRPUserPermissions.PermissionID
AND dbo.SRPUserPermissions.UID = @UID
where UID = @UID or UID is null







GO

/****** Object:  StoredProcedure [dbo].[cbspSRPUser_GetSpecialUserPermissionsNotGranted]    Script Date: 12/05/2014 14:24:58 ******/

GO


GO

/****** Object:  StoredProcedure [dbo].[cbspSRPUser_GetSpecialUserPermissionsNotGranted]    Script Date: 03/10/2014 14:43:27 ******/









------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[cbspSRPUser_GetSpecialUserPermissionsNotGranted]
@UID		int
AS
SET NOCOUNT ON
SET TRANSACTION ISOLATION LEVEL READ UNCOMMITTED

SELECT     @UID as UID, dbo.SRPPermissionsMaster.PermissionID,
dbo.SRPPermissionsMaster.PermissionName,
dbo.SRPPermissionsMaster.PermissionDesc,
null as AddedDate, 'N/A' as AddedUser
FROM dbo.SRPPermissionsMaster
WHERE
dbo.SRPPermissionsMaster.PermissionID NOT IN
(
SELECT     dbo.SRPPermissionsMaster.PermissionID
FROM         dbo.SRPPermissionsMaster INNER JOIN
dbo.SRPUserPermissions ON dbo.SRPPermissionsMaster.PermissionID = dbo.SRPUserPermissions.PermissionID INNER JOIN
dbo.SRPUser ON dbo.SRPUserPermissions.UID = dbo.SRPUser.UID
WHERE
dbo.SRPUserPermissions.UID = @UID
)






GO

/****** Object:  StoredProcedure [dbo].[cbspSRPUser_Insert]    Script Date: 12/05/2014 14:24:58 ******/

GO


GO

------------------------------------------------------------------------
CREATE PROCEDURE [dbo].[cbspSRPUser_Insert]
@Username	varchar(50)
, @Password	varchar(50)
, @FirstName	varchar(50)
, @LastName	varchar(50)
, @EmailAddress	varchar(128)
, @Division	varchar(50) = null
, @Department	varchar(50) = null
, @Title		varchar(50) = null
, @IsActive	bit = 1
, @MustResetPassword	bit = 0
, @IsDeleted	bit = 0
, @ActionUsername varchar(50)
,@TenID int = 0
,@FldInt1 int = 0
,@FldInt2 int = 0
,@FldInt3 int = 0
,@FldBit1 bit = 0
,@FldBit2 bit = 0
,@FldBit3 bit = 0
,@FldText1 text = ''
,@FldText2 text = ''
,@FldText3 text = ''
AS
SET NOCOUNT ON
SET TRANSACTION ISOLATION LEVEL READ UNCOMMITTED

INSERT INTO
dbo.SRPUser
(
Username
, Password
, FirstName
, LastName
, EmailAddress
, Division
, Department
, Title
, IsActive
, MustResetPassword
, IsDeleted
, LastPasswordReset
, DeletedDate
, AddedDate
, AddedUser
, LastModDate
, LastModUser
,TenID, FldInt1, FldInt2, FldInt3, FldBit1, FldBit2, FldBit3, FldText1, FldText2, FldText3
)
VALUES
(
@Username
, @Password
, @FirstName
, @LastName
, @EmailAddress
, @Division
, @Department
, @Title
, @IsActive
, @MustResetPassword
, @IsDeleted
, null
, null
, getdate()
, @ActionUsername
, getdate()
, @ActionUsername
,@TenID, @FldInt1, @FldInt2, @FldInt3, @FldBit1, @FldBit2, @FldBit3, @FldText1, @FldText2, @FldText3
)
SELECT @@IDENTITY
return @@IDENTITY






GO

/****** Object:  StoredProcedure [dbo].[cbspSRPUser_Login]    Script Date: 12/05/2014 14:24:58 ******/

GO


GO

/****** Object:  StoredProcedure [dbo].[cbspSRPUser_Login]    Script Date: 03/10/2014 14:43:27 ******/








CREATE PROCEDURE [dbo].[cbspSRPUser_Login]
@UserName		varchar(50)
, @Password		varchar(50)
, @SessionId		varchar(128)= 'N/A'
, @IP				varchar(50) = 'N/A'
, @MachineName	varchar(50) = 'N/A'
, @Browser		varchar(50) = 'N/A'
AS
SET NOCOUNT ON
SET TRANSACTION ISOLATION LEVEL READ UNCOMMITTED

Declare   @Count int
, @IsActive bit
, @IsDeleted bit
, @MustResetPassword bit
, @UID int

SELECT
@Count = isnull(Count(*),0)
, @UID = UID
, @IsActive = IsActive
, @IsDeleted = IsDeleted
FROM
dbo.SRPUser
WHERE
Username = @UserName
AND Password = @Password
AND IsDeleted = 0
AND IsActive = 1
GROUP BY UID, IsActive, IsDeleted


IF @Count = 0 OR @Count is null
BEGIN
--SELECT
--		*
--FROM
--	dbo.SRPUser
--WHERE
--	 Username is null

select 0
END
ELSE
BEGIN

--SELECT
--	*
--FROM
--	dbo.SRPUser
--WHERE
--	UID = @UID

INSERT INTO
dbo.SRPUserLoginHistory(UID, SessionsID, StartDateTime, IP, MachineName, Browser, EndDateTime)
VALUES(@UID, @SessionId, getdate(), @IP, @MachineName, @Browser, null)

--exec cbspSRPUser_GetAllPermissions @UID

select 1
END


return 0










GO

/****** Object:  StoredProcedure [dbo].[cbspSRPUser_Logout]    Script Date: 12/05/2014 14:24:58 ******/

GO


GO

/****** Object:  StoredProcedure [dbo].[cbspSRPUser_Logout]    Script Date: 03/10/2014 14:43:27 ******/









create PROCEDURE [dbo].[cbspSRPUser_Logout]
@UID		int
AS
SET NOCOUNT ON
SET TRANSACTION ISOLATION LEVEL READ UNCOMMITTED
UPDATE dbo.SRPUserLoginHistory
SET EndDateTime = getdate()
WHERE UID = @UID  and EndDateTime is null







GO

/****** Object:  StoredProcedure [dbo].[cbspSRPUser_LogoutAll]    Script Date: 12/05/2014 14:24:58 ******/

GO


GO



/* ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ */

CREATE PROCEDURE [dbo].[cbspSRPUser_LogoutAll]
AS
SET NOCOUNT ON
SET TRANSACTION ISOLATION LEVEL READ UNCOMMITTED


/* ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ */
UPDATE dbo.SRPUserLoginHistory
SET EndDateTime = getdate()
WHERE EndDateTime is NULL

/* ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ */

GO

/****** Object:  StoredProcedure [dbo].[cbspSRPUser_ResetPassword]    Script Date: 12/05/2014 14:24:58 ******/

GO


GO

/****** Object:  StoredProcedure [dbo].[cbspSRPUser_ResetPassword]    Script Date: 03/10/2014 14:43:27 ******/








CREATE PROCEDURE [dbo].[cbspSRPUser_ResetPassword]
@UID			int
, @Password		varchar(50)
, @ActionUsername varchar(50)	= 'N/A'
AS
SET NOCOUNT ON
SET TRANSACTION ISOLATION LEVEL READ UNCOMMITTED
UPDATE
dbo.SRPUser
SET
Password				= @Password
, LastPasswordReset		= getdate()
, LastModDate			= getdate()
, LastModUser			= @ActionUsername
WHERE
UID = @UID

SELECT
*
FROM
dbo.SRPUser
WHERE
UID = @UID

exec cbspSRPUser_GetAllPermissions @UID







GO

/****** Object:  StoredProcedure [dbo].[cbspSRPUser_Update]    Script Date: 12/05/2014 14:24:58 ******/

GO


GO


------------------------------------------------------------------------
CREATE PROCEDURE [dbo].[cbspSRPUser_Update]
@UID		int
, @Username	varchar(50)
, @Password	varchar(50)
, @FirstName	varchar(50)
, @LastName	varchar(50)
, @EmailAddress	varchar(128)
, @Division	varchar(50) = null
, @Department	varchar(50) = null
, @Title		varchar(50) = null
, @IsActive	bit = 1
, @MustResetPassword	bit = 0
, @IsDeleted	bit = 0
, @LastPasswordReset datetime = null
, @ActionUsername varchar(50)
,@TenID int = 0
,@FldInt1 int = 0
,@FldInt2 int = 0
,@FldInt3 int = 0
,@FldBit1 bit = 0
,@FldBit2 bit = 0
,@FldBit3 bit = 0
,@FldText1 text = ''
,@FldText2 text = ''
,@FldText3 text = ''
AS
SET NOCOUNT ON
SET TRANSACTION ISOLATION LEVEL READ UNCOMMITTED

UPDATE
dbo.SRPUser
SET
Username = @Username
, Password = @Password
, FirstName = @FirstName
, LastName = @LastName
, EmailAddress = @EmailAddress
, Division = @Division
, Department = @Department
, Title = @Title
, IsActive = @IsActive
, MustResetPassword = @MustResetPassword
, IsDeleted = @IsDeleted
, LastPasswordReset = @LastPasswordReset
, LastModDate = getdate()
, LastModUser = @ActionUsername
,TenID = @TenID
,FldInt1 = @FldInt1
,FldInt2 = @FldInt2
,FldInt3 = @FldInt3
,FldBit1 = @FldBit1
,FldBit2 = @FldBit2
,FldBit3 = @FldBit3
,FldText1 = @FldText1
,FldText2 = @FldText2
,FldText3 = @FldText3
WHERE
UID = @UID
AND TenID = @TenID


GO

/****** Object:  StoredProcedure [dbo].[cbspSRPUser_UpdateGroups]    Script Date: 12/05/2014 14:24:58 ******/

GO


GO

/****** Object:  StoredProcedure [dbo].[cbspSRPUser_UpdateGroups]    Script Date: 03/10/2014 14:43:27 ******/








------------------------------------------------------------------------


CREATE PROCEDURE [dbo].[cbspSRPUser_UpdateGroups]
@UID		int
, @GID_LIST	varchar(4000)
, @ActionUsername varchar(50)	= 'N/A'
AS
SET NOCOUNT ON
SET TRANSACTION ISOLATION LEVEL READ UNCOMMITTED

DELETE
dbo.SRPUserGroups
WHERE
UID = @UID
AND GID NOT in (select * from [dbo].[fnSplitBigInt](@GID_LIST))

INSERT INTO
dbo.SRPUserGroups
SELECT
@UID
, GID
, getdate()
, @ActionUsername
FROM
dbo.SRPGroups
WHERE
GID in (select * from [dbo].[fnSplitBigInt](@GID_LIST))
AND GID NOT IN
(
SELECT
GID
FROM
dbo.SRPUserGroups
WHERE
UID = @UID
)








GO

/****** Object:  StoredProcedure [dbo].[cbspSRPUser_UpdateSpecialUserPermissions]    Script Date: 12/05/2014 14:24:58 ******/

GO


GO

/****** Object:  StoredProcedure [dbo].[cbspSRPUser_UpdateSpecialUserPermissions]    Script Date: 03/10/2014 14:43:27 ******/









------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[cbspSRPUser_UpdateSpecialUserPermissions]
@UID		int
, @PermissionID_LIST	varchar(4000)
, @ActionUsername varchar(50)	= 'N/A'
AS
SET NOCOUNT ON
SET TRANSACTION ISOLATION LEVEL READ UNCOMMITTED

DELETE
dbo.SRPUserPermissions
WHERE
UID = @UID
AND PermissionID NOT in (select * from [dbo].[fnSplitBigInt](@PermissionID_LIST))

INSERT INTO
dbo.SRPUserPermissions
SELECT
@UID
, PermissionID
, getdate()
, @ActionUsername
FROM
dbo.SRPPermissionsMaster
WHERE
PermissionID in (select * from [dbo].[fnSplitBigInt](@PermissionID_LIST))
AND PermissionID NOT IN
(
SELECT
PermissionID
FROM
dbo.SRPUserPermissions
WHERE
UID = @UID
)








GO

/****** Object:  StoredProcedure [dbo].[cbspSRPUser_UsernameExists]    Script Date: 12/05/2014 14:24:58 ******/

GO


GO

/****** Object:  StoredProcedure [dbo].[cbspSRPUser_UsernameExists]    Script Date: 03/10/2014 14:43:27 ******/








------------------------------------------------------------------------
CREATE PROCEDURE [dbo].[cbspSRPUser_UsernameExists]
@Username		varchar(50)
AS
SET NOCOUNT ON
SET TRANSACTION ISOLATION LEVEL READ UNCOMMITTED
declare @RowCount int
SELECT @RowCount =  Count(*)
FROM dbo.SRPUser
WHERE
Username = @Username
IF @RowCount > 0
return 1
ELSE
return 0






GO

/****** Object:  StoredProcedure [dbo].[cbspSRPUserGroups_GetPermissions]    Script Date: 12/05/2014 14:24:58 ******/

GO


GO

/****** Object:  StoredProcedure [dbo].[cbspSRPUserGroups_GetPermissions]    Script Date: 03/10/2014 14:43:27 ******/








CREATE PROCEDURE [dbo].[cbspSRPUserGroups_GetPermissions]
@GID		int
AS
SET NOCOUNT ON
SET TRANSACTION ISOLATION LEVEL READ UNCOMMITTED

SELECT     dbo.SRPGroups.GID, dbo.SRPPermissionsMaster.PermissionID,
dbo.SRPPermissionsMaster.PermissionName,
dbo.SRPPermissionsMaster.PermissionDesc,
dbo.SRPGroupPermissions.AddedDate,
dbo.SRPGroupPermissions.AddedUser
FROM         dbo.SRPPermissionsMaster INNER JOIN
dbo.SRPGroupPermissions ON
dbo.SRPPermissionsMaster.PermissionID = dbo.SRPGroupPermissions.PermissionID INNER JOIN
dbo.SRPGroups ON dbo.SRPGroupPermissions.GID = dbo.SRPGroups.GID
WHERE
dbo.SRPGroups.GID = @GID






GO

/****** Object:  StoredProcedure [dbo].[cbspSRPUserGroups_GetPermissionsFlagged]    Script Date: 12/05/2014 14:24:58 ******/

GO


GO

/****** Object:  StoredProcedure [dbo].[cbspSRPUserGroups_GetPermissionsFlagged]    Script Date: 03/10/2014 14:43:27 ******/








------------------------------------------------------------------

CREATE PROCEDURE [dbo].[cbspSRPUserGroups_GetPermissionsFlagged]
@GID		int
AS
SET NOCOUNT ON
SET TRANSACTION ISOLATION LEVEL READ UNCOMMITTED

SELECT     @GID as GID, dbo.SRPPermissionsMaster.PermissionID,
dbo.SRPPermissionsMaster.PermissionName,
dbo.SRPPermissionsMaster.PermissionDesc,
dbo.SRPGroupPermissions.AddedDate,
dbo.SRPGroupPermissions.AddedUser,
case
when dbo.SRPGroupPermissions.AddedDate is null then 0
else 1 end  AS Checked


FROM         dbo.SRPPermissionsMaster LEFT OUTER JOIN
dbo.SRPGroupPermissions ON dbo.SRPPermissionsMaster.PermissionID = dbo.SRPGroupPermissions.PermissionID
AND dbo.SRPGroupPermissions.GID = @GID
where GID = @GID or GID is null







GO

/****** Object:  StoredProcedure [dbo].[cbspSRPUserGroups_GetPermissionsNotGranted]    Script Date: 12/05/2014 14:24:58 ******/

GO


GO

/****** Object:  StoredProcedure [dbo].[cbspSRPUserGroups_GetPermissionsNotGranted]    Script Date: 03/10/2014 14:43:28 ******/









------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[cbspSRPUserGroups_GetPermissionsNotGranted]
@GID		int
AS
SET NOCOUNT ON
SET TRANSACTION ISOLATION LEVEL READ UNCOMMITTED

SELECT     @GID as GID, dbo.SRPPermissionsMaster.PermissionID,
dbo.SRPPermissionsMaster.PermissionName,
dbo.SRPPermissionsMaster.PermissionDesc,
null as AddedDate, 'N/A' as AddedUser
FROM dbo.SRPPermissionsMaster
WHERE
dbo.SRPPermissionsMaster.PermissionID NOT IN
(
SELECT     dbo.SRPPermissionsMaster.PermissionID
FROM         dbo.SRPPermissionsMaster INNER JOIN
dbo.SRPGroupPermissions ON dbo.SRPPermissionsMaster.PermissionID = dbo.SRPGroupPermissions.PermissionID INNER JOIN
dbo.SRPGroups ON dbo.SRPGroupPermissions.GID = dbo.SRPGroups.GID
WHERE
dbo.SRPGroupPermissions.GID = @GID
)






GO

/****** Object:  StoredProcedure [dbo].[cbspSRPUserGroups_GetUsers]    Script Date: 12/05/2014 14:24:58 ******/

GO


GO

/****** Object:  StoredProcedure [dbo].[cbspSRPUserGroups_GetUsers]    Script Date: 03/10/2014 14:43:28 ******/








CREATE PROCEDURE [dbo].[cbspSRPUserGroups_GetUsers]
@GID		int
AS
SET NOCOUNT ON
SET TRANSACTION ISOLATION LEVEL READ UNCOMMITTED

SELECT dbo.SRPGroups.GID, dbo.SRPGroups.GroupName, dbo.SRPUser.UID, dbo.SRPUser.Username,
dbo.SRPUser.FirstName , dbo.SRPUser.LastName , dbo.SRPUser.EmailAddress ,
dbo.SRPUserGroups.AddedDate, dbo.SRPUserGroups.AddedUser
FROM         dbo.SRPGroups INNER JOIN
dbo.SRPUserGroups ON dbo.SRPGroups.GID = dbo.SRPUserGroups.GID INNER JOIN
dbo.SRPUser ON dbo.SRPUserGroups.UID = dbo.SRPUser.UID
WHERE
dbo.SRPGroups.GID = @GID
AND dbo.SRPUser.IsDeleted  = 0







GO

/****** Object:  StoredProcedure [dbo].[cbspSRPUserGroups_GetUsersFlagged]    Script Date: 12/05/2014 14:24:58 ******/

GO


GO

/****** Object:  StoredProcedure [dbo].[cbspSRPUserGroups_GetUsersFlagged]    Script Date: 03/10/2014 14:43:28 ******/








CREATE PROCEDURE [dbo].[cbspSRPUserGroups_GetUsersFlagged]
@GID		int
AS
SET NOCOUNT ON
SET TRANSACTION ISOLATION LEVEL READ UNCOMMITTED

SELECT     @GID as GID,
dbo.SRPGroups.GroupName,
dbo.SRPGroups.GroupDescription,
dbo.SRPUser.UID,
dbo.SRPUser.Username,
dbo.SRPUser.FirstName,
dbo.SRPUser.LastName,
dbo.SRPUser.EmailAddress,
dbo.SRPUserGroups.AddedDate,
dbo.SRPUserGroups.AddedUser,
case
when dbo.SRPUserGroups.AddedDate is null then 0--'False'
else 1--'True'
end  AS isMember


FROM         dbo.SRPUser LEFT OUTER JOIN
dbo.SRPUserGroups ON dbo.SRPUser.UID = dbo.SRPUserGroups.UID
AND dbo.SRPUserGroups.GID = @GID LEFT OUTER JOIN
dbo.SRPGroups ON dbo.SRPGroups.GID = @GID
where (dbo.SRPUserGroups.GID = @GID or dbo.SRPUserGroups.GID is null)
AND dbo.SRPUser.IsDeleted  = 0 and dbo.SRPUser.TenID = dbo.SRPGroups.TenID








GO

/****** Object:  StoredProcedure [dbo].[cbspSRPUserGroups_GetUsersNonMembers]    Script Date: 12/05/2014 14:24:58 ******/

GO


GO

/****** Object:  StoredProcedure [dbo].[cbspSRPUserGroups_GetUsersNonMembers]    Script Date: 03/10/2014 14:43:28 ******/








CREATE PROCEDURE [dbo].[cbspSRPUserGroups_GetUsersNonMembers]
@GID		int
AS
SET NOCOUNT ON
SET TRANSACTION ISOLATION LEVEL READ UNCOMMITTED

SELECT dbo.SRPGroups.GID, dbo.SRPGroups.GroupName, dbo.SRPUser.UID, dbo.SRPUser.Username,
dbo.SRPUser.FirstName , dbo.SRPUser.LastName , dbo.SRPUser.EmailAddress ,
null as AddedDate, 'N/A' as AddedUser
FROM         dbo.SRPGroups INNER JOIN
dbo.SRPUserGroups ON dbo.SRPGroups.GID = dbo.SRPUserGroups.GID INNER JOIN
dbo.SRPUser ON dbo.SRPUserGroups.UID = dbo.SRPUser.UID
WHERE
dbo.SRPGroups.GID NOT IN
(
SELECT dbo.SRPGroups.GID
FROM         dbo.SRPGroups INNER JOIN
dbo.SRPUserGroups ON dbo.SRPGroups.GID = dbo.SRPUserGroups.GID INNER JOIN
dbo.SRPUser ON dbo.SRPUserGroups.UID = dbo.SRPUser.UID
WHERE
dbo.SRPGroups.GID = @GID
AND dbo.SRPUser.IsDeleted  = 0
)
AND dbo.SRPUser.IsDeleted  = 0







GO

/****** Object:  StoredProcedure [dbo].[cbspSRPUserGroups_UpdatePermissions]    Script Date: 12/05/2014 14:24:58 ******/

GO


GO

/****** Object:  StoredProcedure [dbo].[cbspSRPUserGroups_UpdatePermissions]    Script Date: 03/10/2014 14:43:28 ******/









------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[cbspSRPUserGroups_UpdatePermissions]
@GID		int
, @PermissionID_LIST	varchar(4000)
, @ActionUsername varchar(50)	= 'N/A'
AS
SET NOCOUNT ON
SET TRANSACTION ISOLATION LEVEL READ UNCOMMITTED

DELETE
dbo.SRPGroupPermissions
WHERE
GID = @GID
AND PermissionID NOT in (select * from [dbo].[fnSplitBigInt](@PermissionID_LIST))

INSERT INTO
dbo.SRPGroupPermissions
SELECT
@GID
, PermissionID
, getdate()
, @ActionUsername
FROM
dbo.SRPPermissionsMaster
WHERE
PermissionID in (select * from [dbo].[fnSplitBigInt](@PermissionID_LIST))
AND PermissionID NOT IN
(
SELECT
PermissionID
FROM
dbo.SRPGroupPermissions
WHERE
GID = @GID
)








GO

/****** Object:  StoredProcedure [dbo].[cbspSRPUserGroups_UpdateUsers]    Script Date: 12/05/2014 14:24:58 ******/

GO


GO

/****** Object:  StoredProcedure [dbo].[cbspSRPUserGroups_UpdateUsers]    Script Date: 03/10/2014 14:43:28 ******/








CREATE PROCEDURE [dbo].[cbspSRPUserGroups_UpdateUsers]
@GID		int
, @UID_LIST	varchar(4000)
, @ActionUsername varchar(50)	= 'N/A'
AS
SET NOCOUNT ON
SET TRANSACTION ISOLATION LEVEL READ UNCOMMITTED

DELETE
dbo.SRPUserGroups
WHERE
GID = @GID
AND UID NOT in (select * from [dbo].[fnSplitBigInt](@UID_LIST))

INSERT INTO
dbo.SRPUserGroups
SELECT
UID
, @GID
, getdate()
, @ActionUsername
FROM
dbo.SRPUser
WHERE
UID in (select * from [dbo].[fnSplitBigInt](@UID_LIST))
AND UID NOT IN
(
SELECT
UID
FROM
dbo.SRPUserGroups
WHERE
GID = @GID
)
AND IsDeleted = 0








GO

/****** Object:  StoredProcedure [dbo].[GetPatronsPaged]    Script Date: 12/05/2014 14:24:58 ******/

GO


GO

CREATE PROCEDURE [dbo].[GetPatronsPaged]
(
@startRowIndex int = 0,
@maximumRows int = 0,
@sortString varchar(200) = 'p.PID desc'
,   @searchFirstName varchar(50) = ''
,   @searchLastName varchar(50) = ''
,   @searchUsername varchar(50) = ''
,   @searchEmail varchar(128) = ''
,   @searchDOB datetime = null
,   @searchProgram int = 0
,   @searchGender varchar(2) = ''
,   @TenID int = null
)
AS
declare @SQL1 varchar(8000)
IF LEN(@sortString) = 0
SET @sortString = 'p.PID'

declare @Filter varchar(8000)
select @Filter = ''
if @searchFirstName <> ''
select @Filter = @Filter  +
case len(@Filter) when 0 then '' else ' AND ' end +
' FirstName like ''%' + replace(@searchFirstName,'''','''''') + '%'' '

if @searchLastName <> ''
select @Filter = @Filter  +
case len(@Filter) when 0 then '' else ' AND ' end +
' LastName like ''%' + replace(@searchLastName,'''','''''') + '%'' '

if @searchUsername <> ''
select @Filter = @Filter  +
case len(@Filter) when 0 then '' else ' AND ' end +
' Username like ''%' + replace(@searchUsername,'''','''''') + '%'' '


if @searchEmail <> ''
select @Filter = @Filter  +
case len(@Filter) when 0 then '' else ' AND ' end +
' EmailAddress like ''%' + replace(@searchEmail,'''','''''') + '%'' '

if @searchDOB is not  null
select @Filter = @Filter  +
case len(@Filter) when 0 then '' else ' AND ' end +
' DOB = ''' + convert(varchar, @searchDOB, 101) + ''' '
if @searchProgram <> 0
select @Filter = @Filter  +
case len(@Filter) when 0 then '' else ' AND ' end +
' ProgID = ' + CONVERT(varchar, @searchProgram) + ' '

if @searchGender <> ''
select @Filter = @Filter  +
case len(@Filter) when 0 then '' else ' AND ' end +
' Gender like ''%' + @searchGender + '%'' '

select @Filter = @Filter  +
case len(@Filter) when 0 then '' else ' AND ' end +
' p.TenID = ' + convert(varchar,@TenID) + ' '

select @SQL1 =
'SELECT  PID, FirstName, LastName, DOB, Username, EmailAddress, Gender, Program, ProgId
FROM
(
Select p.*, pg.AdminName as Program
, ROW_NUMBER() OVER (ORDER BY ' + @sortString + ' ) AS RowRank
FROM Patron p left outer join Programs pg
on p.ProgID = pg.PID
'  + case len(@Filter) when 0 then '' else ' WHERE ' + @Filter end + '
) AS p
WHERE RowRank > ' + convert(varchar,@startRowIndex) + ' AND RowRank <= (' + convert(varchar,@startRowIndex) + ' + ' + convert(varchar,@maximumRows) + ') '
+ case len(@Filter) when 0 then '' else ' AND ' + @Filter end

--select @SQL1
exec (@SQL1)

GO

/****** Object:  StoredProcedure [dbo].[GetTotalPatrons]    Script Date: 12/05/2014 14:24:58 ******/

GO


GO


CREATE PROCEDURE [dbo].[GetTotalPatrons]
(
@startRowIndex int = 0,
@maximumRows int = 0,
@sortString varchar(200) = 'p.PID desc'
,   @searchFirstName varchar(50) = ''
,   @searchLastName varchar(50) = ''
,   @searchUsername varchar(50) = ''
,   @searchEmail varchar(128) = ''
,   @searchDOB datetime = null
,   @searchProgram int = 0
,   @searchGender varchar(2) = ''
,@TenID int = null
)
AS
declare @SQL1 varchar(8000)
IF LEN(@sortString) = 0
SET @sortString = 'p.PID'

declare @Filter varchar(8000)
select @Filter = ''
if @searchFirstName <> ''
select @Filter = @Filter  +
case len(@Filter) when 0 then '' else ' AND ' end +
' FirstName like ''%' + replace(@searchFirstName,'''','''''') + '%'' '

if @searchLastName <> ''
select @Filter = @Filter  +
case len(@Filter) when 0 then '' else ' AND ' end +
' LastName like ''%' + replace(@searchLastName,'''','''''') + '%'' '

if @searchUsername <> ''
select @Filter = @Filter  +
case len(@Filter) when 0 then '' else ' AND ' end +
' Username like ''%' + replace(@searchUsername,'''','''''') + '%'' '

if @searchEmail <> ''
select @Filter = @Filter  +
case len(@Filter) when 0 then '' else ' AND ' end +
' EmailAddress like ''%' + replace(@searchEmail,'''','''''') + '%'' '

if @searchDOB is not  null
select @Filter = @Filter  +
case len(@Filter) when 0 then '' else ' AND ' end +
' DOB = ''' + convert(varchar, @searchDOB, 101) + ''' '

if @searchDOB is not  null
select @Filter = @Filter  +
case len(@Filter) when 0 then '' else ' AND ' end +
' DOB = ''' + convert(varchar, @searchDOB, 101) + ''' '
if @searchProgram <> 0
select @Filter = @Filter  +
case len(@Filter) when 0 then '' else ' AND ' end +
' ProgID = ' + CONVERT(varchar, @searchProgram) + ' '

if @searchGender <> ''
select @Filter = @Filter  +
case len(@Filter) when 0 then '' else ' AND ' end +
' Gender like ''%' + @searchGender + '%'' '

select @Filter = @Filter  +
case len(@Filter) when 0 then '' else ' AND ' end +
' TenID = ' + convert(varchar,@TenID) + ' '

select @SQL1 =
'SELECT  count(*)
FROM Patron p '  + case len(@Filter) when 0 then '' else ' WHERE ' + @Filter end

exec (@SQL1)
--select @SQL1

GO

/****** Object:  StoredProcedure [dbo].[rpt_DashboardStats]    Script Date: 12/05/2014 14:24:58 ******/

GO


GO


CREATE procedure [dbo].[rpt_DashboardStats]
@ProgId int = null
,@BranchID int = null
,@School varchar(50) = null
,@LibSys varchar(50) = null
,@Level int = null
,@TenID int = null
as
select AdminName as Program, count(*) as RegistrantCount
from
Patron p left join Programs pg
on p.ProgId = pg.PID
where
p.TenID = @TenID AND
p.ProgID > 0
AND	(ProgID = @ProgId or @ProgId is null)
AND (PrimaryLibrary = @BranchID or @BranchID is null)
AND (rtrim(ltrim(isnull(SchoolName,''))) = @School or @School is null)
AND (rtrim(ltrim(isnull(District,''))) = @LibSys or @LibSys is null)
group by AdminName
---------------------------------------------------------------------------------------------------------------
if exists (
select AdminName as Program, isnull(count(*),0) as FinisherCount
from
Patron p right outer join Programs pg
on p.ProgId = pg.PID
where
p.TenID = @TenID AND
p.ProgID > 0
AND	(ProgID = @ProgId or @ProgId is null)
AND (PrimaryLibrary = @BranchID or @BranchID is null)
AND (rtrim(ltrim(isnull(SchoolName,''))) = @School or @School is null)
AND (rtrim(ltrim(isnull(District,''))) = @LibSys or @LibSys is null)
AND [dbo].[fx_IsFinisher2](p.PID, pg.PID, @Level) = 1
group by AdminName
)
select AdminName as Program, isnull(count(*),0) as FinisherCount
from
Patron p right outer join Programs pg
on p.ProgId = pg.PID
where
p.TenID = @TenID AND
p.ProgID > 0
AND	(ProgID = @ProgId or @ProgId is null)
AND (PrimaryLibrary = @BranchID or @BranchID is null)
AND (rtrim(ltrim(isnull(SchoolName,''))) = @School or @School is null)
AND (rtrim(ltrim(isnull(District,''))) = @LibSys or @LibSys is null)
AND [dbo].[fx_IsFinisher2](p.PID, pg.PID, @Level) = 1
group by AdminName
else
select AdminName as Program, 0 as FinisherCount
from
Programs pg
where
pg.TenID = @TenID AND
(PID = @ProgId or @ProgId is null)
group by AdminName
---------------------------------------------------------------------------------------------------------------
-----------------------------------------------------------------------------------------
-----------------------------------------------------------------------------------------
DECLARE @current INT
DECLARE @ColCounter INT
DECLARE @SQL VARCHAR(7000)
DECLARE @SQL1 VARCHAR(7000)
-----------------------------------------------------------------------------------------
if OBJECT_ID('tempdb..#Temp1') is not null
drop table #Temp1
select AdminName as Program,
case
when DOB IS NOT NULL then FLOOR((CAST (GetDate() AS INTEGER) - CAST(DOB AS INTEGER)) / 365.25)
else
case
when Age IS NOT NULL then Age
else 0
end
end as Age
,count(*) as RegistrantCount
,-1 as IndexRank
into #temp1
from
Patron p left join Programs pg
on p.ProgId = pg.PID
where
p.TenID = @TenID AND
p.ProgID > 0
AND	(ProgID = @ProgId or @ProgId is null)
AND (PrimaryLibrary = @BranchID or @BranchID is null)
AND (rtrim(ltrim(isnull(SchoolName,''))) = @School or @School is null)
AND (rtrim(ltrim(isnull(District,''))) = @LibSys or @LibSys is null)
group by p.ProgId, AdminName,
case
when DOB IS NOT NULL then FLOOR((CAST (GetDate() AS INTEGER) - CAST(DOB AS INTEGER)) / 365.25)
else
case
when Age IS NOT NULL then Age
else 0
end
end
order by AdminName, Age

update 	#Temp1
set
IndexRank = a.IndexRank
from
(
select top 100 percent Program
,RANK () over ( order by Program ) as IndexRank
from #Temp1
group by Program
order by Program
) a
inner join  #Temp1
on a.Program = #Temp1.Program
--select 1, * from #Temp1

/*
select @ColCounter = isnull(max(x.R) ,0)
from (
select RANK () over ( order by Count(Program)  desc ) as R
from #temp1
group by Program
) as x
*/
select @ColCounter = isnull(max(IndexRank) ,0) from #temp1
--select @ColCounter

if OBJECT_ID('tempdb..#StatsData') is not null
drop table #StatsData
create table #StatsData(Age int)

if OBJECT_ID('tempdb..#ProgramLabels') is not null
drop table #ProgramLabels
create table #ProgramLabels(Label varchar(50))
insert into #ProgramLabels (Label)
select Program from #temp1 group by IndexRank, Program order by IndexRank
--select * from #ProgramLabels

IF @ColCounter > 0
BEGIN

SELECT @SQL = 'alter table #StatsData add '
--SELECT @SQL1 = 'alter table #ProgramLabels add '
select @current = 1--, @maxcounter = 8
WHILE @current <= @ColCounter
BEGIN
SELECT @SQL = @SQL + 'PgmCount' + CONVERT(varchar, @current) + ' int '
SELECT @SQL1 = @SQL1 + 'PgmName' + CONVERT(varchar, @current) + ' varchar(255)'
if @current < @ColCounter
		begin
			SELECT @SQL = @SQL + ','
			SELECT @SQL1 = @SQL1 + ','
		end 
		select @current = @current + 1
	END
	print @SQL
	--print @SQL1
	EXEC (@SQL)
	--EXEC (@SQL1)
	
	insert into #StatsData (Age) select distinct Age from #temp1 order by Age
	
	select @current = 1
	WHILE @current <= @ColCounter
BEGIN
SELECT @SQL = 'update #StatsData set ' +
'PgmCount' + CONVERT(varchar, @current) + ' = a.RegistrantCount ' +
'from #Temp1 a inner join  #StatsData on a.Age = #StatsData.Age ' +
' and a.IndexRank = ' + CONVERT(varchar, @current)
SELECT @SQL1 = 'update #StatsData set ' +
'PgmCount' + CONVERT(varchar, @current) + ' = 0 ' +
'where PgmCount' + CONVERT(varchar, @current) + ' is null '

EXEC (@SQL)
EXEC (@SQL1)
print @SQL
select @current = @current + 1
END



end
select * from #ProgramLabels
select * from #StatsData
-----------------------------------------------------------------------------------------
-----------------------------------------------------------------------------------------
---------------------------------------------------------------------------------------------------------------
if OBJECT_ID('tempdb..#Temp2') is not null
drop table #Temp2
select AdminName as Program,
case
when DOB IS NOT NULL then FLOOR((CAST (GetDate() AS INTEGER) - CAST(DOB AS INTEGER)) / 365.25)
else
case
when Age IS NOT NULL then Age
else 0
end
end as Age
,count(*) as FinisherCount
,-1 as IndexRank
into #Temp2
from
Patron p left join Programs pg
on p.ProgId = pg.PID
where
p.TenID = @TenID AND
p.ProgID > 0
AND	(ProgID = @ProgId or @ProgId is null)
AND (PrimaryLibrary = @BranchID or @BranchID is null)
AND (rtrim(ltrim(isnull(SchoolName,''))) = @School or @School is null)
AND (rtrim(ltrim(isnull(District,''))) = @LibSys or @LibSys is null)
AND [dbo].[fx_IsFinisher2](p.PID, pg.PID, @Level) = 1
group by p.ProgId, AdminName,
case
when DOB IS NOT NULL then FLOOR((CAST (GetDate() AS INTEGER) - CAST(DOB AS INTEGER)) / 365.25)
else
case
when Age IS NOT NULL then Age
else 0
end
end
order by AdminName, Age

update 	#Temp2
set
IndexRank = a.IndexRank
from
(
select top 100 percent Program
,RANK () over ( order by Program ) as IndexRank
from #Temp2
group by Program
order by Program
) a
inner join  #Temp2
on a.Program = #Temp2.Program
--select * from #Temp2

/*
select @ColCounter = isnull(max(x.R) ,0)
from (
select RANK () over ( order by Count(Program)  desc ) as R
from #Temp2
group by Program
) as x
*/
select @ColCounter = isnull(max(IndexRank) ,0) from #Temp2
--select @ColCounter

if OBJECT_ID('tempdb..#StatsData2') is not null
drop table #StatsData2
create table #StatsData2(Age int)

if OBJECT_ID('tempdb..#ProgramLabels2') is not null
drop table #ProgramLabels2
create table #ProgramLabels2(Label varchar(50))
insert into #ProgramLabels2 (Label)
select Program from #Temp2 group by IndexRank, Program order by IndexRank
--select * from #ProgramLabels2

IF @ColCounter > 0
BEGIN

SELECT @SQL = 'alter table #StatsData2 add '
--SELECT @SQL1 = 'alter table #ProgramLabels2 add '
select @current = 1--, @maxcounter = 8
WHILE @current <= @ColCounter
BEGIN
SELECT @SQL = @SQL + 'PgmCount' + CONVERT(varchar, @current) + ' int '
SELECT @SQL1 = @SQL1 + 'PgmName' + CONVERT(varchar, @current) + ' varchar(255)'
if @current < @ColCounter
		begin
			SELECT @SQL = @SQL + ','
			SELECT @SQL1 = @SQL1 + ','
		end 
		select @current = @current + 1
	END
	print @SQL
	--print @SQL1
	EXEC (@SQL)
	--EXEC (@SQL1)
	
	insert into #StatsData2 (Age) select distinct Age from #Temp2 order by Age
	
	select @current = 1
	WHILE @current <= @ColCounter
BEGIN
SELECT @SQL = 'update #StatsData2 set ' +
'PgmCount' + CONVERT(varchar, @current) + ' = a.FinisherCount ' +
'from #Temp2 a inner join  #StatsData2 on a.Age = #StatsData2.Age ' +
' and a.IndexRank = ' + CONVERT(varchar, @current)
SELECT @SQL1 = 'update #StatsData2 set ' +
'PgmCount' + CONVERT(varchar, @current) + ' = 0 ' +
'where PgmCount' + CONVERT(varchar, @current) + ' is null '

EXEC (@SQL)
EXEC (@SQL1)
print @SQL
select @current = @current + 1
END
END

select * from #ProgramLabels2
select * from #StatsData2
-----------------------------------------------------------------------------------------
-----------------------------------------------------------------------------------------
---------------------------------------------------------------------------------------------------------------
select pg.AdminName
, Sum(case isnull(Gender,'') when 'M' then 1 else 0 end) as MaleRegistrant
, Sum(case isnull(Gender,'') when 'F' then 1 else 0 end) as FemaleRegistrant
, Sum(case isnull(Gender,'') when 'O' then 1 else 0 end) as OtherRegistrant
, Sum(case isnull(Gender,'') when 'F' then 0 when 'O' then 0 when 'M' then 0  else 1 end) as NARegistrant
, Sum(case isnull(Gender,'') when 'M' then 1 else 0 end) + Sum(case isnull(Gender,'') when 'F' then 1 else 0 end) + Sum(case isnull(Gender,'') when 'O' then 1 else 0 end) +
Sum(case isnull(Gender,'') when 'F' then 0 when 'O' then 0 when 'M' then 0  else 1 end) as TotalRegistrant

from Patron left join Programs pg
on ProgID = pg.PID
where
Patron.TenID = @TenID AND
ProgID > 0
AND	(ProgID = @ProgId or @ProgId is null)
AND (PrimaryLibrary = @BranchID or @BranchID is null)
AND (rtrim(ltrim(isnull(SchoolName,''))) = @School or @School is null)
AND (rtrim(ltrim(isnull(District,''))) = @LibSys or @LibSys is null)
group by AdminName
order by AdminName


---------------------------------------------------------------------------------------------------------------
select pg.AdminName
, Sum(case isnull(Gender,'') when 'M' then 1 else 0 end) as MaleFinisher
, Sum(case isnull(Gender,'') when 'F' then 1 else 0 end) as FemaleFinisher
, Sum(case isnull(Gender,'') when 'O' then 1 else 0 end) as OtherFinisher
, Sum(case isnull(Gender,'') when 'F' then 0 when 'O' then 0 when 'M' then 0  else 1 end) as NAFinisher
, Sum(case isnull(Gender,'') when 'M' then 1 else 0 end) + Sum(case isnull(Gender,'') when 'F' then 1 else 0 end) + Sum(case isnull(Gender,'') when 'O' then 1 else 0 end) +
Sum(case isnull(Gender,'') when 'F' then 0 when 'O' then 0 when 'M' then 0  else 1 end) as TotalFinisher

from Patron left join Programs pg
on ProgID = pg.PID
where
Patron.TenID = @TenID AND
ProgID > 0
AND	(ProgID = @ProgId or @ProgId is null)
AND (PrimaryLibrary = @BranchID or @BranchID is null)
AND (rtrim(ltrim(isnull(SchoolName,''))) = @School or @School is null)
AND (rtrim(ltrim(isnull(District,''))) = @LibSys or @LibSys is null)
AND [dbo].[fx_IsFinisher2](Patron.PID, Pg.PID, @Level) = 1
group by AdminName
order by AdminName

GO

/****** Object:  StoredProcedure [dbo].[rpt_FinisherStats]    Script Date: 12/05/2014 14:24:58 ******/

GO


GO

CREATE procedure [dbo].[rpt_FinisherStats]
@ProgId int = null
,@BranchID int = null
,@School varchar(50) = null
,@LibSys varchar(50) = null
,@TenID int = null
as
SET ARITHABORT  OFF;
SET ANSI_WARNINGS OFF;
select ProgID, pg.AdminName
, case
when DOB IS NOT NULL then FLOOR((CAST (GetDate() AS INTEGER) - CAST(DOB AS INTEGER)) / 365.25)
else
case
when Age IS NOT NULL then Age
else 0
end
end as Age
, Sum(case isnull(Gender,'') when 'M' then 1 else 0 end) as Male
, Sum(case isnull(Gender,'') when 'F' then 1 else 0 end) as Female
, Sum(case isnull(Gender,'') when 'O' then 1 else 0 end) as Other
, Sum(case isnull(Gender,'') when 'F' then 0 when 'M' then 0  when 'O' then 0  else 1 end) as NA

from Patron left join Programs pg
on ProgID = pg.PID --AND Patron.TenID = pg.TenID
where
Patron.TenID = @TenID AND
ProgID > 0
AND	(ProgID = @ProgId or @ProgId is null)
AND (PrimaryLibrary = @BranchID or @BranchID is null)
AND (rtrim(ltrim(isnull(SchoolName,''))) = @School or @School is null)
AND (rtrim(ltrim(isnull(District,''))) = @LibSys or @LibSys is null)
AND [dbo].[fx_IsFinisher](Patron.PID, Pg.PID) = 1
group by ProgID, AdminName,
case
when DOB IS NOT NULL then FLOOR((CAST (GetDate() AS INTEGER) - CAST(DOB AS INTEGER)) / 365.25)
else
case
when Age IS NOT NULL then Age
else 0
end
end
order by ProgID, Age


GO

/****** Object:  StoredProcedure [dbo].[rpt_GameLevelStats]    Script Date: 12/05/2014 14:24:58 ******/

GO


GO


CREATE procedure [dbo].[rpt_GameLevelStats]
@ProgId int = null
,@BranchID int = null
,@School varchar(50) = null
,@LibSys varchar(50) = null
,@TenID int = null
as
SET ARITHABORT  OFF;
SET ANSI_WARNINGS OFF;
Declare @Levels TABLE
(	PGID int,
GameLevel int,
PointsNeeded int,
IsBonus bit
)
insert into @Levels
select
f.*
from
ProgramGame pgm
cross apply dbo.ProgramGameCummulativePoints(pgm.PGID) f
where pgm.TenID = @TenID
--select * from @Levels

select ProgID, pg.AdminName,
isnull((Select Top 1 L.GameLevel from @Levels L where L.PointsNeeded <= isNull((select SUM(NumPoints) from PatronPoints pp where pp.PID = p.PID),0) and L.PGID = pgm.PGID order by GameLevel desc),0) as LevelAchieved
into #Temp
from Patron p left join Programs pg
on ProgID = pg.PID AND p.TenID = pg.TenID
left join ProgramGame pgm
on pg.ProgramGameID = pgm.PGID
where
p.TenID = @TenID AND
ProgID > 0
AND	(ProgID = @ProgId or @ProgId is null)
AND (PrimaryLibrary = @BranchID or @BranchID is null)
AND (rtrim(ltrim(isnull(SchoolName,''))) = @School or @School is null)
AND (rtrim(ltrim(isnull(District,''))) = @LibSys or @LibSys is null)
--AND [dbo].[fx_IsFinisher](p.PID, Pg.PID) = 1
--group by p.PID, pgm.PGID, p.ProgID, pg.AdminName
order by p.PID, p.ProgID

select AdminName, LevelAchieved, COUNT(LevelAchieved)as FinisherCount
from #Temp
group by ProgID, AdminName, LevelAchieved
order by AdminName, LevelAchieved


GO

/****** Object:  StoredProcedure [dbo].[rpt_MiniGameStats]    Script Date: 12/05/2014 14:24:58 ******/

GO


GO

CREATE  PROCEDURE [dbo].[rpt_MiniGameStats]
@start	datetime = null
,@end	datetime = null
,@MGID  int = null
,@TenID int = null
AS

WITH stats AS
(select distinct
gps.GPSID,
gps.PID ,p.Username, p.FirstName, p.LastName, p.Gender, p.EmailAddress,
gps.MGID, g.GameName, g.AdminName, gps.MGType, g.MiniGameTypeName
,gps.CompletedPlay, Difficulty, Started, Completed
from GamePlayStats gps
join Patron p
on gps.PID = p.PID and p.TenID = @TenID
join Minigame g
on gps.MGID = g.MGID
)

select distinct PID as "Patron ID", Username, FirstName as "First Name",
LastName as "Last Name", Gender, EmailAddress as Email, MGID as "MiniGame ID", GameName as "Game Name",
AdminName as "Administrative Name", MGType as "MiniGame Type ID" , MiniGameTypeName as "MiniGame Type"
, (select COUNT(*) from stats s1 where s1.PID = s.PID and s1.mgid = s.mgid and s1.Difficulty='Easy' and (@start is null or s1.Started >= @start) and (@end is null or s1.Started <= @end)) as EasyLevelStated
, (select COUNT(*) from stats s1 where s1.PID = s.PID and s1.mgid = s.mgid and s1.Difficulty='Easy' and s1.CompletedPlay=1 and (@start is null or s1.Started >= @start) and (@end is null or s1.Started <= @end)) as EasyLevelCompleted
, (select COUNT(*) from stats s1 where s1.PID = s.PID and s1.mgid = s.mgid and s1.Difficulty='Medium' and (@start is null or s1.Started >= @start) and (@end is null or s1.Started <= @end)) as MediumLevelStated
, (select COUNT(*) from stats s1 where s1.PID = s.PID and s1.mgid = s.mgid and s1.Difficulty='Medium' and s1.CompletedPlay=1 and (@start is null or s1.Started >= @start) and (@end is null or s1.Started <= @end)) as MediumLevelCompleted
, (select COUNT(*) from stats s1 where s1.PID = s.PID and s1.mgid = s.mgid and s1.Difficulty='Hard' and (@start is null or s1.Started >= @start) and (@end is null or s1.Started <= @end)) as HardLevelStated
, (select COUNT(*) from stats s1 where s1.PID = s.PID and s1.mgid = s.mgid and s1.Difficulty='Hard' and s1.CompletedPlay=1 and (@start is null or s1.Started >= @start) and (@end is null or s1.Started <= @end)) as HardLevelCompleted
from stats s
where (@start is null or Started >= @start)
and (@end is null or Started >= @end)
and (@MGID is null or @MGID=MGID)
order by Username, FirstName, LastName, Gender, EmailAddress, MGID, GameName, AdminName, MGType, MiniGameTypeName


GO

/****** Object:  StoredProcedure [dbo].[rpt_PatronActivity]    Script Date: 12/05/2014 14:24:58 ******/

GO


GO

CREATE procedure [dbo].[rpt_PatronActivity]
@ProgId int = null
,@BranchID int = null
,@School varchar(50) = null
,@LibSys varchar(50) = null
,@TenID int = null
as
SET ARITHABORT  OFF;
SET ANSI_WARNINGS OFF;
select
pg.AdminName as Program
, p.Username, p.FirstName, p.LastName
, ISNULL(c1.Code, '') as LibraryDistrict
, ISNULL(c2.Code, '') as Library
, ISNULL(c3.Code, '') as SchoolDistrict
, ISNULL(c4.Code, '') as School
, p.Age, p.SchoolGrade
, case   when Score1Date is not null then CONVERT(varchar(50), Score1) else 'N/A' end as Score1
, case   when Score1Date is not null then CONVERT(varchar(10), Score1Date, 101) else 'N/A' end as Score1Date
, case   when Score2Date is not null then CONVERT(varchar(50), Score2) else 'N/A' end as Score2
, case   when Score2Date is not null then CONVERT(varchar(10), Score2Date, 101) else 'N/A' end as Score2Date
, case   when Score1Date is not null AND Score2Date is not null  then CONVERT(varchar(50), Score2-Score1) else 'N/A' end as ScoreDifference
, isnull((select SUM(NumPoints) from PatronPoints pp
where pp.PID = p.PID AND isReading = 1),0) as [# Points For Reading]
, isnull((select SUM(NumPoints) from PatronPoints pp
where pp.PID = p.PID AND isEvent = 1),0) as [# Points For Events]
, isnull((select SUM(NumPoints) from PatronPoints pp
where pp.PID = p.PID AND isGameLevelActivity = 1),0) as [# Points For Games]
, isnull((select SUM(NumPoints) from PatronPoints pp
where pp.PID = p.PID AND isBookList = 1),0) as [# Points For Book Lists]

, isnull((select COUNT(1) from PatronPoints pp
where pp.PID = p.PID AND isReading = 1),0) as [# Times Logged Reading]
, isnull((select COUNT(1) from PatronPoints pp
where pp.PID = p.PID AND isEvent = 1),0) as [# Events Attended]
, isnull((select COUNT(1) from PatronPoints pp
where pp.PID = p.PID AND isGameLevelActivity = 1),0) as [# Times Logged Games]
, isnull((select COUNT(1) from PatronPoints pp
where pp.PID = p.PID AND isBookList = 1),0) as [# Book Lists Completed]
, isnull((select COUNT(1) from PatronBadges pp
where pp.PID = p.PID ),0) as [# Badges Earned]
, isnull((select COUNT(1) from GamePlayStats pp
where pp.PID = p.PID AND CompletedPlay = 1),0) as [# Minigames Played]
from Patron p
left outer join Code c1
on  p.District = c1.CID
left outer join Code c2
on  p.PrimaryLibrary = c2.CID
left outer join Code c3
on  p.SDistrict = c3.CID
left outer join Code c4
on  p.SchoolName = c4.CID
left join Programs pg
on ProgID = pg.PID AND p.TenID = pg.TenID
where
p.TenID = @TenID AND Username is not null and
p.ProgID > 0
AND	(p.ProgID = @ProgId or @ProgId is null)
AND (p.PrimaryLibrary = @BranchID or @BranchID is null)
AND (rtrim(ltrim(isnull(p.SchoolName,''))) = @School or @School is null)
AND (rtrim(ltrim(isnull(p.District,''))) = @LibSys or @LibSys is null)
order by AdminName, p.Username, p.FirstName, p.LastName


GO

/****** Object:  StoredProcedure [dbo].[rpt_PatronFilter]    Script Date: 12/05/2014 14:24:58 ******/

GO


GO

CREATE procedure [dbo].[rpt_PatronFilter]
@ProgId int = null
,@BranchID int = null
,@School varchar(50) = null
,@LibSys varchar(50) = null
,@TenID int = null
as
SET ARITHABORT  OFF
SET ANSI_WARNINGS OFF

select distinct Patron.PID
from Patron
where
TenID = @TenID AND
ProgID > 0
AND	(ProgID = @ProgId or @ProgId is null)
AND (PrimaryLibrary = @BranchID or @BranchID is null)
AND (rtrim(ltrim(isnull(SchoolName,''))) = @School or @School is null)
AND (rtrim(ltrim(isnull(District,''))) = @LibSys or @LibSys is null)

GO

/****** Object:  StoredProcedure [dbo].[rpt_PrizeRecipients]    Script Date: 12/05/2014 14:24:58 ******/

GO


GO


CREATE procedure [dbo].[rpt_PrizeRecipients]
@ProgId int = null
,@BranchID int = null
,@School varchar(50) = null
,@LibSys varchar(50) = null
,@TenID int = null
as

select
AdminName, FirstName, LastName, Username, EmailAddress, PrizeName,
case RedeemedFlag
when 1 then 'Yes'
else 'No'
end PrizeRedeemed
from
PatronPrizes r
left join Patron p
on p.PID = r.PID
left join Programs pg
on p.ProgID = pg.PID
where
p.TenID = @TenID AND
ProgID > 0
AND	(ProgID = @ProgId or @ProgId is null)
AND (PrimaryLibrary = @BranchID or @BranchID is null)
AND (rtrim(ltrim(isnull(SchoolName,''))) = @School or @School is null)
AND (rtrim(ltrim(isnull(District,''))) = @LibSys or @LibSys is null)
--AND [dbo].[fx_IsFinisher](Patron.PID, Pg.PID) = 1
order by 	AdminName, FirstName, LastName , RedeemedFlag desc





GO

/****** Object:  StoredProcedure [dbo].[rpt_ReadingActivityReport]    Script Date: 12/05/2014 14:24:58 ******/

GO


GO

CREATE  procedure [dbo].[rpt_ReadingActivityReport]
@ProgId int = null
,@BranchID int = null
,@School varchar(50) = null
,@LibSys varchar(50) = null
,@ActivityType int = 1
,@TenID int = null
as

declare @ActivityLabel varchar(50)
select @ActivityLabel = case @ActivityType when 0 then 'Books' when 1 then 'Pages' when 2 then 'Paragraphs' when 3 then 'Minutes' else 'Unknown' end

select isnull(pg.AdminName, 'N/A') as Program, p.Username, isnull(p.FirstName,'') FirstName, isnull(p.LastName,'') LastName,
isnull(convert(varchar, Sum(dbo.fx_ConvertPoints(p.ProgID, isnull(l.ReadingPoints,0), @ActivityType))),'N/A') as PatronActivityCount
,@ActivityLabel as Activity,  p.PID as PatronID
from Patron p left outer join PatronReadingLog l
on p.PID = l.PID
left outer join Programs pg
on p.ProgID = pg.PID
where
p.TenID = @TenID AND
p.ProgID > 0
AND	(p.ProgID = @ProgId or @ProgId is null)
AND (p.PrimaryLibrary = @BranchID or @BranchID is null)
AND (rtrim(ltrim(isnull(p.SchoolName,''))) = @School or @School is null)
AND (rtrim(ltrim(isnull(p.District,''))) = @LibSys or @LibSys is null)

group by p.PID, p.Username, p.FirstName, p.LastName, pg.AdminName, p.ProgID
order by pg.AdminName, p.FirstName, p.LastName

GO

/****** Object:  StoredProcedure [dbo].[rpt_RegistrationStats]    Script Date: 12/05/2014 14:24:58 ******/

GO


GO

CREATE procedure [dbo].[rpt_RegistrationStats]
@ProgId int = null
,@BranchID int = null
,@School varchar(50) = null
,@LibSys varchar(50) = null
,@TenID int = null
as
select ProgID, pg.AdminName
, case
when DOB IS NOT NULL then FLOOR((CAST (GetDate() AS INTEGER) - CAST(DOB AS INTEGER)) / 365.25)
else
case
when Age IS NOT NULL then Age
else 0
end
end as Age
, Sum(case isnull(Gender,'') when 'M' then 1 else 0 end) as Male
, Sum(case isnull(Gender,'') when 'F' then 1 else 0 end) as Female
, Sum(case isnull(Gender,'') when 'O' then 1 else 0 end) as Other
, Sum(case isnull(Gender,'') when 'F' then 0 when 'M' then 0  when 'O' then 0  else 1 end) as NA

from Patron left join Programs pg
on ProgID = pg.PID
where
Patron.TenID = @TenID AND
ProgID > 0
AND	(ProgID = @ProgId or @ProgId is null)
AND (PrimaryLibrary = @BranchID or @BranchID is null)
AND (rtrim(ltrim(isnull(SchoolName,''))) = @School or @School is null)
AND (rtrim(ltrim(isnull(District,''))) = @LibSys or @LibSys is null)
group by ProgID, AdminName,
case
when DOB IS NOT NULL then FLOOR((CAST (GetDate() AS INTEGER) - CAST(DOB AS INTEGER)) / 365.25)
else
case
when Age IS NOT NULL then Age
else 0
end
end
order by ProgID, Age

GO

/****** Object:  StoredProcedure [dbo].[rpt_TenantReport]    Script Date: 12/05/2014 14:24:58 ******/

GO


GO

CREATE  procedure [dbo].[rpt_TenantReport]
@IncSummary bit  = 0
as
SET ARITHABORT  OFF;
SET ANSI_WARNINGS OFF;
select
t.Name as Organization
, ISNULL((select COUNT(1) from Programs x where x.TenID = t.TenID),0) as [# Programs]
, ISNULL((select COUNT(1) from Patron x where x.TenID = t.TenID),0) as [# Patrons]
, ISNULL((select COUNT(1) from Patron x where x.TenID = t.TenID and [dbo].[fx_IsFinisher](x.PID, x.ProgID) = 1 ),0) as [# Finishers]
, ISNULL((select COUNT(1) from Patron y join PatronBadges x on y.PID = x.PID where y.TenID = t.TenID ),0) as [# Badges]
, ISNULL((select COUNT(1) from Patron x where x.TenID = t.TenID and Gender='M'),0) as [Male Participation]
, ISNULL((select COUNT(1) from Patron x where x.TenID = t.TenID and Gender='F'),0) as [Female Participation]
, ISNULL((select Sum(NumPoints) from Patron y join PatronPoints x on y.PID = x.PID where y.TenID = t.TenID and x.isReading = 1 ),0) as [# Reading Points]
, ISNULL((select Sum(NumPoints) from Patron y join PatronPoints x on y.PID = x.PID where y.TenID = t.TenID  ),0) as [# Total Points]
, ISNULL((select
Sum( dbo.fx_ConvertPoints(y.ProgID, isnull(NumPoints,0),  3)) from Patron y join PatronPoints x on y.PID = x.PID where y.TenID = t.TenID and x.isReading = 1 ),0) as [# Reading Minutes]
from Tenant t
union
select
'TOTAL: '
, ISNULL((select COUNT(1) from Programs x ),0) as [# Programs]
, ISNULL((select COUNT(1) from Patron x ),0) as [# Patrons]
, ISNULL((select COUNT(1) from Patron x where [dbo].[fx_IsFinisher](x.PID, x.ProgID) = 1 ),0) as [# Finishers]
, ISNULL((select COUNT(1) from Patron y join PatronBadges x on y.PID = x.PID ),0) as [# Badges]
, ISNULL((select COUNT(1) from Patron x where Gender='M'),0) as [Male Participation]
, ISNULL((select COUNT(1) from Patron x where Gender='F'),0) as [Female Participation]
, ISNULL((select Sum(NumPoints) from Patron y join PatronPoints x on y.PID = x.PID where x.isReading = 1 ),0) as [# Reading Points]
, ISNULL((select Sum(NumPoints) from Patron y join PatronPoints x on y.PID = x.PID ),0) as [# Total Points]
, ISNULL((select
Sum( dbo.fx_ConvertPoints(y.ProgID, isnull(NumPoints,0),  3)) from Patron y join PatronPoints x on y.PID = x.PID where  x.isReading = 1 ),0) as [# Reading Minutes]
where @IncSummary = 1

GO

/****** Object:  StoredProcedure [dbo].[rpt_TenantSummaryReport]    Script Date: 12/05/2014 14:24:58 ******/

GO


GO

CREATE  procedure [dbo].[rpt_TenantSummaryReport]
@ProgId int = null
,@BranchID int = null
,@School varchar(50) = null
,@LibSys varchar(50) = null
,@TenID int  = 0
as
SET ARITHABORT  OFF;
SET ANSI_WARNINGS OFF;
select
ISNULL((select Value from SRPSettings x where x.TenID = t.TenID and Name = 'SysName'), 'Summer Reading Program') as SystemName
, ISNULL((select COUNT(1) from Patron x where x.TenID = t.TenID AND (x.ProgID = @ProgID or @ProgId is null) AND (x.PrimaryLibrary = @BranchID or @BranchID is null) AND (rtrim(ltrim(isnull(x.SchoolName,''))) = @School or @School is null) AND (rtrim(ltrim(isnull(x.District,''))) = @LibSys or @LibSys is null)   ),0) as [# Patrons]
, ISNULL((select COUNT(1) from Patron y join PatronBadges x on y.PID = x.PID where y.TenID = t.TenID AND (y.ProgID = @ProgID or @ProgId is null) AND (y.PrimaryLibrary = @BranchID or @BranchID is null) AND (rtrim(ltrim(isnull(y.SchoolName,''))) = @School or @School is null) AND (rtrim(ltrim(isnull(y.District,''))) = @LibSys or @LibSys is null)   ),0) as [# Badges]
, ISNULL((select COUNT(1) from Patron y join GamePlayStats x on y.PID = x.PID where y.TenID = t.TenID  AND (y.ProgID = @ProgID or @ProgId is null) AND (y.PrimaryLibrary = @BranchID or @BranchID is null) AND (rtrim(ltrim(isnull(y.SchoolName,''))) = @School or @School is null) AND (rtrim(ltrim(isnull(y.District,''))) = @LibSys or @LibSys is null)   ),0) as [# Games Played]
--, ISNULL((select COUNT(1) from Patron y join GamePlayStats x on y.PID = x.PID where y.TenID = t.TenID  and x.CompletedPlay  = 1),0) as [# Games Completed]
, ISNULL((select COUNT(1) from Patron y join PatronBookLists x on y.PID = x.PID where y.TenID = t.TenID AND HasReadFlag = 1 AND (y.ProgID = @ProgID or @ProgId is null) AND (y.PrimaryLibrary = @BranchID or @BranchID is null) AND (rtrim(ltrim(isnull(y.SchoolName,''))) = @School or @School is null) AND (rtrim(ltrim(isnull(y.District,''))) = @LibSys or @LibSys is null)   ),0) as [# Book Lists Completed]
, ISNULL((select COUNT(1) from Programs y join ProgramCodes x on y.PID = x.PID join Patron z on x.PatronId = z.PID where y.TenID = t.TenID AND isUsed = 1 AND (z.ProgID = @ProgID or @ProgId is null) AND (z.PrimaryLibrary = @BranchID or @BranchID is null) AND (rtrim(ltrim(isnull(z.SchoolName,''))) = @School or @School is null) AND (rtrim(ltrim(isnull(z.District,''))) = @LibSys or @LibSys is null)   ),0)
+
ISNULL((select COUNT(1) from Patron y join PatronPrizes x on y.PID = x.PID where y.TenID = t.TenID  and RedeemedFlag = 1 AND (y.ProgID = @ProgID or @ProgId is null) AND (y.PrimaryLibrary = @BranchID or @BranchID is null) AND (rtrim(ltrim(isnull(y.SchoolName,''))) = @School or @School is null) AND (rtrim(ltrim(isnull(y.District,''))) = @LibSys or @LibSys is null)   ),0) as [# Prizes Claimed]
, ISNULL((select
Sum( dbo.fx_ConvertPoints(y.ProgID, isnull(NumPoints,0),  3)) from Patron y join PatronPoints x on y.PID = x.PID where y.TenID = t.TenID and x.isReading = 1 AND (y.ProgID = @ProgID or @ProgId is null) AND (y.PrimaryLibrary = @BranchID or @BranchID is null) AND (rtrim(ltrim(isnull(y.SchoolName,''))) = @School or @School is null) AND (rtrim(ltrim(isnull(y.District,''))) = @LibSys or @LibSys is null)   ),0) as [# Reading Minutes]

, ISNULL((select COUNT(distinct Title) from Patron y join PatronReadingLog x on y.PID = x.PID where y.TenID = t.TenID AND (y.ProgID = @ProgID or @ProgId is null) AND (y.PrimaryLibrary = @BranchID or @BranchID is null) AND (rtrim(ltrim(isnull(y.SchoolName,''))) = @School or @School is null) AND (rtrim(ltrim(isnull(y.District,''))) = @LibSys or @LibSys is null)   ),0) as [# Titles Read]
, ISNULL((select COUNT(distinct Title) from Patron y join PatronReadingLog x on y.PID = x.PID where y.TenID = t.TenID and HasReview = 1 AND (y.ProgID = @ProgID or @ProgId is null) AND (y.PrimaryLibrary = @BranchID or @BranchID is null) AND (rtrim(ltrim(isnull(y.SchoolName,''))) = @School or @School is null) AND (rtrim(ltrim(isnull(y.District,''))) = @LibSys or @LibSys is null)   ),0) as [# Titles Reviewed]

from Tenant t
where
t.TenID = @TenID


-- AND (x.ProgID = @ProgID or @ProgId is null) AND (x.PrimaryLibrary = @BranchID or @BranchID is null) AND (rtrim(ltrim(isnull(x.SchoolName,''))) = @School or @School is null) AND (rtrim(ltrim(isnull(x.District,''))) = @LibSys or @LibSys is null)
-- AND (y.ProgID = @ProgID or @ProgId is null) AND (y.PrimaryLibrary = @BranchID or @BranchID is null) AND (rtrim(ltrim(isnull(y.SchoolName,''))) = @School or @School is null) AND (rtrim(ltrim(isnull(y.District,''))) = @LibSys or @LibSys is null)
GO

/****** Object:  StoredProcedure [dbo].[uspSplitIntegerList]    Script Date: 12/05/2014 14:24:58 ******/

GO


GO


CREATE PROCEDURE [dbo].[uspSplitIntegerList]
@list_integers			text
AS

SET NOCOUNT ON

DECLARE @InputLen			integer			-- input text length
DECLARE @TextPos			integer			-- current position within input text
DECLARE @Chunk				varchar(8000)	-- chunk within input text
DECLARE @ChunkPos			integer			-- current position within chunk
DECLARE @DelimPos			integer			-- position of delimiter
DECLARE @ChunkLen			integer			-- chunk length
DECLARE @DelimLen			integer			-- delimiter length
DECLARE @Delimiter      varchar(3)		-- delimiter
DECLARE @ItemBegPos		integer			-- item starting position in text
DECLARE @ItemOrder		integer			-- item order in list

-- ALTER table to hold list items
-- actually their positions because we may want to scrub this list eliminating bad entries before substring is applied
CREATE TABLE #list_items ( item_order integer, item_begpos integer, item_endpos integer )

-- process list
IF @list_integers IS NOT NULL
BEGIN

-- initialize
-- notice that this loop assumes a delimiter length of 1
-- if the delimiter is longer we have to deal with stuff like delimiters straddling the chunk boundaries
SET @InputLen = DATALENGTH(@list_integers)
SET @TextPos = 1
SET @Delimiter = ','
SET @DelimLen = DATALENGTH(@Delimiter)
SET @ItemBegPos = 1
SET @ItemOrder = 1
SET @ChunkLen = 1

-- cycle through input processing chunks
WHILE @TextPos <= @InputLen AND @ChunkLen <> 0
BEGIN

-- get current chunk
SET @Chunk = SUBSTRING(@list_integers, @TextPos, 8000)

-- setup initial variable values
SET @ChunkPos = 1
SET @ChunkLen = DATALENGTH(@Chunk)
SET @DelimPos = CHARINDEX(@Delimiter, @Chunk, @ChunkPos)

-- loop over the chunk, until the last delimiter
WHILE @ChunkPos <= @ChunkLen AND @DelimPos <> 0
BEGIN

-- insert position
INSERT INTO #list_items (item_order, item_begpos, item_endpos)
VALUES (@ItemOrder, @ItemBegPos, (@TextPos + @DelimPos - 1) - 1)

-- adjust positions
SET @ItemOrder = @ItemOrder + 1
SET @ItemBegPos = (@TextPos + @DelimPos - 1) + @DelimLen
SET @ChunkPos = @DelimPos + @DelimLen

-- find next delimiter
SET @DelimPos = CHARINDEX(@Delimiter, @Chunk, @ChunkPos)

END

-- adjust positions
SET @TextPos = @TextPos + @ChunkLen

END

-- handle last item
IF @ItemBegPos <= @InputLen
BEGIN

-- insert position
INSERT INTO #list_items (item_order, item_begpos, item_endpos)
VALUES (@ItemOrder, @ItemBegPos, @InputLen)

END

-- delete the bad items
DELETE FROM #list_items
WHERE item_endpos < item_begpos

   -- return list items
	SELECT CAST(SUBSTRING(@list_integers, item_begpos, (item_endpos - item_begpos + 1)) AS integer) AS item_integer, item_order, item_begpos, item_endpos
   FROM #list_items
   WHERE ISNUMERIC(SUBSTRING(@list_integers, item_begpos, (item_endpos - item_begpos + 1))) = 1
   ORDER BY item_order

   END

DROP TABLE #list_items 

RETURN


GO

    

INSERT INTO Tenant ([Name]
,[LandingName],[AdminName],[isActiveFlag],[isMasterFlag],[Description],[DomainName],[showNotifications],[showOffers]
,[showBadges],[showEvents],[NotificationsMenuText],[OffersMenuText],[BadgesMenuText],[EventsMenuText],[LastModDate]
,[LastModUser],[AddedDate],[AddedUser],[FldInt1],[FldInt2],[FldInt3],[FldBit1],[FldBit2],[FldBit3],[FldText1],[FldText2],[FldText3]
) VALUES (
 'READsquared Template','READsquared Template','READsquared Template', 1 , 1 ,'<p>READsquared Template</p>','www.readsquared.com'
, 0 , 0 , 0 , 0 ,'','','','',GETDATE(),'sysadmin',GETDATE(),'N/A', 0 , 0 , 0 , 0 , 0 , 0 ,'','','')

GO

INSERT INTO SRPPermissionsMaster ([PermissionID],[PermissionName],[PermissionDesc],[MODID]) VALUES (
1000 ,'Modify Security Permission','Allows a user to access any of the screens in the security module', NULL )

GO

INSERT INTO SRPPermissionsMaster ([PermissionID],[PermissionName],[PermissionDesc],[MODID]) VALUES (
2000 ,'Delete Program Permission','Allows a user to trigger the Purge Program functionality', NULL )

GO

INSERT INTO SRPPermissionsMaster ([PermissionID],[PermissionName],[PermissionDesc],[MODID]) VALUES (
2100 ,'Add Program Permission','Allows a user to create a new Program', NULL )

GO

INSERT INTO SRPPermissionsMaster ([PermissionID],[PermissionName],[PermissionDesc],[MODID]) VALUES (
2200 ,'Modify  Program Permission','Allows a user to create a new Program', NULL )

GO

INSERT INTO SRPPermissionsMaster ([PermissionID],[PermissionName],[PermissionDesc],[MODID]) VALUES (
3000 ,'System Setup Permission','Allows a user to access any of the screens used to perform the setup of the system', NULL )

GO

INSERT INTO SRPPermissionsMaster ([PermissionID],[PermissionName],[PermissionDesc],[MODID]) VALUES (
4000 ,'Drawings Management','Allows access to the respective maintenance screens.', NULL )

GO

INSERT INTO SRPPermissionsMaster ([PermissionID],[PermissionName],[PermissionDesc],[MODID]) VALUES (
4100 ,'Settings Management','Allows access to the respective maintenance screens.', NULL )

GO

INSERT INTO SRPPermissionsMaster ([PermissionID],[PermissionName],[PermissionDesc],[MODID]) VALUES (
4200 ,'Reports Management','Allows access to reports', NULL )

GO

INSERT INTO SRPPermissionsMaster ([PermissionID],[PermissionName],[PermissionDesc],[MODID]) VALUES (
4300 ,'Games Management','Allows access to the respective maintenance screens.', NULL )

GO

INSERT INTO SRPPermissionsMaster ([PermissionID],[PermissionName],[PermissionDesc],[MODID]) VALUES (
4400 ,'Book Lists Management','Allows access to the respective maintenance screens.', NULL )

GO

INSERT INTO SRPPermissionsMaster ([PermissionID],[PermissionName],[PermissionDesc],[MODID]) VALUES (
4500 ,'Events Management','Allows access to the respective maintenance screens.', NULL )

GO

INSERT INTO SRPPermissionsMaster ([PermissionID],[PermissionName],[PermissionDesc],[MODID]) VALUES (
4600 ,'Offers Management','Allows access to the respective maintenance screens.', NULL )

GO

INSERT INTO SRPPermissionsMaster ([PermissionID],[PermissionName],[PermissionDesc],[MODID]) VALUES (
4700 ,'Badges Management','Allows access to the respective maintenance screens.', NULL )

GO

INSERT INTO SRPPermissionsMaster ([PermissionID],[PermissionName],[PermissionDesc],[MODID]) VALUES (
4800 ,'Avatars Management','Allows access to the respective maintenance screens.', NULL )

GO

INSERT INTO SRPPermissionsMaster ([PermissionID],[PermissionName],[PermissionDesc],[MODID]) VALUES (
4900 ,'Awards Management','Allows access to the respective maintenance screens.', NULL )

GO

INSERT INTO SRPPermissionsMaster ([PermissionID],[PermissionName],[PermissionDesc],[MODID]) VALUES (
5000 ,'Notifications Management','Allows access to the respective maintenance screens.', NULL )

GO

INSERT INTO SRPPermissionsMaster ([PermissionID],[PermissionName],[PermissionDesc],[MODID]) VALUES (
5100 ,'Patrons Management','Allows access to the respective maintenance screens.', NULL )

GO

INSERT INTO SRPPermissionsMaster ([PermissionID],[PermissionName],[PermissionDesc],[MODID]) VALUES (
5200 ,'Test Management','Allows access to the respective maintenance screens.', NULL )

GO

INSERT INTO SRPPermissionsMaster ([PermissionID],[PermissionName],[PermissionDesc],[MODID]) VALUES (
5300 ,'Reviews Management','Allows access to the respective maintenance screens.', NULL )

GO

INSERT INTO SRPPermissionsMaster ([PermissionID],[PermissionName],[PermissionDesc],[MODID]) VALUES (
8000 ,'Master Tenant Administrator','Allows access to the tenant maintenance screens.', NULL )

GO

INSERT INTO SRPSettings ([Name],[Value],[StorageType],[EditType],[ModID],[Label],[Description],[ValueList],[DefaultValue],[TenID],[FldInt1],[FldInt2],[FldInt3],[FldBit1],[FldBit2],[FldBit3],[FldText1],[FldText2],[FldText3]) VALUES (
'SysName','READsquared Summer Reading Program','Text','TextBox', 0 ,'System Name','Friendly name given to the application','',''
, 1 , 0 , 0 , 0 , 0 , 0 , 0 ,'','','')

GO

INSERT INTO SRPSettings ([Name],[Value],[StorageType],[EditType],[ModID],[Label],[Description],[ValueList],[DefaultValue],[TenID],[FldInt1],[FldInt2],[FldInt3],[FldBit1],[FldBit2],[FldBit3],[FldText1],[FldText2],[FldText3]) VALUES (
'ContactEmail','bjonson@stglink.com','Text','TextBox', 0 ,'Contact Email Address','The user exposed contact us email address','',''
, 1 , 0 , 0 , 0 , 0 , 0 , 0 ,'','','')

GO

INSERT INTO SRPSettings ([Name],[Value],[StorageType],[EditType],[ModID],[Label],[Description],[ValueList],[DefaultValue],[TenID],[FldInt1],[FldInt2],[FldInt3],[FldBit1],[FldBit2],[FldBit3],[FldText1],[FldText2],[FldText3]) VALUES (
'ContactName','Bob Jonson','Text','TextBox', 0 ,'Contact Name','The name associated with the contact email address.','',''
, 1 , 0 , 0 , 0 , 0 , 0 , 0 ,'','','')

GO

INSERT INTO SRPSettings ([Name],[Value],[StorageType],[EditType],[ModID],[Label],[Description],[ValueList],[DefaultValue],[TenID],[FldInt1],[FldInt2],[FldInt3],[FldBit1],[FldBit2],[FldBit3],[FldText1],[FldText2],[FldText3]) VALUES (
'FromEmailName','Webmaster','Text','TextBox', 0 ,'From Email Name','Name of the person impersonated in system generated messages (e.g. Webmaster)','',''
, 1 , 0 , 0 , 0 , 0 , 0 , 0 ,'','','')

GO

INSERT INTO SRPSettings ([Name],[Value],[StorageType],[EditType],[ModID],[Label],[Description],[ValueList],[DefaultValue],[TenID],[FldInt1],[FldInt2],[FldInt3],[FldBit1],[FldBit2],[FldBit3],[FldText1],[FldText2],[FldText3]) VALUES (
'FromEmailAddress','bjonson@stglink.com','Text','TextBox', 0 ,'From Email Address','System generated messages email address ','',''
, 1 , 0 , 0 , 0 , 0 , 0 , 0 ,'','','')

GO

INSERT INTO SRPSettings ([Name],[Value],[StorageType],[EditType],[ModID],[Label],[Description],[ValueList],[DefaultValue],[TenID],[FldInt1],[FldInt2],[FldInt3],[FldBit1],[FldBit2],[FldBit3],[FldText1],[FldText2],[FldText3]) VALUES (
'PageSize','10','int','TextBox', 0 ,'# of Items Per Page','Page Size','','5'
, 1 , 0 , 0 , 0 , 0 , 0 , 0 ,'','','')

GO


INSERT INTO SRPSettings ([Name],[Value],[StorageType],[EditType],[ModID],[Label],[Description],[ValueList],[DefaultValue],[TenID],[FldInt1],[FldInt2],[FldInt3],[FldBit1],[FldBit2],[FldBit3],[FldText1],[FldText2],[FldText3]) VALUES (
'MaxPtsDay','500','int','TextBox', 0 ,'Max Points Per Day','Maximum Points/Day allowed for logging','','500'
, 1 , 0 , 0 , 0 , 0 , 0 , 0 ,'','','')

GO

INSERT INTO SRPSettings ([Name],[Value],[StorageType],[EditType],[ModID],[Label],[Description],[ValueList],[DefaultValue],[TenID],[FldInt1],[FldInt2],[FldInt3],[FldBit1],[FldBit2],[FldBit3],[FldText1],[FldText2],[FldText3]) VALUES (
'MaxMin','60','int','TextBox', 0 ,'Max Log Min/Entry','Maximum Minutes/Entry allowed for logging','','60'
, 1 , 0 , 0 , 0 , 0 , 0 , 0 ,'','','')

GO

INSERT INTO SRPSettings ([Name],[Value],[StorageType],[EditType],[ModID],[Label],[Description],[ValueList],[DefaultValue],[TenID],[FldInt1],[FldInt2],[FldInt3],[FldBit1],[FldBit2],[FldBit3],[FldText1],[FldText2],[FldText3]) VALUES (
'MaxBook','2','int','TextBox', 0 ,'Max Log Books/Entry','Maximum Books/Entry allowed for logging','','5'
, 1 , 0 , 0 , 0 , 0 , 0 , 0 ,'','','')

GO

INSERT INTO SRPSettings ([Name],[Value],[StorageType],[EditType],[ModID],[Label],[Description],[ValueList],[DefaultValue],[TenID],[FldInt1],[FldInt2],[FldInt3],[FldBit1],[FldBit2],[FldBit3],[FldText1],[FldText2],[FldText3]) VALUES (
'MaxPage','90','int','TextBox', 0 ,'Max Log Page/Entry','Maximum Page/Entry allowed for logging','','100'
, 1 , 0 , 0 , 0 , 0 , 0 , 0 ,'','','')

GO

INSERT INTO SRPSettings ([Name]
,[Value],[StorageType],[EditType],[ModID],[Label],[Description],[ValueList],[DefaultValue]
,[TenID],[FldInt1],[FldInt2],[FldInt3],[FldBit1],[FldBit2],[FldBit3],[FldText1],[FldText2],[FldText3]) VALUES (
'DupEvtCodes','False','int','Checkbox', 0 ,'Duplicate Secret Codes','Whether or not duplicate secret codes are allowed','',''
, 1 , 0 , 0 , 0 , 0 , 0 , 0 ,'','','')

GO

INSERT INTO SRPSettings ([Name]
,[Value],[StorageType],[EditType],[ModID],[Label],[Description],[ValueList],[DefaultValue]
,[TenID],[FldInt1],[FldInt2],[FldInt3],[FldBit1],[FldBit2],[FldBit3],[FldText1],[FldText2],[FldText3]) VALUES (
'FBReviewOn','True','int','Checkbox', 0 ,'Facebook Book Reviews<br>
  Are Enabled','Whether or not posting book reviews to Facebook is allowed','','False', 1 , 0 , 0 , 0 , 0 , 0 , 0 ,'','','')

  GO

  GO

  INSERT INTO CodeType ([isSystem],[CodeTypeName],[Description]
  ,[TenID],[FldInt1],[FldInt2],[FldInt3],[FldBit1],[FldBit2],[FldBit3],[FldText1],[FldText2],[FldText3]) VALUES (
  1 ,'Branch' ,'Library Branches', 1 , 0 , 0 , 0 , 0 , 0 , 0 ,'','','')

  GO

  INSERT INTO CodeType ([isSystem],[CodeTypeName],[Description]
  ,[TenID],[FldInt1],[FldInt2],[FldInt3],[FldBit1],[FldBit2],[FldBit3],[FldText1],[FldText2],[FldText3]) VALUES (
  1 ,'Library District' ,'Library District', 1 , 0 , 0 , 0 , 0 , 0 , 0 ,'','','')

  GO

  INSERT INTO CodeType ([isSystem],[CodeTypeName],[Description]
  ,[TenID],[FldInt1],[FldInt2],[FldInt3],[FldBit1],[FldBit2],[FldBit3],[FldText1],[FldText2],[FldText3]) VALUES (
  1 ,'School Type' ,'Types of schools', 1 , 0 , 0 , 0 , 0 , 0 , 0 ,'','','')

  GO

  INSERT INTO CodeType ([isSystem],[CodeTypeName],[Description]
  ,[TenID],[FldInt1],[FldInt2],[FldInt3],[FldBit1],[FldBit2],[FldBit3],[FldText1],[FldText2],[FldText3]) VALUES (
  1 ,'School' ,'School Names', 1 , 0 , 0 , 0 , 0 , 0 , 0 ,'','','')

  GO

  INSERT INTO CodeType ([isSystem],[CodeTypeName],[Description]
  ,[TenID],[FldInt1],[FldInt2],[FldInt3],[FldBit1],[FldBit2],[FldBit3],[FldText1],[FldText2],[FldText3]) VALUES (
  1 ,'School District' ,'School District Names', 1 , 0 , 0 , 0 , 0 , 0 , 0 ,'','','')

  GO

  INSERT INTO CodeType ([isSystem],[CodeTypeName],[Description]
  ,[TenID],[FldInt1],[FldInt2],[FldInt3],[FldBit1],[FldBit2],[FldBit3],[FldText1],[FldText2],[FldText3]) VALUES (
  1 ,'Badge Category','Badge Category', 1 , 0 , 0 , 0 , 0 , 0 , 0 ,'','','')

  GO

  INSERT INTO CodeType ([isSystem],[CodeTypeName],[Description]
  ,[TenID],[FldInt1],[FldInt2],[FldInt3],[FldBit1],[FldBit2],[FldBit3],[FldText1],[FldText2],[FldText3]) VALUES (
  1 ,'Badge Age Group','Badge Age Group', 1 , 0 , 0 , 0 , 0 , 0 , 0 ,'','','')

  GO

  INSERT INTO CodeType ([isSystem],[CodeTypeName],[Description]
  ,[TenID],[FldInt1],[FldInt2],[FldInt3],[FldBit1],[FldBit2],[FldBit3],[FldText1],[FldText2],[FldText3]) VALUES (
  1 ,'Badge Location' ,'Badge Location', 1 , 0 , 0 , 0 , 0 , 0 , 0 ,'','','')

  GO

  INSERT INTO CustomEventFields ([Use1],[Label1],[DDValues1],[Use2],[Use3],[Label2],[Label3],[DDValues2],[DDValues3],[LastModDate],[LastModUser],[AddedDate],[AddedUser]
  ,[TenID],[FldInt1],[FldInt2],[FldInt3],[FldBit1],[FldBit2],[FldBit3],[FldText1],[FldText2],[FldText3]) VALUES (
  0 ,'Custom 1','', 0 , 0 ,'Custom 2','Custom 3','','',getdate(),'sysadmin',GETDATE(),'N/A'
  , 1 , 0 , 0 , 0 , 0 , 0 , 0 ,'','','')

  INSERT INTO CustomRegistrationFields ([Use1],[Label1],[DDValues1],[Use2],[Use3],[Use4],[Use5],[Label2],[Label3],[Label4],[Label5],[DDValues2],[DDValues3],[DDValues4],[DDValues5],[LastModDate],[LastModUser],[AddedDate],[AddedUser]
  ,[TenID],[FldInt1],[FldInt2],[FldInt3],[FldBit1],[FldBit2],[FldBit3],[FldText1],[FldText2],[FldText3]) VALUES (
  1 ,'Custom 1','1', 0 , 0 , 0 , 0 ,'','','','','','','','',getdate(),'sysadmin',getdate(),'N/A'
  , 1 , 0 , 0 , 0 , 0 , 0 , 0 ,'','','')

  GO

  INSERT INTO RegistrationSettings ([Literacy1Label]
  ,[Literacy2Label]
  ,[DOB_Prompt]
  ,[Age_Prompt]
  ,[SchoolGrade_Prompt]
  ,[FirstName_Prompt]
  ,[MiddleName_Prompt]
  ,[LastName_Prompt]
  ,[Gender_Prompt]
  ,[EmailAddress_Prompt]
  ,[PhoneNumber_Prompt]
  ,[StreetAddress1_Prompt]
  ,[StreetAddress2_Prompt]
  ,[City_Prompt]
  ,[State_Prompt]
  ,[ZipCode_Prompt]
  ,[Country_Prompt]
  ,[County_Prompt]
  ,[ParentGuardianFirstName_Prompt]
  ,[ParentGuardianLastName_Prompt]
  ,[ParentGuardianMiddleName_Prompt]
  ,[PrimaryLibrary_Prompt]
  ,[LibraryCard_Prompt]
  ,[SchoolName_Prompt]
  ,[District_Prompt]
  ,[Teacher_Prompt]
  ,[GroupTeamName_Prompt]
  ,[SchoolType_Prompt]
  ,[LiteracyLevel1_Prompt]
  ,[LiteracyLevel2_Prompt]
  ,[ParentPermFlag_Prompt]
  ,[Over18Flag_Prompt]
  ,[ShareFlag_Prompt]
  ,[TermsOfUseflag_Prompt]
  ,[Custom1_Prompt]
  ,[Custom2_Prompt]
  ,[Custom3_Prompt]
  ,[Custom4_Prompt]
  ,[Custom5_Prompt]
  ,[DOB_Req]
  ,[Age_Req]
  ,[SchoolGrade_Req]
  ,[FirstName_Req]
  ,[MiddleName_Req]
  ,[LastName_Req]
  ,[Gender_Req]
  ,[EmailAddress_Req]
  ,[PhoneNumber_Req]
  ,[StreetAddress1_Req]
  ,[StreetAddress2_Req]
  ,[City_Req]
  ,[State_Req]
  ,[ZipCode_Req]
  ,[Country_Req]
  ,[County_Req]
  ,[ParentGuardianFirstName_Req]
  ,[ParentGuardianLastName_Req]
  ,[ParentGuardianMiddleName_Req]
  ,[PrimaryLibrary_Req]
  ,[LibraryCard_Req]
  ,[SchoolName_Req]
  ,[District_Req]
  ,[Teacher_Req]
  ,[GroupTeamName_Req]
  ,[SchoolType_Req]
  ,[LiteracyLevel1_Req]
  ,[LiteracyLevel2_Req]
  ,[ParentPermFlag_Req]
  ,[Over18Flag_Req]
  ,[ShareFlag_Req]
  ,[TermsOfUseflag_Req]
  ,[Custom1_Req]
  ,[Custom2_Req]
  ,[Custom3_Req]
  ,[Custom4_Req]
  ,[Custom5_Req]
  ,[DOB_Show]
  ,[Age_Show]
  ,[SchoolGrade_Show]
  ,[FirstName_Show]
  ,[MiddleName_Show]
  ,[LastName_Show]
  ,[Gender_Show]
  ,[EmailAddress_Show]
  ,[PhoneNumber_Show]
  ,[StreetAddress1_Show]
  ,[StreetAddress2_Show]
  ,[City_Show]
  ,[State_Show]
  ,[ZipCode_Show]
  ,[Country_Show]
  ,[County_Show]
  ,[ParentGuardianFirstName_Show]
  ,[ParentGuardianLastName_Show]
  ,[ParentGuardianMiddleName_Show]
  ,[PrimaryLibrary_Show]
  ,[LibraryCard_Show]
  ,[SchoolName_Show]
  ,[District_Show]
  ,[Teacher_Show]
  ,[GroupTeamName_Show]
  ,[SchoolType_Show]
  ,[LiteracyLevel1_Show]
  ,[LiteracyLevel2_Show]
  ,[ParentPermFlag_Show]
  ,[Over18Flag_Show]
  ,[ShareFlag_Show]
  ,[TermsOfUseflag_Show]
  ,[Custom1_Show]
  ,[Custom2_Show]
  ,[Custom3_Show]
  ,[Custom4_Show]
  ,[Custom5_Show]
  ,[DOB_Edit]
  ,[Age_Edit]
  ,[SchoolGrade_Edit]
  ,[FirstName_Edit]
  ,[MiddleName_Edit]
  ,[LastName_Edit]
  ,[Gender_Edit]
  ,[EmailAddress_Edit]
  ,[PhoneNumber_Edit]
  ,[StreetAddress1_Edit]
  ,[StreetAddress2_Edit]
  ,[City_Edit]
  ,[State_Edit]
  ,[ZipCode_Edit]
  ,[Country_Edit]
  ,[County_Edit]
  ,[ParentGuardianFirstName_Edit]
  ,[ParentGuardianLastName_Edit]
  ,[ParentGuardianMiddleName_Edit]
  ,[PrimaryLibrary_Edit]
  ,[LibraryCard_Edit]
  ,[SchoolName_Edit]
  ,[District_Edit]
  ,[Teacher_Edit]
  ,[GroupTeamName_Edit]
  ,[SchoolType_Edit]
  ,[LiteracyLevel1_Edit]
  ,[LiteracyLevel2_Edit]
  ,[ParentPermFlag_Edit]
  ,[Over18Flag_Edit]
  ,[ShareFlag_Edit]
  ,[TermsOfUseflag_Edit]
  ,[Custom1_Edit]
  ,[Custom2_Edit]
  ,[Custom3_Edit]
  ,[Custom4_Edit]
  ,[Custom5_Edit]
  ,[LastModDate]
  ,[LastModUser]
  ,[AddedDate]
  ,[AddedUser]
  ,[SDistrict_Prompt]
  ,[SDistrict_Req]
  ,[SDistrict_Show]
  ,[SDistrict_Edit]
  ,[TenID]
  ,[FldInt1]
  ,[FldInt2]
  ,[FldInt3]
  ,[FldBit1]
  ,[FldBit2]
  ,[FldBit3]
  ,[FldText1]
  ,[FldText2]
  ,[FldText3]
  ) VALUES (
  'AR Level'
  ,'Lexile Level'
  , 0
  , 1
  , 0
  , 1
  , 0
  , 1
  , 1
  , 1
  , 1
  , 0
  , 0
  , 1
  , 1
  , 1
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 1
  , 0
  , 0
  , 1
  , 0
  , 0
  , 1
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 1
  , 0
  , 1
  , 0
  , 1
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 1
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 1
  , 0
  , 0
  , 1
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 1
  , 0
  , 1
  , 0
  , 1
  , 1
  , 1
  , 1
  , 0
  , 0
  , 1
  , 1
  , 1
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 1
  , 0
  , 0
  , 0
  , 0
  , 0
  , 1
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 1
  , 0
  , 1
  , 0
  , 1
  , 1
  , 1
  , 1
  , 0
  , 0
  , 0
  , 0
  , 1
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 1
  , 0
  , 0
  , 0
  , 0
  , 0
  , 1
  , 0
  , 0
  , 0
  , 0
  , 0
  ,GETDATE()
  ,'bjonson99'
  ,GETDATE()
  ,'N/A'
  , 0
  , 0
  , 0
  , 0
  , 1
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  ,''
  ,''
  ,''
  )

  GO

  INSERT INTO SRPGroups ([GroupName],[GroupDescription],[LastModDate],[LastModUser],[AddedDate],[AddedUser]
  ,[TenID],[FldInt1],[FldInt2],[FldInt3],[FldBit1],[FldBit2],[FldBit3],[FldText1],[FldText2],[FldText3]
  ) VALUES (
  'Administrator','Full Access',GETDATE(),'sysadmin',GETDATE(),'N/A'
  , 1 , 0 , 0 , 0 , 0 , 0 , 0 ,'','',''
  )

  GO

  INSERT INTO SRPUser ([Username],[Password],[FirstName],[LastName],[EmailAddress],[Division],[Department],[Title],[IsActive],[MustResetPassword],[IsDeleted],[LastPasswordReset],[DeletedDate],[LastModDate],[LastModUser],[AddedDate],[AddedUser]
  ,[TenID],[FldInt1],[FldInt2],[FldInt3],[FldBit1],[FldBit2],[FldBit3],[FldText1],[FldText2],[FldText3]
  ) VALUES (
  'sysadmin','changeme05!','System','Administrator','bjonson@stglink.com','','','', 1 , 1 , 0 ,GETDATE(),NULL,GETDATE(),'sysadmin',GETDATE(),'N/A'
  , 1 , 0 , 0 , 0 , 0 , 0 , 0 ,'','',''
  )

  GO

  INSERT INTO SRPUserGroups ([UID], [GID], [AddedDate], [AddedUser] )
  SELECT UID, GID, getdate(),'sysadmin' from SRPUser full join SRPGroups on 1=1

  GO

  INSERT INTO SRPGroupPermissions ([GID],[PermissionID],[AddedDate],[AddedUser])
  SELECT GID,PermissionID, getdate(),'sysadmin' from SRPGroups full join SRPPermissionsMaster on 1=1

  GO

  INSERT INTO Programs ([AdminName],[Title],[TabName],[POrder],[IsActive],[IsHidden],[StartDate],[EndDate],[MaxAge],[MaxGrade],[LoggingStart],[LoggingEnd],[ParentalConsentFlag],[ParentalConsentText]
  ,[PatronReviewFlag],[LogoutURL],[ProgramGameID],[HTML1],[HTML2],[HTML3],[HTML4],[HTML5],[HTML6],[BannerImage],[RegistrationBadgeID],[LastModUser],[AddedDate],[AddedUser],[LastModDate]
  ,[TenID],[FldInt1],[FldInt2],[FldInt3],[FldBit1],[FldBit2],[FldBit3],[FldText1],[FldText2],[FldText3]
  ,[PreTestID],[PostTestID],[PreTestMandatory],[PretestEndDate],[PostTestStartDate]
  ) VALUES (
  'Sample Program 1','Sample 1','Sample 1', 1 , 1 , 0 ,'Jan  1 2010 12:00AM','Dec 31 2500 12:00AM'
  , 4 , 12 ,'Jan  1 2010 12:00AM','Dec 31 2500 12:00AM'
  , 0 ,'<p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Vivamus sed malesuada augue. Aenean nec aliquam risus. Mauris sit amet eros aliquet, placerat sem non, viverra augue. Phasellus dignissim, erat sed sollicitudin convallis, enim felis elementum justo, eget molestie arcu nisl sit amet urna. Quisque a justo dignissim, tincidunt turpis quis, rhoncus augue. Nunc non porttitor orci. Ut vestibulum gravida enim, ut pharetra enim aliquam quis. Nulla mollis, mauris id interdum elementum, diam orci dapibus turpis, et consectetur turpis diam scelerisque lorem. Ut sit amet odio enim. Nullam varius turpis vel malesuada eleifend. Aliquam at semper ligula. Sed sed interdum dolor, ac condimentum nulla.</p>'
  , 1 ,'', 0
  ,'<p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Vivamus sed malesuada augue. Aenean nec aliquam risus. Mauris sit amet eros aliquet, placerat sem non, viverra augue. Phasellus dignissim, erat sed sollicitudin convallis, enim felis elementum justo, eget molestie arcu nisl sit amet urna. Quisque a justo dignissim, tincidunt turpis quis, rhoncus augue. Nunc non porttitor orci. Ut vestibulum gravida enim, ut pharetra enim aliquam quis. Nulla mollis, mauris id interdum elementum, diam orci dapibus turpis, et consectetur turpis diam scelerisque lorem. Ut sit amet odio enim. Nullam varius turpis vel malesuada eleifend. Aliquam at semper ligula. Sed sed interdum dolor, ac condimentum nulla.</p>'
  ,'<p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Vivamus sed malesuada augue. Aenean nec aliquam risus. Mauris sit amet eros aliquet, placerat sem non, viverra augue. Phasellus dignissim, erat sed sollicitudin convallis, enim felis elementum justo, eget molestie arcu nisl sit amet urna. Quisque a justo dignissim, tincidunt turpis quis, rhoncus augue. Nunc non porttitor orci. Ut vestibulum gravida enim, ut pharetra enim aliquam quis. Nulla mollis, mauris id interdum elementum, diam orci dapibus turpis, et consectetur turpis diam scelerisque lorem. Ut sit amet odio enim. Nullam varius turpis vel malesuada eleifend. Aliquam at semper ligula. Sed sed interdum dolor, ac condimentum nulla.</p>'
  ,'<p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Vivamus sed malesuada augue. Aenean nec aliquam risus. Mauris sit amet eros aliquet, placerat sem non, viverra augue. Phasellus dignissim, erat sed sollicitudin convallis, enim felis elementum justo, eget molestie arcu nisl sit amet urna. Quisque a justo dignissim, tincidunt turpis quis, rhoncus augue. Nunc non porttitor orci. Ut vestibulum gravida enim, ut pharetra enim aliquam quis. Nulla mollis, mauris id interdum elementum, diam orci dapibus turpis, et consectetur turpis diam scelerisque lorem. Ut sit amet odio enim. Nullam varius turpis vel malesuada eleifend. Aliquam at semper ligula. Sed sed interdum dolor, ac condimentum nulla.</p>'
  ,'<p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Vivamus sed malesuada augue. Aenean nec aliquam risus. Mauris sit amet eros aliquet, placerat sem non, viverra augue. Phasellus dignissim, erat sed sollicitudin convallis, enim felis elementum justo, eget molestie arcu nisl sit amet urna. Quisque a justo dignissim, tincidunt turpis quis, rhoncus augue. Nunc non porttitor orci. Ut vestibulum gravida enim, ut pharetra enim aliquam quis. Nulla mollis, mauris id interdum elementum, diam orci dapibus turpis, et consectetur turpis diam scelerisque lorem. Ut sit amet odio enim. Nullam varius turpis vel malesuada eleifend. Aliquam at semper ligula. Sed sed interdum dolor, ac condimentum nulla.</p>'
  ,'<p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Vivamus sed malesuada augue. Aenean nec aliquam risus. Mauris sit amet eros aliquet, placerat sem non, viverra augue. Phasellus dignissim, erat sed sollicitudin convallis, enim felis elementum justo, eget molestie arcu nisl sit amet urna. Quisque a justo dignissim, tincidunt turpis quis, rhoncus augue. Nunc non porttitor orci. Ut vestibulum gravida enim, ut pharetra enim aliquam quis. Nulla mollis, mauris id interdum elementum, diam orci dapibus turpis, et consectetur turpis diam scelerisque lorem. Ut sit amet odio enim. Nullam varius turpis vel malesuada eleifend. Aliquam at semper ligula. Sed sed interdum dolor, ac condimentum nulla.</p>'
  ,'<p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Vivamus sed malesuada augue. Aenean nec aliquam risus. Mauris sit amet eros aliquet, placerat sem non, viverra augue. Phasellus dignissim, erat sed sollicitudin convallis, enim felis elementum justo, eget molestie arcu nisl sit amet urna. Quisque a justo dignissim, tincidunt turpis quis, rhoncus augue. Nunc non porttitor orci. Ut vestibulum gravida enim, ut pharetra enim aliquam quis. Nulla mollis, mauris id interdum elementum, diam orci dapibus turpis, et consectetur turpis diam scelerisque lorem. Ut sit amet odio enim. Nullam varius turpis vel malesuada eleifend. Aliquam at semper ligula. Sed sed interdum dolor, ac condimentum nulla.</p>'
  ,'', 0
  ,'sysadmin',GETDATE(),'N/A',GETDATE()
  , 1 , 0 , 0 , 0 , 0 , 0 , 0 ,'','',''
  , 0, 0, 0, GETDATE(), GETDATE()
  )

  GO

  INSERT INTO Programs ([AdminName],[Title],[TabName],[POrder],[IsActive],[IsHidden],[StartDate],[EndDate],[MaxAge],[MaxGrade],[LoggingStart],[LoggingEnd],[ParentalConsentFlag],[ParentalConsentText]
  ,[PatronReviewFlag],[LogoutURL],[ProgramGameID],[HTML1],[HTML2],[HTML3],[HTML4],[HTML5],[HTML6],[BannerImage],[RegistrationBadgeID],[LastModUser],[AddedDate],[AddedUser],[LastModDate]
  ,[TenID],[FldInt1],[FldInt2],[FldInt3],[FldBit1],[FldBit2],[FldBit3],[FldText1],[FldText2],[FldText3]
  ,[PreTestID],[PostTestID],[PreTestMandatory],[PretestEndDate],[PostTestStartDate]
  ) VALUES (
  'Sample Program 2','Sample 2','Sample 2', 2 , 1 , 0 ,'Jan  1 2010 12:00AM','Dec 31 2500 12:00AM'
  , 12 , 12 ,'Jan  1 2010 12:00AM','Dec 31 2500 12:00AM'
  , 0 ,'<p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Vivamus sed malesuada augue. Aenean nec aliquam risus. Mauris sit amet eros aliquet, placerat sem non, viverra augue. Phasellus dignissim, erat sed sollicitudin convallis, enim felis elementum justo, eget molestie arcu nisl sit amet urna. Quisque a justo dignissim, tincidunt turpis quis, rhoncus augue. Nunc non porttitor orci. Ut vestibulum gravida enim, ut pharetra enim aliquam quis. Nulla mollis, mauris id interdum elementum, diam orci dapibus turpis, et consectetur turpis diam scelerisque lorem. Ut sit amet odio enim. Nullam varius turpis vel malesuada eleifend. Aliquam at semper ligula. Sed sed interdum dolor, ac condimentum nulla.</p>'
  , 1 ,'', 0
  ,'<p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Vivamus sed malesuada augue. Aenean nec aliquam risus. Mauris sit amet eros aliquet, placerat sem non, viverra augue. Phasellus dignissim, erat sed sollicitudin convallis, enim felis elementum justo, eget molestie arcu nisl sit amet urna. Quisque a justo dignissim, tincidunt turpis quis, rhoncus augue. Nunc non porttitor orci. Ut vestibulum gravida enim, ut pharetra enim aliquam quis. Nulla mollis, mauris id interdum elementum, diam orci dapibus turpis, et consectetur turpis diam scelerisque lorem. Ut sit amet odio enim. Nullam varius turpis vel malesuada eleifend. Aliquam at semper ligula. Sed sed interdum dolor, ac condimentum nulla.</p>'
  ,'<p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Vivamus sed malesuada augue. Aenean nec aliquam risus. Mauris sit amet eros aliquet, placerat sem non, viverra augue. Phasellus dignissim, erat sed sollicitudin convallis, enim felis elementum justo, eget molestie arcu nisl sit amet urna. Quisque a justo dignissim, tincidunt turpis quis, rhoncus augue. Nunc non porttitor orci. Ut vestibulum gravida enim, ut pharetra enim aliquam quis. Nulla mollis, mauris id interdum elementum, diam orci dapibus turpis, et consectetur turpis diam scelerisque lorem. Ut sit amet odio enim. Nullam varius turpis vel malesuada eleifend. Aliquam at semper ligula. Sed sed interdum dolor, ac condimentum nulla.</p>'
  ,'<p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Vivamus sed malesuada augue. Aenean nec aliquam risus. Mauris sit amet eros aliquet, placerat sem non, viverra augue. Phasellus dignissim, erat sed sollicitudin convallis, enim felis elementum justo, eget molestie arcu nisl sit amet urna. Quisque a justo dignissim, tincidunt turpis quis, rhoncus augue. Nunc non porttitor orci. Ut vestibulum gravida enim, ut pharetra enim aliquam quis. Nulla mollis, mauris id interdum elementum, diam orci dapibus turpis, et consectetur turpis diam scelerisque lorem. Ut sit amet odio enim. Nullam varius turpis vel malesuada eleifend. Aliquam at semper ligula. Sed sed interdum dolor, ac condimentum nulla.</p>'
  ,'<p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Vivamus sed malesuada augue. Aenean nec aliquam risus. Mauris sit amet eros aliquet, placerat sem non, viverra augue. Phasellus dignissim, erat sed sollicitudin convallis, enim felis elementum justo, eget molestie arcu nisl sit amet urna. Quisque a justo dignissim, tincidunt turpis quis, rhoncus augue. Nunc non porttitor orci. Ut vestibulum gravida enim, ut pharetra enim aliquam quis. Nulla mollis, mauris id interdum elementum, diam orci dapibus turpis, et consectetur turpis diam scelerisque lorem. Ut sit amet odio enim. Nullam varius turpis vel malesuada eleifend. Aliquam at semper ligula. Sed sed interdum dolor, ac condimentum nulla.</p>'
  ,'<p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Vivamus sed malesuada augue. Aenean nec aliquam risus. Mauris sit amet eros aliquet, placerat sem non, viverra augue. Phasellus dignissim, erat sed sollicitudin convallis, enim felis elementum justo, eget molestie arcu nisl sit amet urna. Quisque a justo dignissim, tincidunt turpis quis, rhoncus augue. Nunc non porttitor orci. Ut vestibulum gravida enim, ut pharetra enim aliquam quis. Nulla mollis, mauris id interdum elementum, diam orci dapibus turpis, et consectetur turpis diam scelerisque lorem. Ut sit amet odio enim. Nullam varius turpis vel malesuada eleifend. Aliquam at semper ligula. Sed sed interdum dolor, ac condimentum nulla.</p>'
  ,'<p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Vivamus sed malesuada augue. Aenean nec aliquam risus. Mauris sit amet eros aliquet, placerat sem non, viverra augue. Phasellus dignissim, erat sed sollicitudin convallis, enim felis elementum justo, eget molestie arcu nisl sit amet urna. Quisque a justo dignissim, tincidunt turpis quis, rhoncus augue. Nunc non porttitor orci. Ut vestibulum gravida enim, ut pharetra enim aliquam quis. Nulla mollis, mauris id interdum elementum, diam orci dapibus turpis, et consectetur turpis diam scelerisque lorem. Ut sit amet odio enim. Nullam varius turpis vel malesuada eleifend. Aliquam at semper ligula. Sed sed interdum dolor, ac condimentum nulla.</p>'
  ,'', 0
  ,'sysadmin',GETDATE(),'N/A',GETDATE()
  , 1 , 0 , 0 , 0 , 0 , 0 , 0 ,'','',''
  , 0, 0, 0, GETDATE(), GETDATE()
  )

  GO

  INSERT INTO Programs ([AdminName],[Title],[TabName],[POrder],[IsActive],[IsHidden],[StartDate],[EndDate],[MaxAge],[MaxGrade],[LoggingStart],[LoggingEnd],[ParentalConsentFlag],[ParentalConsentText]
  ,[PatronReviewFlag],[LogoutURL],[ProgramGameID],[HTML1],[HTML2],[HTML3],[HTML4],[HTML5],[HTML6],[BannerImage],[RegistrationBadgeID],[LastModUser],[AddedDate],[AddedUser],[LastModDate]
  ,[TenID],[FldInt1],[FldInt2],[FldInt3],[FldBit1],[FldBit2],[FldBit3],[FldText1],[FldText2],[FldText3]
  ,[PreTestID],[PostTestID],[PreTestMandatory],[PretestEndDate],[PostTestStartDate]
  ) VALUES (
  'Sample Program 2','Sample 2','Sample 2', 2 , 1 , 0 ,'Jan  1 2010 12:00AM','Dec 31 2500 12:00AM'
  , 99 , 12 ,'Jan  1 2010 12:00AM','Dec 31 2500 12:00AM'
  , 0 ,'<p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Vivamus sed malesuada augue. Aenean nec aliquam risus. Mauris sit amet eros aliquet, placerat sem non, viverra augue. Phasellus dignissim, erat sed sollicitudin convallis, enim felis elementum justo, eget molestie arcu nisl sit amet urna. Quisque a justo dignissim, tincidunt turpis quis, rhoncus augue. Nunc non porttitor orci. Ut vestibulum gravida enim, ut pharetra enim aliquam quis. Nulla mollis, mauris id interdum elementum, diam orci dapibus turpis, et consectetur turpis diam scelerisque lorem. Ut sit amet odio enim. Nullam varius turpis vel malesuada eleifend. Aliquam at semper ligula. Sed sed interdum dolor, ac condimentum nulla.</p>'
  , 1 ,'', 0
  ,'<p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Vivamus sed malesuada augue. Aenean nec aliquam risus. Mauris sit amet eros aliquet, placerat sem non, viverra augue. Phasellus dignissim, erat sed sollicitudin convallis, enim felis elementum justo, eget molestie arcu nisl sit amet urna. Quisque a justo dignissim, tincidunt turpis quis, rhoncus augue. Nunc non porttitor orci. Ut vestibulum gravida enim, ut pharetra enim aliquam quis. Nulla mollis, mauris id interdum elementum, diam orci dapibus turpis, et consectetur turpis diam scelerisque lorem. Ut sit amet odio enim. Nullam varius turpis vel malesuada eleifend. Aliquam at semper ligula. Sed sed interdum dolor, ac condimentum nulla.</p>'
  ,'<p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Vivamus sed malesuada augue. Aenean nec aliquam risus. Mauris sit amet eros aliquet, placerat sem non, viverra augue. Phasellus dignissim, erat sed sollicitudin convallis, enim felis elementum justo, eget molestie arcu nisl sit amet urna. Quisque a justo dignissim, tincidunt turpis quis, rhoncus augue. Nunc non porttitor orci. Ut vestibulum gravida enim, ut pharetra enim aliquam quis. Nulla mollis, mauris id interdum elementum, diam orci dapibus turpis, et consectetur turpis diam scelerisque lorem. Ut sit amet odio enim. Nullam varius turpis vel malesuada eleifend. Aliquam at semper ligula. Sed sed interdum dolor, ac condimentum nulla.</p>'
  ,'<p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Vivamus sed malesuada augue. Aenean nec aliquam risus. Mauris sit amet eros aliquet, placerat sem non, viverra augue. Phasellus dignissim, erat sed sollicitudin convallis, enim felis elementum justo, eget molestie arcu nisl sit amet urna. Quisque a justo dignissim, tincidunt turpis quis, rhoncus augue. Nunc non porttitor orci. Ut vestibulum gravida enim, ut pharetra enim aliquam quis. Nulla mollis, mauris id interdum elementum, diam orci dapibus turpis, et consectetur turpis diam scelerisque lorem. Ut sit amet odio enim. Nullam varius turpis vel malesuada eleifend. Aliquam at semper ligula. Sed sed interdum dolor, ac condimentum nulla.</p>'
  ,'<p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Vivamus sed malesuada augue. Aenean nec aliquam risus. Mauris sit amet eros aliquet, placerat sem non, viverra augue. Phasellus dignissim, erat sed sollicitudin convallis, enim felis elementum justo, eget molestie arcu nisl sit amet urna. Quisque a justo dignissim, tincidunt turpis quis, rhoncus augue. Nunc non porttitor orci. Ut vestibulum gravida enim, ut pharetra enim aliquam quis. Nulla mollis, mauris id interdum elementum, diam orci dapibus turpis, et consectetur turpis diam scelerisque lorem. Ut sit amet odio enim. Nullam varius turpis vel malesuada eleifend. Aliquam at semper ligula. Sed sed interdum dolor, ac condimentum nulla.</p>'
  ,'<p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Vivamus sed malesuada augue. Aenean nec aliquam risus. Mauris sit amet eros aliquet, placerat sem non, viverra augue. Phasellus dignissim, erat sed sollicitudin convallis, enim felis elementum justo, eget molestie arcu nisl sit amet urna. Quisque a justo dignissim, tincidunt turpis quis, rhoncus augue. Nunc non porttitor orci. Ut vestibulum gravida enim, ut pharetra enim aliquam quis. Nulla mollis, mauris id interdum elementum, diam orci dapibus turpis, et consectetur turpis diam scelerisque lorem. Ut sit amet odio enim. Nullam varius turpis vel malesuada eleifend. Aliquam at semper ligula. Sed sed interdum dolor, ac condimentum nulla.</p>'
  ,'<p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Vivamus sed malesuada augue. Aenean nec aliquam risus. Mauris sit amet eros aliquet, placerat sem non, viverra augue. Phasellus dignissim, erat sed sollicitudin convallis, enim felis elementum justo, eget molestie arcu nisl sit amet urna. Quisque a justo dignissim, tincidunt turpis quis, rhoncus augue. Nunc non porttitor orci. Ut vestibulum gravida enim, ut pharetra enim aliquam quis. Nulla mollis, mauris id interdum elementum, diam orci dapibus turpis, et consectetur turpis diam scelerisque lorem. Ut sit amet odio enim. Nullam varius turpis vel malesuada eleifend. Aliquam at semper ligula. Sed sed interdum dolor, ac condimentum nulla.</p>'
  ,'', 0
  ,'sysadmin',GETDATE(),'N/A',GETDATE()
  , 1 , 0 , 0 , 0 , 0 , 0 , 0 ,'','',''
  , 0, 0, 0, GETDATE(), GETDATE()
  )

  GO

IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[rpt_PatronFilter_Expanded]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[rpt_PatronFilter_Expanded]
GO
CREATE procedure [dbo].[rpt_PatronFilter_Expanded]
 @ProgId int = null
,@BranchID int = null
,@School varchar(50) = null
,@LibSys varchar(50) = null
,@TenID int = null
,@Points int = 0
,@PointType int = -1
,@StartDate datetime = null
,@EndDate datetime = null
as
SET ARITHABORT  OFF
SET ANSI_WARNINGS OFF

select distinct Patron.PID
from Patron  
where 
	TenID = @TenID AND
	ProgID > 0 
	AND	(ProgID = @ProgId or @ProgId is null)
	AND (PrimaryLibrary = @BranchID or @BranchID is null)
	AND (rtrim(ltrim(isnull(SchoolName,''))) = @School or @School is null)
	AND (rtrim(ltrim(isnull(District,''))) = @LibSys or @LibSys is null)	
	AND 
		(@Points = 0 OR (Select isNull(SUM(NumPoints),0)
							from PatronPoints
							where (AwardReasonCd = @PointType or @PointType < 0)
								AND (AwardDate >= @StartDate or @StartDate is null)
								AND (AwardDate <= @EndDate or @EndDate is null)
								AND PatronPoints.PID = Patron.PID) >= @Points	
								)
								

GO

